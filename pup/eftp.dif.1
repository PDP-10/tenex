

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 1



LINE 1, PAGE 1
1)	;<SWEER>EFTP.MAC;5     2-Oct-81 11:11:34    EDIT BY SWEER
1)	; Added Echo test
1)	;EFTP.MAC.2    11-Jun-80 09:39:57    TECO'd by GILMURRAY
1)	; TOPS-20ize EFTP
LINE 1, PAGE 1
2)	;<PUP>EFTP.MAC.2    11-Jun-80 09:39:57    TECO'd by GILMURRAY
2)	; TOPS-20ize EFTP


LINE 7, PAGE 2
1)		SEARCH SYSDEF
1)	; Search appropraite universal file
1)	IFN FT10X,<SEARCH STENEX>
1)	IFN FT20,<SEARCH MONSYM>
1)	; Define appropriate SUMEX feature switch
1)	ifn ft10x,<sumxsw==0>
1)	ifn ft20,<sumex==0>
1)		SEARCH PUPDEF
1)	
1)	ifndef echosw,<echosw==0>	;non-zero to include ECHO command logic
1)					;note - if echosw is on you can't use
1)					;the resultant .REL file with PUPSRV/PUPFPT
1)	
LINE 7, PAGE 2
2)		SEARCH PUPDEF,MONSYM
2)	


LINE 62, PAGE 2
1)	; Flags
1)	
1)	ifn echosw,<
1)	ECHOF==1B2		; Echoing (as opposed to sending)
1)	> ;ifn echosw
1)	^L
LINE 1, PAGE 3
2)	^L


LINE 24, PAGE 3
1)	
1)	ifn echosw,<
1)	LACKPB==220	; Space allocated for Ack PB (words)
1)	> ;ifn echosw
1)	ife echosw,<
1)	LACKPB==^d25	; Space allocated for Ack PB (words)
1)	> ;ife echosw
1)	

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 2


1)	; Well known sockets
1)	
1)	ifn echosw,<
1)	sn.ech==5	; Echo
1)	> ;ifn echosw
1)	sn.eft==20	; EFTP Receive
1)	
1)	; Pup Types	
1)	
1)	ifn echosw,<
1)	PT.EME==1	; Echo Me
1)	PT.IAE==2	; I Am Echo
1)	PT.IAB==3	; I Am Bad Echo
1)	> ;ifn echosw
1)	PT.DAT==30	; EFTP Data
LINE 24, PAGE 4
2)	LACKPB==^D25	; Space allocated for Ack PB (words)
2)	
2)	; Pup Types
2)	
2)	PT.DAT==30	; EFTP Data


LINE 26, PAGE 4
1)	ife sumex!ft20,<
1)		MOVE A,[1B0+1B1+1B3+1B4+XWAIT]  ; Map, caps same as mine
LINE 26, PAGE 5
2)		MOVE A,[1B0+1B1+1B3+1B4+XWAIT]  ; Map, caps same as mine


LINE 32, PAGE 4
1)	>
1)	; Initialize timer interrupt
LINE 31, PAGE 5
2)	
2)	; Initialize timer interrupt


LINE 13, PAGE 5
1)		MOVEI A,sn.eft
1)	
1)	ifn echosw,<
1)		tlne	f,(echof)
1)		 movei	a,sn.ech
1)	> ;ifn echosw
1)	
1)		SKIPN SOCFSK(S)		; Foreign socket specified?
LINE 13, PAGE 6
2)		MOVEI A,20
2)		SKIPN SOCFSK(S)		; Foreign socket specified?


; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 3



LINE 54, PAGE 5
1)	ECLOS1:	
1)	ife sumex!ft20,<
1)		MOVE A,SOCFRK(S)	; Kill timer fork
1)		KFORK
1)	>
1)	ifn ft20,<
1)		move	a,[400000,,.timal]
1)		timer			; Remove any timer requests
1)		 jfcl
1)	>
1)	ifn sumex,<
1)		movei	a,400000
1)		setz	c,
1)		iit
1)	>
1)	ECLOS2:	POP P,S
LINE 48, PAGE 6
2)	ECLOS1:	MOVE A,SOCFRK(S)	; Kill timer fork
2)		KFORK
2)	ECLOS2:	POP P,S


LINE 18, PAGE 6
1)	
1)	ifn echosw,<
1)		tlne	f,(echof)	; Unless ECHO
1)		 hrli	b,pt.eme	; Then it's Echo Me
1)	> ;ifn echosw
1)	
1)	ESDAT0:	PUSH P,S		; Enter here from End code
LINE 18, PAGE 7
2)	ESDAT0:	PUSH P,S		; Enter here from End code


LINE 49, PAGE 6
1)	ife echosw,<
1)			 JRST ESDATX]
1)	> ;ife echosw
1)	ifn echosw,<
1)			tlnn	f,(echof)
1)			 JRST ESDATX
1)			movei	a,"T"
1)			pbout
1)			aos	terrs##
1)			jrst	.+1]	; Fail return
1)	> ;ifn echosw
1)		HRRZ A,SOCJFN(S)	; Get port JFN
LINE 43, PAGE 7

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 4


2)			JRST ESDATX]	; Fail return
2)		HRRZ A,SOCJFN(S)	; Get port JFN


LINE 71, PAGE 6
1)	ife sumex!ft20,<
1)		HRRZ A,SOCFRK(S)	; No, restart it
LINE 55, PAGE 7
2)		HRRZ A,SOCFRK(S)	; No, restart it


LINE 77, PAGE 6
1)	>
1)	ifn ft20,<
1)		move	b,soctim(s)	; Get time out
1)		imul	b,soctc(s)	; compute elapsed
1)		move	c,socchn(s)	; Channel to interrupt on
1)		move	a,[400000,,.timel]
1)		timer			; Set elapsed time timer
1)		 halt	.
1)	>
1)	ifn sumex,<
1)		move	c,soctim(s)	; Get time out
1)		imul	c,soctc(s)	; compute elapsed
1)		MOVN A,SOCCHN(S)	; Get channel to interrupt on
1)		MOVSI B,(1B0)
1)		LSH B,(A)		; Make mask
1)		movei	a,400000
1)		iit
1)	>
1)	
LINE 60, PAGE 7
2)	


LINE 101, PAGE 6
1)		 JRST [	
1)	ifn echosw,<
1)			push	p,a			; Save error code
1)			tlne	f,(echof)
1)			 pushj	p,[
1)				cain	a,pupx5		; Checksum error?
1)				jrst	[movei	a,"C"
1)					pbout
1)					aos	cerrs##
1)					popj	p,]
1)				caie	a,pupx3	; Time out?
1)				 jrst	[move	b,a	; No, save error number
1)					movei	a,"?"
1)					pbout
1)					movei	a,101

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 5


1)					movei	c,10
1)					nout
1)					 jfcl
1)					movei	a,"?"
1)					pbout
1)					aos	qerrs##
1)					popj	p,]
1)				popj	p,]
1)			pop	p,a			; Restore error code
1)	> ;ifn echosw
1)			CAIE A,PUPX3	; Failed, timed out?
1)			 JRST ESDAT3	; No, keep waiting
1)			PUSHJ P,UPDTIM	; Yes, update timeout interval
1)			
1)			JRST ESDAT1]	; Retransmit
LINE 66, PAGE 7
2)		 JRST [	CAIE A,PUPX3	; Failed, timed out?
2)			 JRST ESDAT3	; No, keep waiting
2)			PUSHJ P,UPDTIM	; Yes, update timeout interval
2)			JRST ESDAT1]	; Retransmit


LINE 10, PAGE 7
1)	
1)	ifn echosw,<
1)		cain	a,pt.iae	; I am ECHO?
1)		 jrst	[aos	numiae##
1)			pushj	p,dort	; Do round trip computation
1)			pushj	p,chkpkt; Check data, type . or D
1)			jrst	echoed]
1)		cain	a,pt.iab	; I am bad ECHO?
1)		 jrst	[aos	numiab##
1)			pushj	p,dort	; Do round trip computation
1)			movei	a,"B"
1)			pbout
1)			jrst	echoed]
1)	> ;ifn echosw
1)	
1)		CAIN A,PT.ACK		; EFTP Ack?
1)	ifn echosw,<
1)	echoed:	 
1)	> ;ifn echosw
1)		JRST [	AOS -LACKPB-2(P)  ; Yes, preset skip return
1)			AOS SOCSEQ(S)	; Increment sequence number
LINE 10, PAGE 8
2)		CAIN A,PT.ACK		; EFTP Ack?
2)		 JRST [	AOS -LACKPB-2(P)  ; Yes, preset skip return
2)			AOS SOCSEQ(S)	; Increment sequence number


; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 6



LINE 53, PAGE 7
1)	;assumes pb contains sent packet,,received packet on entry
1)	
1)	chkpkt:	push	p,5		; save work ac
1)		movss	pb		; make received pkt,,sent packet
1)		ldb	5,puplen	; length of sent pkt (puplen is indexed by pb)
1)		movss	pb		; restore pb
1)		subi	5,mnplen	; - header size
1)		jumpe	5,chkok		; no data to check
1)		hlrz	c,pb		; address of sent packet
1)		addi	c,pbcont	; Start at data
1)		tlo	c,(point 8,)	; form byte ptr
1)		hrrz	d,pb		; address of rcvd packet
1)		addi	d,pbcont	; Start at data
1)		tlo	d,(point 8,)	; form byte ptr
1)	chklup:	ildb	a,c		; sent byte
1)		ildb	b,d		; received byte
1)		caie	a,(b)		; well?
1)		 jrst	chkbad		; whoops!
1)		sojg	5,chklup
1)	chkok:	skipa	a,["."]
1)	chkbad:	movei	a,"D"		; Data error
1)		pbout
1)		pop	p,5		; restore work ac
1)		popj	p,
1)	
LINE 35, PAGE 8
2)	
2)	


LINE 35, PAGE 9
1)	ife sumex!ft20,<
1)		HRRZ A,SOCFRK(S)	; No, restart it
LINE 35, PAGE 10
2)		HRRZ A,SOCFRK(S)	; No, restart it


LINE 41, PAGE 9
1)	>
1)	ifn ft20,<
1)		move	b,soctim(s)	; Get time out
1)		imul	b,soctc(s)	; compute elapsed
1)		move	c,socchn(s)	; Channel to interrupt on
1)		move	a,[400000,,.timel]
1)		timer			; Set elapsed time timer
1)		 halt	.
1)	>
1)	ifn sumex,<

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 7


1)		move	c,soctim(s)	; Get time out
1)		imul	c,soctc(s)	; compute elapsed
1)		MOVN A,SOCCHN(S)	; Get channel to interrupt on
1)		MOVSI B,(1B0)
1)		LSH B,(A)		; Make mask
1)		movei	a,400000
1)		iit
1)	>
1)	
LINE 40, PAGE 10
2)	


LINE 52, PAGE 10
1)	ife sumex!ft20,<
1)			HRRZ A,SOCFRK(S)  ; Stop timer fork
1)			HFORK
1)	>
1)	ifn ft20,<
1)			move	a,[400000,,.timal]
1)			timer
1)			 halt	.
1)	>
1)	ifn sumex,<
1)	 		movei	a,400000
1)			setz	c,
1)			iit
1)	>
1)			MOVEI B,DLYTIM	; Set dally timeout
LINE 52, PAGE 11
2)			HRRZ A,SOCFRK(S)  ; Stop timer fork
2)			HFORK
2)			MOVEI B,DLYTIM	; Set dally timeout


LINE 70, PAGE 10
1)	ife sumex!ft20,<
1)			MOVEI B,TIMFRK	; Restart timer fork
1)			SFORK
1)	>
1)	ifn ft20,<
1)			move	a,[400000,,.timel]
1)			movei	b,dlytim
1)			move	c,socchn(s)
1)			timer
1)			 halt .
1)	>
1)	ifn sumex,<
1)			movei	c,dlytim
1)			movn a,socchn(s)	; get channel to interrupt on
1)			movsi b,(1b0)

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 8


1)			lsh b,(a)		; make mask
1)			movei	a,400000
1)			iit
1)	>
1)			JRST ERDAT1]	; Await second End
LINE 58, PAGE 11
2)			MOVEI B,TIMFRK	; Restart timer fork
2)			SFORK
2)			JRST ERDAT1]	; Await second End


LINE 9, PAGE 12
1)	ife sumex!ft20,<
1)	TIMFRK:	MOVE A,SOCTIM(S)	; Get timeout
LINE 9, PAGE 13
2)	TIMFRK:	MOVE A,SOCTIM(S)	; Get timeout


LINE 23, PAGE 12
1)	>
1)	
LINE 22, PAGE 13
2)	
2)	


LINE 41, PAGE 12
1)	ifn sumex!ft20,<
1)		setom	soctc(s)	; Reset timeout counter
1)	>
1)		DEBRK
LINE 40, PAGE 13
2)		DEBRK


LINE 76, PAGE 12
1)	ifn echosw,<
1)	dort:	time			; get now
1)		sub a,socstm(s)		; compute delay interval
1)	
1)		move	b,a
1)		cail	b,numbkt##
1)		 movei	b,numbkt-1
1)		aos	rtbkts##(b)	; round trip ms buckets
1)	
1)		camge	b,echmin##	; New min?
1)		 movem	b,echmin	; Yes
1)	
1)		camle	b,echmax##	; New max?
1)		 cain	b,numbkt-1
1)		  caia

; EFTP.MAC;6 & EFTP.MAC;3 27-Jan-82 0817	PAGE 9


1)		 movem	b,echmax	; Yes
1)	
1)		popj	p,
1)	> ;ifn echosw
1)	
LINE 72, PAGE 13
2)	
