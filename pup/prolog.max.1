;<134>PROLOG.MAC;15610    30-MAY-79 18:43:50    EDIT BY TAFT
; Add DIRSGR word in directory
;<134>PROLOG.MAC;15609     8-JUL-77 15:09:15    EDIT BY TAFT
; Add SFPOS jsys -- the code exists, just no jsys number for it!
;<134>PROLOG.MAC;15608     7-MAY-77 22:36:27    EDIT BY TAFT
; Make internal the symbols defined by HISWP
;<134>PROLOG.MAC;15607    25-JAN-77 21:41:51    EDIT BY TAFT
; Define ATPTY and CVSKT if either IMPCHN or PUPCHN defined
;<134>PROLOG.MAC;15606    28-SEP-76 16:20:29    EDIT BY TAFT
; Add DIRMOD word (same as DIREXL)
;<134>PROLOG.MAC;15605    12-AUG-76 10:46:05    EDIT BY TAFT
; Add more general mechanism for defining storage above swappable monitor.
; Assign NTBUFS there.
;<134>PROLOG.MAC;15604    11-JAN-76 20:56:06    EDIT BY TAFT
; Adjust bug string sizes
; Add EXTERN FILMOD
;<134>PROLOG.MAC;15603     9-JAN-76 19:50:22    EDIT BY TAFT
; Do ORG 0 at end to eliminate phase errors
;<134>PROLOG.MAC;15602     9-JAN-76 19:32:43    EDIT BY TAFT
; Remove ";;X(<DISPLA>...)" line from %TENX% -- old Macro stumbles over it
;<134>PROLOG.MAC;15601     9-JAN-76 14:38:04    EDIT BY TAFT
; Soup merge to 1.34
;<135-TENEX>PROLOG.MAC;156     5-DEC-75 13:51:29    EDIT BY ROSENBERG
; ADD THE %TENX% MACRO, AND USE IT FOR THE DFBGP MACRO AND IN POSTLD
;<135-TENEX>PROLOG.MAC;155    13-NOV-75 21:30:53    EDIT BY BELL
; ADD TNDBG JSYS
;<135-TENEX>PROLOG.MAC;154    13-NOV-75 11:30:27    EDIT BY CALVIN
; Increase space for Bugstrings in ACCTJS
;<134-TENEX>PROLOG.MAC;153     9-OCT-75 17:19:35    EDIT BY ALLEN
; INCREASE BUG SPACE FOR NETWRK AND DSK
;<134-TENEX>PROLOG.MAC;152    18-SEP-75 10:17:25    EDIT BY TOMLINSON
; INCREASED BUG SPACE FOR IMPDV TO 50 FROM 40
;<134-TENEX>PROLOG.MAC;151    15-SEP-75 17:29:56    EDIT BY PLUMMER
; REMOVE PLOCK
;<134-TENEX>PROLOG.MAC;150    29-AUG-75 11:44:35    EDIT BY ALLEN
;<134-TENEX>PROLOG.MAC;149    28-AUG-75 16:19:12    EDIT BY ALLEN
; REVISE LOCK AND UNLOCK TO PROVIDE SPECIAL SCHEDULING ONLY
; ON EXPLICIT REQUEST
;<134-TENEX>PROLOG.MAC;148    30-JUL-75 14:16:50    EDIT BY CALVIN
; Increased JFNPC0 by 20(8) to 474
;<134-TENEX>PROLOG.MAC;147    30-JUL-75 11:43:04    EDIT BY CALVIN
; Made GTJFN have 3 bug strings
;<134-TENEX>PROLOG.MAC;146    28-JUL-75 16:26:50    EDIT BY CALVIN
; Added job storage for default file accounts
;<134-TENEX>PROLOG.MAC;145    19-JUN-75 11:08:33    EDIT BY BTHOMAS
; DECLARE SETER JSYS (INVERSE OF GETER)
;<134-TENEX>PROLOG.MAC;144    23-MAY-75 12:14:50    EDIT BY ALLEN
;<134-TENEX>PROLOG.MAC;143    23-MAY-75 11:57:22    EDIT BY ALLEN
; EXTERN IN RETERR DEFINITION NOW CONDITIONAL
;<134-TENEX>PROLOG.MAC;142    11-MAY-75 21:05:13    EDIT BY TOMLINSON
; ADDED BUGSTRINGS FOR TNET
;<134-TENEX>PROLOG.MAC;141    28-APR-75 14:36:54    EDIT BY CLEMENTS
;<134-TENEX>PROLOG.MAC;140    28-APR-75 13:52:34    EDIT BY CLEMENTS
;<134-TENEX>PROLOG.MAC;139    28-APR-75 11:16:04    EDIT BY CLEMENTS
; COMBINING FILEDEF INTO PROLOG
;<134-TENEX>PROLOG.MAC;138    23-APR-75 13:31:28    EDIT BY CLEMENTS
; MOVED BUGSTRINGS AREA DEFINITIONS TO PROLOG FROM PARAMS
; ADDED NAMES OF PIECES OF SWPMON
;<134-TENEX>PROLOG.MAC;137    10-APR-75 23:12:06    EDIT BY ALLEN
; ADD HIQCNT AND SPQCNT TO PSB
;<134-TENEX>PROLOG.MAC;136    10-APR-75 23:03:48    EDIT BY ALLEN
; REVISED LOCK-UNLOCK MACROS
;<134-TENEX>PROLOG.MAC;135    12-MAR-75 20:43:49    EDIT BY PLUMMER
;<134-TENEX>PROLOG.MAC;134    12-MAR-75 13:19:39    EDIT BY PLUMMER
; SIGNAL JSYS DEFINITIONS
;<134-TENEX>PROLOG.MAC;133    24-JAN-75 13:06:39    EDIT BY CLEMENTS
; LISTING CLEANUP. PREPARE FOR MACRO V50
;<134-TENEX>PROLOG.MAC;132    10-JAN-75 12:04:46    EDIT BY ALLEN
;<134-TENEX>PROLOG.MAC;131    10-JAN-75 12:01:16    EDIT BY ALLEN
; LOCK MACRO HI-QUEUES THE FORK IN PIE-SLICE SYSTEM
;<133>PROLOG.MAC;13011     3-DEC-75 22:32:37    EDIT BY TAFT
; Make error macros not do EXTERNs of error mnemonics
;<133>PROLOG.MAC;13010     3-DEC-75 20:04:22    EDIT BY TAFT
; Increase NOFN from 400 to 1000
;<133>PROLOG.MAC;13009    17-NOV-75 14:45:31    EDIT BY TAFT
; Remove JMC defs (now in STENEX)
;<133>PROLOG.MAC;13008    10-NOV-75 21:22:51    EDIT BY TAFT
; PPRMPG def moved to PARAMS
;<133>PROLOG.MAC;13007    17-OCT-75 19:21:46    EDIT BY TAFT
; Add GFBLP, SFBLP JSYSes and Byte-Lisp parameter cells in PSB.
; Delete an ac block to make them fit.
;<133>PROLOG.MAC;13006     5-SEP-75 00:47:41    EDIT BY TAFT
; Increase SSTSIZ to 36000
;<133>PROLOG.MAC;13005    13-JUN-75 20:48:35    EDIT BY TAFT
; Define SWPST here (rather than in SWPMON), relocate to just
;  below MDDT to conserve swappable page storage
;<133>PROLOG.MAC;13004    13-JUN-75 17:15:25    EDIT BY TAFT
; Add Pup jsyses
;<133>PROLOG.MAC;13003    15-MAY-75 15:11:22    EDIT BY TAFT
; Add CPUTL jsys
;<133>PROLOG.MAC;13002     8-FEB-75 15:44:52    EDIT BY TAFT
; Revise LOCK and UNLOCK macros
;<133>PROLOG.MAC;13001     4-JAN-75 18:53:58    EDIT BY TAFT
; SOUP merge to 1.33
;<133-TENEX>PROLOG.MAC;130     9-DEC-74 18:46:47    EDIT BY CALVIN
; Added JSYS defn's 327-335
;<132>PROLOG.MAC;12311     4-OCT-74 16:43:36    EDIT BY TAFT
; Add SPPAR jsys
;<132>PROLOG.MAC;12310    25-SEP-74 02:19:45    EDIT BY FIALA
; Changed PGRLAG to do PSWIT instead of CBASE MAPCLR
;<132>PROLOG.MAC;12308    26-JUL-74 10:04:09    EDIT BY FIALA
;<132>PROLOG.MAC;12307    26-JUL-74 01:12:47    EDIT BY TAFT
; Use clock device number for initiated scheduler interrupts (ISB). (ERF)
; Added new JMC's and UJMC's, changed PSWIT to clear from PLO,
;   added event counter for map clearing macros, added APGCLR macro. (ERF)
; Removed Maxc-Nvio communication stuff, MMAP and CST0 defs to PARAMS
;   to keep in one group and to permit relocation of MMAP and CST0. (ERF)
; Make PGRLAG be CBASE followed by MAPCLR. (EAT)
; Define BCOUNT and ECOUNT here. (EAT)
; SOUP merge PARC 1.31 changes into 1.32. (EAT)
; Mods to use new BBN macros for pager operations. (EAT)
;<TENEX-132>PROLOG.MAC;123    16-JUN-74 22:45:15    EDIT BY CLEMENTS
;<131>PROLOG.MAC;8707    19-MAY-74 01:24:05    EDIT BY TAFT
; Define CHNOF1/CHNON1 for use in code possibly run at interrupt level
; Take out USRIO JSYS.  (ERF)
; 1.29 to 1.31 conversion (EAT)
; Assign DSKBTB here rather than in DSK.  (ERF & EAT)
; Define Maxc JMC's.  Redefine JRST as JUMPA.  (ERF)
;Add PICTR and OICTR to process state.  (ERF)
;Redefine CHNOFF, CHNON, ISB, SETACB to use JMC's.  (ERF & EAT)

	UNIVERSAL PROLOG
	PASS2

;PC ADJUSTMENT FOR USE MACRO

RESPC==.
DEFINE .OLDPC(VAL)<RESPC==VAL>

;GENERAL PARAMETERS AND MACROS

EOL=37			;END OF LINE CHARACTER

UMODF==10000		;USER MODE FLAG IN PC WORD
UIOF==4000		;USER I/O MODE IN PC WORD
NUPDL==120		;PDL FOR MONITOR CALLS

NFKS==<7*NJOBS>/2	;NUMBER OF FORKS 3.5 PER JOB
IFGE NJOBS-^D50,<NFKS==3*NJOBS>	;UNLESS LOTS OF JOBS
NSAC==16		;HIGHEST AC SAVED BY MENTR
NTERMI==^D36		;NUMBER OF TERMINAL INTERRUPTS
NPILEV==3		;NUMBER OF PSEUDO-INTERRUPT LEVELS
NPIPDL==40		;SIZE OF PSI LOCAL PDL
NTSK==50		;SIZE OF PAGE TRAP PDL
NUFKS==30		;MAX NUMBER FORKS/JOB
NLFKS==20		;NUMBER OF LOCAL FORKS
NWSPGS==<1000/44>+1	;SIZE OF WORKING SET PAGES BIT TABLE, 1 BIT/PG

APRCHN==3		;APR PI CHANNEL
SCDCHN==7		;SCHEDULER PI CHANNEL

PI==4			;DEVICE CODE FOR PI

;PAGER BITS

READB==1B20		;READ ALLOW
WRITEB==1B21		;WRITE ALLOW
XCTB==1B22		;EXECUTE ALLOW
USRLKB==1B25		; PAGE LOCKED BY USER
TRAPUB==1B26		;TRAP TO USER BIT
COPYB==1B27		;COPY ON WRITE
ACCESB==1B30		;ACCESS ALLOW
CORMB=1B9		;MODIFIED BIT IN CST0

RWXB==READB+WRITEB+XCTB+ACCESB	;ALL ACCESS
RWX==RWXB-ACCESB
RCW==READB+COPYB	;READ AND COPY ON WRITE

;BITS IN MAP WORD

SHRBIT==1B19		;SHARE POINTER
INDBIT==1B18		;INDIRECT POINTER

;PAGER HARDWARE PARAMETERS

PGR==24			;DEVICE NUMBER
PGR71=71		;PAGER RELOAD REGISTER (PT.PSB)
PGR72=72		;PAGER RELOAD REGISTER (AGE.PROCESS BIT)

;PARAMETERS FOR CLOCK CONTROL. CAN RUN WITH 1 MS CLOCK AS
; SUPPLIED IN BBN MODS TO KA-10, OR WITH DEC DK10 CLOCK,
; OR WITH NEITHER. IF NEITHER, ASSEMBLE FOR BBN CLOCK - CODE
; WORKS ANYWAY.

IFE DK10F,<		;CODE FOR BBN CLOCK OR NO CLOCK

OAP==20			;CLOCK AND DOORBELL DEVICE.

DEFINE MSCKON
<	CONO OAP,1B29>	;CLOCK ON

DEFINE MSCKOF
<	CONO OAP,1B29>	;SAME. FLOP COMPLEMENTS.

DEFINE SOMSCK
<	CONSO OAP,1B28>	;SKIP IF CLOCK FLAG ON

DEFINE MSCKCL
<	CONO OAP,1B28>	;CLEAR CLOCK FLAG
>;END OF BBN CLOCK
IFN DK10F,<

CLK==070		;DK10 CLOCK DEFINITIONS

DEFINE MSCKON
<	CONO CLK,1B30+APRCHN>

DEFINE MSCKOF
<	CONO CLK,1B29+APRCHN>

DEFINE SOSMCK
<	CONSO CLK,1B31!1B32>	;CHECK OVERFLOW TOO

DEFINE MSCKCL
<	CONO CLK,1B31+1B32+APRCHN>
>;END OF DK10 DEFS

;BITS FOR CONO/CONI APR

IFN KIFLG,<
APNXM==1B29
APCHNS==<APRCHN>B32+APRCHN	;KI APR HAS 2 PI ASMTS
>
IFN KAFLG,<
APNXM==1B23			;NON EX MEM FLAG
APCHNS==APRCHN
>
;PARAMETERS USED IN PAGEM AND SCHED

NOFN==1000		;NUMBER OF SPT SLOTS FOR OFN'S
SPTM==017777		;MASK FOR SPT INDICES (MAX SPT LENGTH)
THAWB==1B20		;THAWED FILE BIT
FILWB==1B19		;FILE WRITE BIT
SPTLKB==1B22		;IN LH OF SPTH(OFN): XB IN USE BY DDMP
NEWFB==1B33		;NEW FILE OR FILE PAGE BIT
DRPERM==1B23		;PERMANENT ON DRUM PAGE
BWRBIT==1B31		;WRITTEN (CHANGED) FROM HOME COPY
PLKV==1B27		;FOR LOCK VALUE IN CST1
BP1==^D10		;BIT POSITION OF PROCESS 0 IN CST0
DSKSWB==1B20		;SWAP TO DISK REQUESTED
CORWB==<Z (CORMB)>	;RH VALUE FOR USE AS GLOBAL
DWRBIT==<Z (1B0)>	;WRITE BIT IN CST3
SWPERR==<Z (1B1)>	;SWAP ERROR BIT IN CST3
AGTICK==^D20		;MILLISECONDS PER TICK OF AGE REGISTER
AGSEC==^D1000/AGTICK	;AGE-TICKS PER SECOND

;FIXED REAL CORE LOCATIONS

NJDVPG==1		;NORMAL JSYS DISPATCH IS REAL CORE PAGE 1
NJDV==<NJDVPG>B26	;NORMAL JSYS DISPATCH

;MONITOR MAP BOUNDARIES

IFN KAFLG,<
SWPMPG==NRESBG/1000	;SWAPPABLE REGION
>
IFN KIFLG,<
PPRMPG==340
SWPMPG==400
>
PJMPG==600		;PER JOB REGION
PPMPG==740		;PER PROCESS REGION
PPRMA==<PPRMPG>B26
SWPMA==<SWPMPG>B26
DSKBPG==SWPMPG		; Swappable storage reserved for disk bit table
DSKBTB==SWPMA
NRESBG==<DSKBTB+NTRACK*NBWTK+777>&777000  ; Start swap storage at page boundary
PJMA==<PJMPG>B26
PPMA==<PPMPG>B26

;SWAPPER PAGES RESERVED IN PROCESSOR-PRIVATE AREA

DEFINE ASNPPG(P,N)
<P==PPGCT
PPGCT==PPGCT+N
P'A=<P>B26
>

PPGCT==PPRMPG		;ASSIGN SOME PAGES IN THIS REGION

ASNPPG CSWPG,1		;SWAPPER TEMP
ASNPPG FITPG,1		;FORK INIT TEMP
ASNPPG PRLPG,1		;FORK PRELOADING MAP TEMP
IFN KIFLG,<
ASNPPG KIPG,1		;TEMP FOR KI SIMULATION ROUTINE
>
ASNPPG PIPG,1		;TO REFERENCE REAL CORE AT PI LEVEL

NRSPG==PPGCT-PPRMPG	;NUMBER OF PAGES RESERVED AT BOTTOM OF SWP MON
IFL SWPMPG-PPRMPG-NRSPG,<PRINTX ?Not enough pages reserved for per-processor storage>

;SPECIAL RESERVED AREA FOR MDDT REENTRANT CODE
;PRIVATE SEGMENT LIVES IN PER-PROCESS AREA

LMDDT==10000		;LENGTH OF MDDT AREA
MDDTPG==PJMPG-LMDDT/1000 ;DDT LIVES AT HIGH END OF SWPMON AREA
MDDT=<MDDTPG>B26

; Macro to reserve large hunks of storage above swappable monitor
; so as not to overtax normal swappable storage regions.

DEFINE HISWP(NAM,SIZ) <
HSWPBG==HSWPBG-SIZ
NAM=:HSWPBG
>
HSWPBG==:MDDT

SSTSIZ==36000		; Maximum size of swappable symbol table
HISWP(SWPST,SSTSIZ)
IFDEF IMPCHN,<HISWP(NTBUFS,NNTBFS)>

;JOB-COMMON AREA

JDVPG==PJMPG		;JSYS DISP IS FIRST PAGE IN PER JOB AREA
JDV==<JDVPG>B26

JSBPG==PJMPG+1		;JSB IS SECOND PAGE IN JOB-COMMON AREA
JSB=<JSBPG>B26

FREJP==JSBPG+4		;4 PAGES RESERVED FOR JSB EXPANSION
FREJPA=<FREJP>B26

;JFN STORAGE PARAMETERS

JFNPC0=JSB+474			;MUST BE ADJUSTED IF JSB STORAGE GROWS
NJFNW==1_SJFN			; = 2^SJFN
MJFN=<<FREJPA-JFNPC0>/NJFNW> ;MAX NUMBER JFNS
RJFN=MJFN*NJFNW			;ACTUAL SPACE USED BY JFNS

;PROCESS-PRIVATE AREA

PSB=777000		;PSB IS TOP PAGE OF MAP
PSBPG==<PSB>B44

UPTA=PSB-1000		;USER PAGE TABLE
UPTPG==<UPTA>B44

UACPG==PSBPG-2		;VIRTUAL PAGE FOR AC SAVE BLOCKS
UACPGA==<UACPG>B26

DEFINE ASNPPG (P,N)
<P==PPGCT
PPGCT=PPGCT+N
P'A=<P>B26 >

PPGCT=PPMPG		;VARIOUS PROCESS RESERVED PAGES

ASNPPG CXBPG,1		;SWAPPER, MAP TEMP
ASNPPG CPTPG,1		; ..
ASNPPG CPYPG,1		; ..
ASNPPG DDPG1,1		;DDMP
ASNPPG DDPG2,1		; ..
ASNPPG PSIPG,1		;PSI IN PROGRESS STORAGE
ASNPPG FTPG1,1		;FORK
ASNPPG FPBPG,1		;FORK, HOLDS OBJECT PSB

FPG2==DDPG1		;USED BY SSAVE
FPG2A=DDPG1A
JSBPA=DDPG1A		; USED BY GACTJ FOR MAPPING JSB'S
FPG3==DDPG2
FPG3A=DDPG2A
DDTPPG==774		;MDDT PRIVATE SEGMENT

ALRMAX==0		;NUMBER OF PAGES RESERVED FOR ALR
ALRVAL==10-<ALRMAX>B40	;3-BIT QUANTITY FOR PAGER ALR

NBLPAR==4		; # state words for Byte-Lisp parameters
BLPOFS==10		; SLOC offset for first Byte-Lisp parameter
;AC DEFINITIONS

STS=:0
A=:1
B=:2
C=:3
D=:4
UNIT=:5
IOS=:6
E=:7
F=:10
JFN==:11	; JOB FILE NUMBER
NUM==:12	; USED AROUND GTJFN LOOP TO ACCUMULATE NUMBERS
DEV==:13	; LH DEVICE BITS, RH DEVICE DISPATCH TABLE
F1==:14		; MORE FLAGS FOR GTJFN AND LOOKUP ROUTINES
NSAC==F1+1	; NUMBER OF AC'S TO SAVE WHEN CALLING OTHER ROUTINES
P=:17		;UNIVERSAL STACK

OPDEF JSYS [104B8]
OPDEF CALL [PUSHJ P,0]
OPDEF RET [POPJ P,0]
IFN KAFLG,<
OPDEF XCTUU [XCT 7,0]
OPDEF XCTMU [XCT 1,0]
OPDEF XCTUM [XCT 4,0]
OPDEF XCTBU [XCT 3,0]
>
IFN KIFLG,<
OPDEF XCTUU [XCT 3,0]
OPDEF XCTMU [XCT 2,0]
OPDEF XCTUM [XCT 1,0]
OPDEF XCTBU [XCT 3,0]

DEFINE UMOVE (A,L)
<	XCTUU [MOVE A,L]>
DEFINE UMOVEM (A,L)
<	XCTUU [MOVEM A,L]>
DEFINE UMOVEI (A,L)
<	PRINTX !UMOVEI NOT AVAILABLE ON KI-10!>
DEFINE UMOVES (A,L)
<	XCTUU [MOVES A,L]>
>;END OF KI-10 DEFINITIONS

;LOCAL STORAGE ALLOCATION MACRO

DEFINE LS (T,N)
<	IFB <N>,<ASSIGN T,RESVLC,1>
	IFNB <N>,<ASSIGN T,RESVLC,N>>

;GLOBAL STORAGE

DEFINE GS (T,N)
<	IFB <N>,<ASSIGN T,RESVLC,1>
	IFNB <N>,<ASSIGN T,RESVLC,N>
>

;SWAPPABLE STORAGE

DEFINE NGS (T,N)
<	IFB <N>,<ASSIGN T,NRESLC,1>
	IFNB <N>,<ASSIGN T,NRESLC,N>
>

;SWAPPABLE STORAGE ASSIGNED PAGE-AT-A-TIME

DEFINE NGSP(T,N)
<	IFB <N>,<ASSIGN T,NRPLOC,1000>
	IFNB <N>,<ASSIGN T,NRPLOC,N*1000>
>

;SWAPPABLE, RESIDENT CODE

DEFINE SWAPCD<USE SWAPPC>
DEFINE RESCD<USE RESPC>

;REDEFINE TITLE TO DO ALL NECESSARY INITIAL THINGS

SYN TITLE,%TITLE

DEFINE TITLE(TT)
<	%TITLE TT
   IF2,<IFDEF SCDV1,<
	TSMAC(TTS)
	JSMAC(JJS)>
     IFDEF LDINIT,<
	JSYSLC==0
	EXTERN UJSYS
	JDMAC(LJD)>
   >
>

IFDEF .ORG,<
SYN .ORG,ORG>		;FOR DEC MACRO V50 AND LATER
IFDEF .ASSIGN,<
SYN .ASSIGN,ASSIGN>	; ..

; THE FOLLOWING MACRO DEFINES THE LIST OF TENEX MODULES IN THE ORDER
; IN WHICH THEIR SYMBOLS ARE TO BE DELETED TO REDUCE THE SIZE OF THE
; SYMBOL TABLE. EACH ENTRY HAS THREE ARGUMENTS, AS FOLLOWS:
; FIRST ARGUMENT: MODULE (OR BLOCK) NAME
; SECOND ARGUMENT: -1 MEANS DON'T DEFINE BUGSTRING SYMBOLS
;                   0 MEANS DEFINE BUGSTRING SYMBOLS, BUT DON'T
;                           ALLOCATE BUGSTRING SPACE
;                   .GT. 0 MEANS DEFINE BUGSTRING SYMBOLS, AND
;                                ALLOCATE SPACE FOR THAT MANY BUGSTRINGS
; THIRD ARGUMENT: +1 MEANS DON'T DELETE ANY SYMBOLS FROM THIS MODULE
;                          (OR BLOCK)
;                  0 MEANS DELETE ALL SYMBOLS (BOTH LOCAL AND GLOBAL)
;                          FROM THIS MODULE, WHETHER OR NOT IT IS
;                          NECESSARY TO REDUCE THE SIZE OF THE SYMBOL
;                          TABLE
;                 -1 MEANS DELETE ONLY LOCAL SYMBOLS FROM THIS MODULE,
;                          AND ONLY DO IT IF IT IS NECESSARY TO REDUCE
;                          THE SIZE OF THE SYMBOL TABLE
DEFINE	%TENX%(X),<
	X(<EDDT>,-1,0)
	X(<JOBDAT>,-1,0)
	X(<TENDMP>,-1,0)
	X(<LDINIT>,0,-1)
	X(<STORAG>,0,-1)
	X(<SYSNAM>,0,-1)
	X(<POSTLD>,0,-1)
	X(<RITH>,-1,-1)
	X(<FLIN>,-1,-1)
	X(<FLOUT>,-1,-1)
	X(<DATIME>,-1,-1)
	X(<NIL>,0,-1)
	X(<DEVICE>,0,-1)
	X(<STRING>,0,-1)
	X(<SIGNAL>,0,-1)
	X(<FILTTY>,0,-1)
	X(<PTR>,0,-1)
	X(<PTP>,0,-1)
	X(<DECTAP>,10,-1)
	X(<SRIARC>,10,-1)
	X(<LINEPR>,20,-1)
	X(<DISC>,10,-1)
	X(<FREE>,10,-1)
	X(<MAGTAP>,10,-1)
	X(<PLOTTE>,0,-1)
	X(<LOOKUP>,10,-1)
	X(<DIRECT>,20,-1)
	X(<GTJFN>,3,-1)
	X(<ACCTJS>,20,-1)
	X(<DEVJS>,14,-1)
	X(<FILEJS>,10,-1)
	X(<LOGJS>,20,-1)
	X(<HOSTS>,0,-1)
	X(<IO>,0,-1)
	X(<DAC>,0,-1)
	X(<ADC>,0,-1)
	X(<FILINI>,30,-1)
	X(<FUTILI>,0,-1)
	X(<MCA>,40,-1)
	X(<PUPNM>,20,-1)
	X(<JOBINI>,6,-1)
	X(<JOBZRO>,10,-1)
	X(<LOG2JS>,4,-1)
	X(<MONJS>,4,-1)
	X(<FORKS>,14,-1)
	X(<SYSINI>,14,-1)
	X(<DRM>,30,-1)
	X(<TNET>,10,-1)
	X(<STENEX>,-1,-1)
	X(<PROLOG>,-1,-1)
	X(<PUP>,160,-1)
	X(<TTYSRV>,20,-1)
	X(<NETWRK>,15,-1)
	X(<DSK>,60,-1)
	X(<SSASRV>,10,-1)
	X(<IMPDV>,50,-1)
	X(<PISRV>,24,-1)
	X(<SCHED>,34,-1)
	X(<PAGEM>,110,-1)
>

;PARAMETERS FOR BUG STRING STORAGE

DEFINE	DFBGP(NAM,NSTRNGS,WHEN)<
IFGE NSTRNGS, <
%P'NAM==..BGP
%S'NAM==..BGS
%N'NAM==NSTRNGS
..BGP==..BGP+NSTRNGS
..BGS==..BGS+10*NSTRNGS>>

NBUGP==:3000		; SIZE OF BUG POINTER AREA
SBUGTF==:10000		; SIZE OF (COMPACTED) BUGTABLE IMAGE FILE
STRBGP==:6000		; START OF POINTER AREA (ITS COMPACTED IN PLACE)
..BGP==:STRBGP		; BEGINNING OF POINTER AREA (COMPACTED IN PLACE)
..BGS==STRBGP+SBUGTF	; BEGINNING OF STRING AREA BEFORE COMPACTION.
; IT IS COMPACTED IMMEDIATELY AFTER THE COMPACTED POINTERS

	%TENX%(DFBGP)

IFG ..BGP-STRBGP-NBUGP,<
PRINTX TOO MANY BUGSTRINGS ALLOCATED IN PROLOG
>

PURGE	..BGP,..BGS

; NON-VARIABLE PARAMETERS -- USED GLOBALLY

; CAPABILITY BITS

WHEEL==:400000
OPER==:200000
OPR==OPER		;SOME USES OF THIS NOT YET EDITTED OUT
MAINT==:040000
NETWIZ==:020000		; NETWORK WIZARD
ABSOKT==:010000		;ABSOLUTE SOCKET CAPABILITY
LOG==:040000		;LOG CAP, IN LEFT HALF.

; BIT DEFINITIONS IN FACTSW

FACTON==:1B0		;FACT FILE IS ON
CHKDSE==:1B2		;CHECKDSK DISCOVERED ERRORS
CHKDSR==:1B3		;CHECKDSK RUNNING UNDER JOB ZERO


DEFINE CHNOFF (CHN)
<	LEVOFF 1B<27+CHN>-1>

DEFINE CHNON (CHN)
<	LEVON 1B<27+CHN>-1>

; CHNOFF and CHNON for code executed either at process level or at
;  the interrupt level being turned off/on

DEFINE CHNOF1(CHN) <
	CONSO PI,1B<20+CHN>	;; Do CHNOFF only if not at interrupt level
	CHNOFF CHN
>
DEFINE CHNON1(CHN) <
	CONSO PI,1B<20+CHN>
	CHNON CHN
>

DEFINE ISB (CHN) <
IFE CHN-SCDCHN,<IDEV 10>	; Initiate scheduler interrupt
IFE CHN-DLSCHN,<IDEV 13>	; Initiate DLS interrupt
IFN <CHN-SCDCHN>*<CHN-DLSCHN>,<PRINTX BAD USE OF ISB>
>
DEFINE TESTI(CHN)
<	CONSZ PI,1B<28+CHN>>
IFN KIFLG,<
DEFINE CLSB (CHN)
<	CONO PI,1B22+1B<28+CHN>>
>
DEFINE UNBRK (DEV)
<	EXTERN DEV'CHR
	JRST DEV'CHR>

;INSTRUCTION TRAP ERROR

DEFINE ITERR (ERN)
<IFNB <ERN>,<
	JRST [	MOVEI 1,ERN
		JRST ITRAP1]
>
IFB <ERN>,<
	JRST ITRAP
>>
DEFINE RETERR (ERN)
<IFNB <ERN>,<
	IFNDEF ERN,<EXTERN ERN>
	JRST [	MOVEI 1,ERN
		JRST MRETNE]
>
IFB <ERN>,<
	JRST MRETN
>>

OPDEF JRST [JUMPA]	; JUMPA 3 cycles faster than JRST on Maxc

;SCHEDULING CONTROL MACROS

DEFINE NOSWAP
<	AOS NSWAP>

DEFINE OKSWAP
<	SOSG NSWAP
	AOS ISKED>

DEFINE RESKED
<	AOS ISKED
	EXTERN ISKED
	ISB SCDCHN>

;RESKED MACRO WHICH REQUESTS ONLY BALANCE SET RESCHEDULE
;WITHOUT WAIT LIST SCAN (AS OCCURS WITH RESKED)
DEFINE RESKD1
<	AOS PSKED
	EXTERN PSKED
	ISB SCDCHN>


DEFINE NOSKED
<	AOS NSKED>

DEFINE OKSKED
<	SOSG NSKED
	XCT RSKED>

;NOSKED AND OKSKED FOR CODE POSSIBLY BEING RUN UNDER SCHEDULER

DEFINE NOSKD1
<	SKIPN INSKED
	AOS NSKED>

DEFINE OKSKD1
<	SKIPN INSKED
	SOSLE NSKED
	CAIA
	XCT RSKED>

;SCHEDULER ENTRY CALL - CONDITIONAL BECAUSE CAN'T BE A JSYS ON KI-10
IFN KAFLG,<
DEFINE ENTSKD
<	JSYS ENSKED>>
IFN KIFLG,<
DEFINE ENTSKD
<	JSR ENSKR>>

;MACROS TO SWITCH PROCESS OVER TO CPU WHICH HAS NEEDED I/O DEVICE

DEFINE RUNON0<>
DEFINE RUNON1<>

;PSI CONTROL

DEFINE NOINT
<	AOS INTDF>

DEFINE OKINT
<	XCT INTDFF>

DEFINE TSTINT
<	SKIPE PSIBW>

;HANDY MACROS FOR LOCKS

	DEFINE LOCK (LCK,FAIL,Q,LOQ)
<IFN PIESLC,<
IFNB <Q>,<PUSHJ P,SET'Q##>>

	AOSE LCK

IFB <FAIL>,<PUSHJ P,CNTLCK##>

IFNB <FAIL>,<
	IFB <LOQ>,<FAIL>
	IFNB <LOQ>,<JRST [IFNB <Q>,<PUSHJ P,REL'Q##>
			FAIL]>
>>

	DEFINE UNLOCK (LCK,R,Q)
<IFNB <R>,<SETOM LCK>
IFB <R>,<SOSL LCK
		PUSHJ P,CNFLCT##>

IFN PIESLC,<
	IFNB <Q>,<PUSHJ P,REL'Q##>>
>


; Macros to begin and end opcode counting
DEFINE BCOUNT <CALL BOPCNT>
DEFINE ECOUNT <CALL EOPCNT>

;PAGER INSTRUCTIONS - DEPENDENT ON CPU

IFN KAFLG,<

;CLEAR AR'S AND LOAD PARAMETERS

DEFINE PGRCLD
<	CONO PGR,0>

;CLEAR SPECIFIED MONITOR PAGE

DEFINE MONCLR(A)
<	CONO PGR,1>	;CLEARS ALL MONITOR AR'S

;LOAD AGE REGISTER

DEFINE PGRLAG
<	CONO PGR,0>	;LOADS ALL PARAMETERS ON KA-10

;TURN ON PAGING EXCEPT RESIDENT MONITOR

DEFINE PGRON
<	CONO PGR,6
	DATAO APR,[776776,,0]>

;TURN OFF PAGING SO ALL REF'S GO TO REAL CORE

DEFINE PGROFF
<	CONO PGR,4>

;SET AC BLOCKS FOR UMOVEX GROUP

DEFINE SETACB (A)
<	DPB A,[POINT 5,PGR71,22]
	CONO PGR,0>
>;END OF KA-10 DEFINITIONS

IFN KIFLG,<		;CORRESPONDING ROUTINES FOR KI-10

;MONITOR LUUO'S

OPDEF .IMCLR [1B8]	;MONITOR MAP CLEAR

;TRAP MUUO'S

OPDEF .PGTRP [40B8]	;PAGE FAULT, USER OR MONITOR
OPDEF .AROVT [41B8]	;AR OV, USER ONLY
OPDEF .PDOVT [42B8]	;PDL OV , USER OR MONITOR

;NO-TRAP UUO'S ARE JSYS (104) AND TOPS-10 MONITOR CALLS,
; DEFINED ELSEWHERE

;PAGER INSTRUCTIONS FOR KA-10 PAGER SIMULATOR

DEFINE PGRCLD
<	JSR KIPCLD>	;CLEAR AR'S AND LOAD PARAMETERS

DEFINE MONCLR (A)
<	.IMCLR A>	;CLEAR MONITOR PAGE A
DEFINE PGRLAG
<	CALL KIPLAG>	;LOAD AGE REGISTER
DEFINE PGRON
<	JSR KIPCLD>	;TURN ON PAGING
DEFINE PGROFF
<	JSR KIPOFF>	;TURN OFF PAGING

DEFINE SETACB(A)
<	DPB A,[POINT 5,PGR71,22]
	JSR KIPSAB>	;SET AC BASE REG
>; END OF KI-10 PAGER SIMULATOR DEF'S

; Definitions for MAXC pager operations

DEFINE PGRCLD <AOS MPCLRC
	MAPCLR>
DEFINE MONCLR(A) <VCLR A>
DEFINE PGRLAG <AOS MPCLRC
	PSWIT>
DEFINE PGRON <AOS MPCLRC
	MOVE 1,SWPCOR
	SPLO 0(1)
	MAPCLR>
DEFINE PGROFF <MAPOFF>
DEFINE SETACB(A) <
	DPB A,[POINT 5,PGR71,22]
	CBASE>
DEFINE APGCLR(A) <AOS MPCLRC
	ACLR A>			; Clear all map entries pointing at A

; The following macro is used to define flag bits
; In conjunction with the test macro, it provides for automatic
; Insertion of the ac holding the flag, and trxx or tlxx to reference
; The proper halfword

DEFINE	FLG(FL,LR,REG,BIT)<FL'%==<T'LR'N REG,BIT>
IFL BIT-20,<FL==BIT>
IFGE BIT-20,<FL=BIT>>

DEFINE	TEST(COND,FL1,FL2)<IFIDN <FL2>,<>,<<TR'COND>!FL1'%>
IFDIF <FL2>,<>,<<TR'COND>!FL1'%!FL2'%
IFN <FL1'%>&777777000000-<FL2'%>&777777000000,<
PRINTX	FL1 & FL2 ARE IN DIFFERENT HALF WORDS>>>

; Macros to allocate storage

DEFINE	DFS(N,PC)<
 DEFINE	N(VAR,SIZE)<
	IFIDN <SIZE><><ASSIGN VAR,PC>
	IFDIF <SIZE><><ASSIGN VAR,PC,SIZE>>>

DFS(JS,JSBLOC)
DFS(LS,RESVLC)
DFS(PS,TSBLOC)
DFS(NR,NRESLC)
DFS(NRP,NRPLOC)


IFDEF SSACHN,<

;PARAMETERS USED IN MAGTAP, SSASRV, AND DSKPAK IF AN SA-10 SSA
;IS USED TO DRIVE DISK OR TAPE.

;PARAMETERS USED IN SA10 AND IBM-STYLE DEVICES

; DEVICE NUMBER ON PDP-10 I/O BUS OF THE SSA ITSELF

SSA==274

;CONO TO SSA

SA.INI==1B18		; INITIALIZE WHOLE SSA
SA.CME==1B19		; CLEAR MEMORY ERROR FLAGS
SA.CLK==1B26		; CLOCK CONTROL IN SSA MICROPROCESSOR
SA.NOP==0B29		; FUNCTION SELECTION, BITS 27-29. NOP=0
SA.HIO==2B29		; HALT I/O
SA.RSC==3B29		; RESET CHANNEL
SA.GOF==4B29		; GO FLAG FOR CHANNEL
SA.SRQ==5B29		; STATUS REQUEST FLAG
SA.STS==6B29		; STATUS DONE FLAG
SA.PIE==7B29		; INTERRUPT ENABLE FOR A CHANNEL
SA.SET==1B30		; SET/DO ONE OF ABOVE FUNCTIONS.
SA.CH0==0B32		; SELECT CHANNEL 0 IN ABOVE COMMANDS
SA.CH1==1B32		; SELECT CHANNEL 1
SA.CH2==2B32		; SELECT CHANNEL 2
SA.CH3==3B32		; SELECT CHANNEL 3
;BITS 33-35 ARE THE PI ASSIGNMENT FOR THE SA-10 AS A WHOLE.

;CONI FROM SSA

SA.PIR==1B18		; A PI REQUEST IS BEING MADE
SA.MPE==1B19		; PARITY ERROR FLAG
SA.NXM==1B20		; NON-EX MEMORY FLAG
SA.IE0==1B21		; INTERRUPTS ARE ENABLED FROM CHANNEL 0
SA.IE1==1B22		; .. CH 1
SA.IE2==1B23		; .. CH 2
SA.IE3==1B24		; .. CH 3
SA.GO0==1B25		; THE GO FLAG IS ON FOR CHANNEL 0
SA.GO1==1B26		; .. CH 1
SA.GO2==1B27		; .. CH 2
SA.GO3==1B28		; .. CH 3
SA.SF0==1B29		; THE STATUS DONE FLAG IS ON FOR CHANNEL 0
SA.SF1==1B30		; .. CH 1
SA.SF2==1B31		; .. CH 2
SA.SF3==1B32		; .. CH 3
;AND THE PIA COMES BACK IN BITS 33-35

;BLOCK MULTIPLEXOR CONTROL COMMANDS -- LEFTMOST 8 BITS OF CHANNEL
; PROGRAM MULTIPLEXOR BLOCK

BMX.S==320		; START THIS DEVICE
BMX.W==340		; THIS DEVICE IS WAITING
BMX.T==360		; THIS DEVICE HAS TERMINATED
			;  A ZERO WORD ENDS THE STRING OF BMX WORDS.

;OTHER CHANNEL PROGRAM COMMANDS

TCH==1B1		; TRANSFER IN CHANNEL PROGRAM

;DEVICE COMMAND WORD

SC.NMX==1B0		; NO MEMORY TRANSFER
SC.XCT==1B2		; EXECUTE THIS WORD
SC.CHN==1B3		; CHAIN TO FURTHER WORDS AFTER THIS ONE
SC.BYT==1B4		; TRANSFER BYTES, NOT WORDS (BYTE = 8 BITS)
SC.INT==1B5		; CAUSE AN INTERRUPT WHEN THIS CMD EXECUTED
SC.ILE==1B6		; IGNORE LENGTH ERROR
SC.BOF==1B7		; BYTE OFFSET. START 2 BYTES OVER IN WORD.

;DEVICE CODES ON THE IBM BUS

I.TDEV==240		; ADDRESS OF TAPE DRIVE 0
I.DDEV==300		; ADDRESS OF DSK DRIVE 0

;CHANNEL STATUS BYTE -- B0 - B7 OF STATUS WORD ONE IN LOW CORE

SS.INI==0B1		; INITIAL SELECTION STATUS
SS.END==1B1		; ENDING STATUS
SS.ASY==2B1		; ASYNCHRONOUS STATUS
SS.DMY==3B1		; DUMMY STATUS (PROGRAM REQUESTED)
SS.SER==1B2		; SELECT ERR. NO SUCH DEVICE.
SS.BIP==1B3		; BUS IN PAR ERR. ERROR ON IBM-CHANNEL BUS
SS.CSE==1B4		; CONTROL SEQUENCE ERROR. JUNK ON CHANNEL BUS.
SS.LNE==1B6		; LENGTH ERROR (DATA TRANSFER WORD/BYTE COUNT)
SS.PIF==1B7		; PROG INTERRUPT FLAG (REQ BY CHAN PRG)

;IBM-DEVICE STATUS BYTE, BIT NAMES. APPEAR IN B8-B15 OF STATUS WD 1
ID.ATN==200		; ATTENTION
ID.SMD==100		; STATUS MODIFIER
ID.CUE==040		; CONTROL UNIT END
ID.BSY==020		; BUSY (DEVICE OR CONTROLLER)
ID.CHE==010		; CHANNEL END (DATA XFR THROUGH)
ID.DVE==004		; DEVICE END
ID.UCK==002		; UNIT CHECK
ID.UEX==001		; UNIT EXCEPTION (UNUSUAL STATE, NOT ERROR)

;IBM COMMAND CODES - OPCODES TO TAPE OR DISK

IC.NOP==003		; NO-OPERATION
IC.WRT==001		; WRITE DATA (TAPE)
IC.RDT==002		; READ DATA (TAPE)
IC.RDD==006		; READ DATA AREA OF DSK RECORD
IC.WRD==005		; WRITE DATA AREA OF DSK RECORD
IC.SNS==004		; REQUEST SENSE BYTES FROM DEVICE
IC.REW==007		; REWIND (MAGTAPE)
IC.SEK==007		; SEEK (DISK)
IC.RUN==017		; REWIND-UNLOAD MAGTAPE
IC.ERG==027		; ERASE GAP (MAGTAPE)
IC.WEF==037		; WRITE TAPE MARK (END OF FILE)
IC.BSB==047		; BACKSPACE BLOCK
IC.BSF==057		; BACKSPACE FILE
IC.SKB==067		; SKIP BLOCK
IC.SKF==077		; SKIP FILE
IC.SSC==043		; SET SECTOR (DSK) WAIT FOR RIGHT ANGULAR POS.
IC.SIE==061		; SEARCH ID EQUAL (DSK)
IC.RCL==027		; RECALIBRATE (RESTORE) (DSK)
>	; END OF CONDITION ON SSACHN

;TS BLOCK ASSIGNMENTS

UACB=PSB+500		;ADDRESS OF FIRST BLOCK FOR AC STORAGE
EUACB==PSB+560		;END OF AC BLOCKS IN PSB
EPSB==PSB+1000		;END OF PSB + 1

ACBAS=PSB+570		;LOCATION OF AC'S FOR FORCED USER REFS
TRAPS0=PSB+571		;PAGER TRAP STATUS WORD
TRAPWD=PSB+572		;PAGER TRAP WRITE DATA
TRAPPC=PSB+573		;PAGER TRAP PC
TRAPAP=PSB+574		;PAGER TRAP AC-P
TRAPSW=PSB+575		;TRAP OLD STATUS WORD
UTRSW=PSB+576		;SAVED TRAPSW FOR USER
UTRWD=PSB+577		;SAVED TRAPWD FOR USER

DEFINE TTS (T,N)
<	IFB <N>,<ASSIGN T,TSBLOC,1>
	IFNB <N>,<ASSIGN T,TSBLOC,N>
>

DEFINE ETS (T,N)
<	EXTERN T
>

DEFINE TSMAC (TS)
<
TS JOBNO,1		;JOB NUMBER TO WHICH THIS FORK BELONGS
TS JOBBIT,1		;SCHEDULER CONTROL BITS
TS JOBCK0,1		;VARIABLES FOR SCHEDULER TIME QUARANTEE
TS JOBCK1,1		; ..

TS FKTAB,NLFKS/2	;LOCAL FORK HANDLE TO JOB HANDLE TABLE

TS FORKN,1		;JOB FORK NUMBER OF TOP FORK,,THIS FORK
TS FKRT,1		;FORK RUN TIME
TS ENTVEC,1		;ENTRY VECTOR POINTER
TS PATADR,1		;10/50 COMPATABILITY ENTRY VECTOR
TS PATU40,1		;WHERE TO STORE C(40), SETUP AS UMOVEM 1,XX
TS PATUPC,1		;WHERE TO STORE PC, SETUP AS UMOVEM 1,YY

TS MPP,1		;MONITOR SAVED STACK POINTER AT LAST MENTR
TS UPP,1		;MON ROUTINES STACK POINTER
TS SLOWF,1		;SLOW MON ROUTINE FLAG
TS XMENTR,1		;MENTR-MRETN TEMP
TS XMENT1,1		;MENTR TEMP
TS INTDF,1		;DEFER INTERRUPTS IF .GE. 0
TS INTDFF,1		;SOS INTDF  OR JSYS PSISV1
TS MJRSTF,1		;JRSTF @FPC  OR  JRST PSISV0
TS ACBAS1,1		;ACBAS FOR FIRST MON CALL

TS TW1,1		;DEBREAK TEMPS
TS TW2,1
TS ITFPC,1		;FPC AT LAST ITRAP
IFN KIFLG,<
TS KITMPS,2		;KI-10 MUUO HANDLER TEMPS
>
			;STORAGE FOR JSYS TRAP MECHANISM

JTBSIZ==^D15		;SIZE OF JSYS TRAP BIT TABLE IN WORDS

TS JTBTB,JTBSIZ		;BIT TABLE OF JSYS'S TRAPPED BY IMMED MON
TS JTLCK,1		;LOCK FOR TRAPS TO FORK
TS JTFPC,1		;SAVE FPC ON TRAPSI
TS JTTMP,1		;TEMP STORAGE FOR TRAPSI ROUTINE
TS JTTMP1,1		;TEMP STORAGE FOR SETRP ROUTINE
TS JTMNW,1		;JSYS TRAP MONITOR WORD:
			; B0: MONITOR FLAG. ON = A MONITOR
			; B3-B11: TEMP STORAGE FOR TRAPPED JSYS
			; B12-B17: MONITOR PSI CHANNEL, 77 MEANS
			;	DON'T PSI FORK ON TRAP
			; RH: JOB INDEX OF IMMED MON FORK
TS JTTRW,1		;JSYSTRAP TRAP WORD
			;LH - JOB INDEX OF TRAPPED FORK
			;RH - TRAPPED JSYS
TS JTJDA,1		;ADDR OF PAGE FOR MAPPING OTHER FORK'S DISP VECS

TS PAC,20		;PROCESS AC'S
TS PPC,1		;PROCESS PC
TS PSB40,1		;PROCESS LOCATION 40
TS PICTR,1		; Process instruction counter
TS OICTR,1		; Overhead instruction counter
TS BLPAR,NBLPAR		; Parameters for Byte-Lisp

IFN KAFLG,<
TS ENSKR,1>		;SCHEDULER TEMP (RETURN)
IFN KIFLG,<
TS ENSKR,2>		;CALL SCHED TEMP VIA JSR
TS SKDPC,1		;SCHEDULER TEMP (RETURN)
TS NSKED,1		;NO-SCHEDULE WORD
TS RSKED,1		;NO-SCHEDULE TRAP
TS NSWAP,1		;NO-SWAP FLAG

TS TRAPSK,NTSK		;STACK USED DURING PAGER TRAPS
TS PGTIM,1		;TIME SINCE AGE REG TICK
TS IFTIM,1		;TIME SINCE LAST PAGE FAULT
TS TRAPC,1		;PAGER TRAP RECURSION COUNT
TS UTRPCT,1		;COUNT OF PAGER TRAPS FOR THIS PROCESS
TS USWPCT,1		;COUNT OF SWPINW CALLS FOR THIS PROCESS
TS PTTIM,1		;TIME SPENT IN PAGER TRAPS
TS IFAV,1		;INTER-FAULT AVERAGE, CONTINUOUSLY MAINTAINED
TS CAPT,1		;WORKING SET WINDOW SIZE IN MS.
TS WSPGS,NWSPGS		;WORKING SET PAGES BIT TABLE
XWSPGS=<Z WSPGS-PSB+FITPGA>

TS MONBK,1		;INTERRUPT TO MONITOR IF NON-0
TS PIPC,1		;SAVED PC DURING INITIAL PI SERVICE
TS PIMSK,1		;PSI REQUEST WORD BEING PASSED TO PSI SERVICE
TS PIPDB,NPIPDL		;PSI ROUTINES STACK
TS PIAC,17		;SAVED USER AC'S DURING BREAK START
TS PIAC17,1		;SAVED USER AC17 .. ..

TS PSICHA,NTERMI/6	;CHANNEL ASSIGNED TO TERM CODE
TS PSIBW,1		;BREAK WAITING WORD
TS FORCTC,1		;CHANNEL WHICH CAUSED FORCED FORK TERMINATION
TS PSICHM,1		;CHANNEL ENABLED WORD
TS SUPCHN,1		;CHANNELS RESERVED BY SUPERIOR
TS PSIBIP,1		;BREAK IN PROGRESS WORD (LEVELS)
TS PSIPT,1		;PSI STORAGE LIST POINTER
TS PIOLDS,1		;FKSTAT PRIOR TO PSI IF WAS WAITING
TS LEVCHN,1		;LEVEL TABLE,,CHANNEL TABLE  ADDRESSES
TS PSISYS,1		;NON-0 IF PSI SYSTEM OFF
TS MONCHN,1		;CHANNELS RESERVED BY MONITOR
TS MONINT,1		;FOR DDT BREAKPOINTS
TS OVFLG,1		;NON-0 =) INITIATE INTERRUPTS ON MONITOR OV'S

TS UPDL,NUPDL		;PDL FOR MONITOR CALLS

TS FPC,1		;MENTR-MRETN JSYS PC
TS PGURET,1		;PLACE TO HOLD RETURN PC DURING PGUNTRP
IFN PIESLC,<
TS HIQCNT,1		;COUNT (-1) OF REQUESTS FOR HI QUEUEING
TS SPQCNT,1		;AS ABOVE FOR SPECIAL QUEUE
>
>
	TSMAC (ETS)		;DEFINE AS EXTERNAL ALWAYS

;JOB STORAGE BLOCK ASSIGNMENTS

DEFINE JJS (T,N)
<	IFB <N>,<ASSIGN T,JSBLOC,1>
	IFNB <N>,<ASSIGN T,JSBLOC,N>
>

DEFINE EJS (T,N)
<	EXTERN T
>

DEFINE JSMAC (JS)
<
JS JOBMAP,PPMPG-PJMPG	;OBJECT MAP FOR JOB-COMMON AREA

JS SYSFK,NUFKS		;FORK CTTY,,JOB FORK INDEX TO SYSTEM FORK INDEX
JS FKPTRS,NUFKS		;FORK POINTERS (STRUCTURE)
JS FKPSIE,NUFKS		;TERM INTERRUPT ENABLED WORD
JS FKDPSI,NUFKS		;DEFERRED TERM INTERRUPTS MASK
JS FREJFK,1		;FREE JOB FORK SLOT LIST

JS CTRLTT,1		;LINE NUMBER OF CONTROLLING TTY
JS TTSPSI,1		;CODE ENABLED ANYWHERE IN THIS JOB
JS TTSDPS,1		;TERM INT CODE DEFERRED
JS TTJTIW,1		;TERMINAL INTERRUPT ENABLE MASK
JS JOBPMF,1		;JFN OF PRIV MEM FILE
IFN KIFLG,<
JS PMFCNT,1>		;COUNT OF PMF PMAPS
JS CONSTO,1		;CONSOLE TIME ON
JS FLDTSL,1		; String length of file account default
JS FLDTPT,1		; Pointer to file account default
JS FLDTSR,11		; String space for file account default
JS ACCTPT,1		;ACCOUNT NUMBER+5B2 OR ACCOUNT STRING PTR
JS LOGBUF,5		;LOGIN-OUT EFACT DATA, MUST PRECEDE ACCTSR
JS ACCTSR,11		;ACCOUNT STRING
>
	JSMAC (ETS)		;DEFINE AS EXTERNAL ALWAYS

; Bit definitions in sts (also filsts)

FLG(OPNF,L,STS,400000)	; File is open
FLG(READF,L,STS,200000)	; File is ok to read
FLG(WRTF,L,STS,100000)	; File is ok to write
FLG(XCTF,L,STS,040000)	; File is ok to execute
FLG(RNDF,L,STS,020000)	; File is ok to reset pointer (i.e. not append)
FLG(ASPF,L,STS,010000)	; File is ok to access as specified in p.t.
FLG(CALLF,L,STS,004000)	; File is ok to call as a procedure
FLG(LONGF,L,STS,002000)	; File is a long file
FLG(EOFF,L,STS,001000)	; End of file if read attempted
FLG(ERRF,L,STS,000400)	; Bytes read may be erroneous
FLG(NAMEF,L,STS,000200)	; Name is associated with this jfn
FLG(ASTF,L,STS,000100)	; A * was typed in
FLG(ASGF,L,STS,000040)	; Jfn is being assigned
FLG(HLTF,L,STS,000020)	; Halt if i-o error
FLG(WNDF,L,STS,000010)	; A window page has been set up
FLG(ENDF,L,STS,000004)	; File is past end of maximum length
FLG(SIZF,L,STS,000002)	; Illegal to change size of byte
FLG(FRKF,L,STS,000001)	; File is restricted to fork in lh(filver)
; In flags

FLG(OUTPF,L,F,400000)	; Bit 0 for output use
FLG(NEWNF,L,F,200000)	; Bit 1 new file name only
FLG(OLDNF,L,F,100000)	; Bit 2 old file only
FLG(PONFF,L,F,040000)	; Bit 3 print "old file"/"new file" etc.
FLG(CFRMF,L,F,020000)	; Bit 4 confirmation required
FLG(TMPFF,L,F,010000)	; Bit 5 temporary file
FLG(RTYPF,L,F,004000)	; Bit 6 retype whole file name when complete
FLG(NACCF,L,F,002000)	; Bit 7 no access to other forks
FLG(IGDLF,L,F,001000)	; Bit 8 ignore deleted bit in files
FLG(JFNF,L,F,000400)	; Bit 9 use jfn given in e+11
FLG(JFNAF,L,F,000200)	; Bit 10 use alternate if jfn in e+11 na
FLG(ASTAF,L,F,000100)	; Asterisk allowed
FLG(OSTRF,L,F,000040)	; Output stars allowed
FLG(RLHFF,L,F,000020)	; RETURN LEFT HALF FLAGS
FLG(SCRF,L,F,000010)	; Make this file a scratch file
FLG(FILF,L,F,000002)	; If short form, 2 has xwd infile,outfile
FLG(SHTF,L,F,000001)	; Dummy bit to cause 1 to be taken as flags

; Flags in rh of f used by gtjfn

FLG(DEVF,R,F,400000)	; Device is specified
FLG(DIRF,R,F,200000)	; Directory specified
FLG(NAMF,R,F,100000)	; Name specified
FLG(EXTF,R,F,040000)	; Extension specified
FLG(VERF,R,F,020000)	; Version specified
FLG(PRTF,R,F,010000)	; Protection specified
FLG(ACTF,R,F,004000)	; Account specified
FLG(DEVTF,R,F,002000)	; Device was typed in
FLG(DIRTF,R,F,001000)	; Directory was typed in
FLG(NAMTF,R,F,000400)	; Name was typed in
FLG(EXTTF,R,F,000200)	; Extension was typed in
FLG(VERTF,R,F,000100)	; Version was typed in
FLG(ACTTF,R,F,000040)	; Account was typed in
FLG(PRTTF,R,F,000020)	; Protection was typed in
FLG(TMPTF,R,F,000010)	; Temporary flag was set by type in
FLG(SCRTF,R,F,000004)	; SCRATCH FLAG SET BY TYPE-IN
FLG(CNTVF,R,F,000002)	; Control-v typed

; Flags in rh of sts used locally

FLG(MTCHF,R,F1,400000)	; Match seen during lookup ooerations
FLG(AMBGF,R,F1,200000)	; More than one match seen during operations
FLG(OCTF,R,F1,100000)	; Octal number is being collected
FLG(NEGF,R,F1,040000)	; Minus sign was typed
FLG(UNLKF,R,F1,020000)	; Used by directory to remember to unlock
FLG(STRF,R,F1,010000)	; String input exists
FLG(NREC,R,F1,004000)	; Don't perform recognition
FLG(NREC1,R,F1,002000)	; Used by lookup routines as for norec
FLG(DIRXF,R,F1,001000)	; Directory was stepped
FLG(NAMXF,R,F1,000400)	; Name was stepped
FLG(DIRFF,R,F1,000200)	; Directory is being specified
FLG(EXTFF,R,F1,000100)	; Extension is being specified
FLG(PRTFF,R,F1,000040)	; Protection is being specified
FLG(ACTFF,R,F1,000020)	; Account is being specified
FLG(NUMFF,R,F1,000010)	; Number is being collected
FLG(KEYFF,R,F1,000004)	; Looking for t, p, a
FLG(NEWF,R,F1,000002)	; A new file name was created
FLG(NEWVF,R,F1,000001)	; A new version of an existing file was created

; Flags in lh of f1 (scan control)

FLG(DIRSF,L,F1,100000)	; Scan directories <*>
FLG(NAMSF,L,F1,040000)	; Scan names (^*.)
FLG(EXTSF,L,F1,020000)	; Scan extensions (^.*)
FLG(VERSF,L,F1,010000)	; Scan versions (;*)
FLG(RVERF,L,F1,004000)	; Most recent version specified
FLG(HVERF,L,F1,002000)	; New version specified
FLG(LVERF,L,F1,001000)	; Lowest version specified
FLG(FXPRT,L,F1,000400)	; ;P SPECIFIED
FLG(FXACT,L,F1,000200)	; Account specified with *'s
FLG(FXTMP,L,F1,000100)	; ;t specified with *'s
FLG(EXTXF,L,F1,000040)	; Extension was stepped
FLG(NNAMF,L,F1,000020)	; No name device
FLG(NVERF,L,F1,000010)	; No versions etc.
FLG(DFSTF,R,F1,000004)	; * in default string
FLG(STARF,L,F1,000002)	; Set by *
FLG(STEPF,L,F1,000001)	; Step flag

; Device dispatch indices

TPC==0
USE TPC

DLUKD::!BLOCK 1		; Directory setup routine
NLUKD::!BLOCK 1		; Name lookup
ELUKD::!BLOCK 1		; Extension lookup
VLUKD::!BLOCK 1		; Version lookup
PLUKD::!BLOCK 1		; Protection insertion
ALUKD::!BLOCK 1		; Account insertion
SLUKD::!BLOCK 1		; Status insertion (temporary permanent etc)
OPEND::!BLOCK 1		; Open file
BIND::!	BLOCK 1		; Byte input
BOUTD::!BLOCK 1		; Byte output
CLOSD::!BLOCK 1		; Close file
REND::!	BLOCK 1		; Rename
DELD::!	BLOCK 1		; Delete file
DMPID::!BLOCK 1		; Dump mode input
DMPOD::!BLOCK 1		; Dump mode output
MNTD::!	BLOCK 1		; Mount device
DSMD::!	BLOCK 1		; Dismount device
INDD::!	BLOCK 1		; Initialize directory of device
MTPD::!	BLOCK 1		; Do mtape operation
GDSTD::!BLOCK 1		; Get device status
SDSTD::!BLOCK 		; Set device status

INTERN	DIRDSK,DIRLCK,DIRUSE,DDBMAX

; Variables in directory

DIRTPC==750000		; Directory origin
	USE	DIRTPC

DIRORG:	BLOCK 0		; Directory origin
DIRLCK:	BLOCK 1		; Directory lock
DIRUSE: BLOCK 1		; Directory use indicator
DIRNUM:	BLOCK 1		; Number of this directory
SYMBOT:	BLOCK 1		; Symbol table bottom
SYMTOP:	BLOCK 1		; Symbol table top
DIRFRE:	BLOCK 7		; Free storage header
FRETOP:	BLOCK 1		; Current top of free storage area
DIRDPW:	BLOCK 1		; Default file protection word
DIRPRT:	BLOCK 1		; Directory protection word
DIRDBK:	BLOCK 1		; Default backup specification
DIRGRP:	BLOCK 1		; Groups having access to this directory
DIRSAV:	BLOCK 1		; A place to put pointers to be gc'ed
DIRDSK:	BLOCK 1		; LH - max allocation this directory,
			; RH - current allocation
DIREXL:			; B0 set prevents expunge
DIRMOD:	BLOCK 1		; RH contains directory mode bits
			; B18: enforce disk limit
DIRSGR:	BLOCK 1		; Groups having secondary access to this directory
DIRLOC:	BLOCK 1		; Temp used for saving location in the directory
DIRINP:	BLOCK 1		; Temp to save pointer to input for lookup
DIRINC:	BLOCK 1		; Temp to hold increment for searching
DIRMSK:	BLOCK 1		; Temp to hold mask for lookups
DIRSCN:	BLOCK 1		; Temp to save pointer to pointer
DIFREE:	BLOCK 0		; Beginning of free area

; Variables in subindex directory block 0

DIRHTO==DIRDPW		; Directory number hash table origin
DIRHTL==DIRPRT		; Directory number hash table length
FDADR==:DIRDBK		; Disc address of fd ib
; DEFINED LSTDNO
LSTDNO==DIRGRP		; LAST ASSIGNED DIRECTORY NUMBER

SBIDTB:	BLOCK <200+4>/5	; Directory subindex dispatch
ESBIDT:

; Parameters and bits pertinent to directories

	USE	TPC,0	; Pc to use to define fdb offsets

	BLOCK 1		; The header, not referenced symbolically
FDBCTL:!BLOCK 1		; Lh ==> control bits (see below)
			; Rh ==> location of file name block
FDBEXT:!BLOCK 1		; Lh ==> location of extension block
			; Rh ==> pointer to other extensions
FDBADR:!BLOCK 1		; The file address & class field
FDBPRT:!BLOCK 1		; File protection word
FDBCRE:!BLOCK 1		; Creation date & time of version 1
FDBUSE:!BLOCK 1		; Lh ==> last writer directory number
			; Rh ==> use count (+1 for each indirect pointer
			;  and saved environment)
FDBVER:!BLOCK 1		; Lh ==> version number
			;  this is job number for temp files
			; Rh ==> pointer to other versions
FDBACT:!BLOCK 1		; Account infor for charging
			;  + for location of string block
			;  - for number
FDBBYV:!BLOCK 1		; 0-5 ==> number of version to retain
			; 6-11 ==> last byte size
			; Rh ==> count of actual pages in file
FDBSIZ:!BLOCK 1		; Length of file in bytes
FDBCRV:!BLOCK 1		; Creation date and time of this version
FDBWRT:!BLOCK 1		; Date & time of last write
FDBREF:!BLOCK 1		; Date & time of last reference
FDBCNT:!BLOCK 1		; Lh ==> count of writes
			; Rh ==> count of references
FDBBCK:!BLOCK 5		; Words for backup system
FDBUSW:!BLOCK 1		; User settable word
FDBLEN:			; Length of fdb

; Bits in lh of fdbctl

FDBTMP==400000		; File is temporary
FDBPRM==200000		; File is permanent
FDBNEX==100000		; No extension for this fdb yet
			;  the file does not really exist
FDBDEL==040000		; File is deleted
FDBNXF==020000		; File does not exist (first write not complete)
FDBLNG==010000		; Long file
FDBSHT==004000		; Compressed page table
FDBENV==002000		; Environment file
FDBSUB==001000		; Subroutine file
FDBUND==000400		; Undeletable file
FDBEPH==000001		; Ephemeral subsys file

; JFN STORAGE IN STORAG.MAC

EXTERNAL FILBYT,FILBYN,FILLEN,FILCNT,FILLCK,FILWND,FILSTS,FILDEV
EXTERNAL FILOFN,FILLFW,FILDDN,FILNEN,FILVER,FILTMP,FILPRT,FILACT
EXTERNAL FILOPT,FILMOD

EXTERNAL JFNLCK,MAXJFN,JOBUNT,JBCLCK,JBCOR,JSBFRE,JSFREE

; Symbols in directory descriptor block

	USE	TPC,0	; Pc to define offsets into ddb

	BLOCK 1		; Header not referenced symbollically
DDBNAM:!BLOCK 1		; Lh ==> pointer to password string block
			; Rh ==> pointer to name string block
DDBMAX:!BLOCK 1		; Maximum disk storage for this directory
DDBLOG:!BLOCK 1		; Time and date of last login
DDBPRV:!BLOCK 1		; Privilege bits
DDBMOD:!BLOCK 1		; Mode bits
DDBRES:!BLOCK 1		; Special resource information
DDBNUM:!BLOCK 1		; Lh ==> directory number
			; Rh ==> pointer to special information block
			; 0 means no special info
DDBDAT:!BLOCK 1		; Date and time of last login
DDBGRP:!BLOCK 1		; Groups to which this user belongs
DDBLEN:!

;JSYS DISPATCH TABLE, INITIALIZED TO ALL ILLEGAL

DEFINE JJD (N,A)
<	OPDEF N [JSYS A]
>

;THE FOLLOWING USED ONLY IN LDINIT

DEFINE LJD (N,A)
<	LOC 1000+JSYSLC
	IFL A-JSYSLC,<PRINTX JSYS'S MUST BE DEFINED IN ORDER>
	REPEAT A-JSYSLC,<XWD FPC,UJSYS>
	EXTERN .'N
	XWD FPC,.'N
JSYSLC==.-1000
	RELOC
>

DEFINE JDMAC (JD)
<
JD LOGIN,1
JD CRJOB,2
JD LGOUT,3
JD CACCT,4
JD EFACT,5
JD SMON,6
JD TMON,7
JD GETAB,10
JD ERSTR,11
JD GETER,12
JD GJINF,13
JD TIME,14
JD RUNTM,15
JD SYSGT,16
JD GNJFN,17
JD GTJFN,20
JD OPENF,21
JD CLOSF,22
JD RLJFN,23
JD GTSTS,24
JD STSTS,25
JD DELF,26
JD SFPTR,27
JD JFNS,30
JD FFFFP,31
JD RDDIR,32
REPEAT 0,<JD CPRTF,33>
JD CLZFF,34
JD RNAMF,35
JD SIZEF,36
JD GACTF,37

JD STDIR,40
JD DIRST,41
JD BKJFN,42
JD RFPTR,43
JD CNDIR,44
JD RFBSZ,45
JD SFBSZ,46
JD SWJFN,47
JD BIN,50
JD BOUT,51
JD SIN,52
JD SOUT,53
JD RIN,54
JD ROUT,55
JD PMAP,56
JD RPACS,57
JD SPACS,60
JD RMAP,61
JD SACTF,62
JD GTFDB,63
JD CHFDB,64
JD DUMPI,65
JD DUMPO,66
JD DELDF,67
JD ASND,70
JD RELD,71
REPEAT 0,<JD CSYNO,72>
JD PBIN,73
JD PBOUT,74
REPEAT 0,<JD PSIN,75>
JD PSOUT,76
JD MTOPR,77

JD CFIBF,100
JD CFOBF,101
JD SIBE,102
JD SOBE,103
JD DOBE,104
JD GTABS,105
JD STABS,106
JD RFMOD,107
JD SFMOD,110
JD RFPOS,111
JD RFCOC,112
JD SFCOC,113
JD STI,114
JD DTACH,115
JD ATACH,116
JD DVCHR,117
JD STDEV,120
JD DEVST,121
JD MOUNT,122
JD DSMNT,123
JD INIDR,124
JD SIR,125
JD EIR,126
JD SKPIR,127
JD DIR,130
JD AIC,131
JD IIC,132
JD DIC,133
JD RCM,134
JD RWM,135
JD DEBRK,136
JD ATI,137
JD DTI,140
JD CIS,141
JD SIRCM,142
JD RIRCM,143
JD RIR,144
JD GDSTS,145
JD SDSTS,146
JD RESET,147

JD RPCAP,150
JD EPCAP,151
JD CFORK,152
JD KFORK,153
JD FFORK,154
JD RFORK,155
JD RFSTS,156
JD SFORK,157
JD SFACS,160
JD RFACS,161
JD HFORK,162
JD WFORK,163
JD GFRKH,164
JD RFRKH,165
REPEAT 0,<JD GFRKS,166>
JD DISMS,167
JD HALTF,170
JD GTRPW,171
JD GTRPI,172
JD RTIW,173
JD STIW,174
JD SOBF,175
JD RWSET,176
JD GETNM,177

JD GET,200
JD SFRKV,201
JD SAVE,202
JD SSAVE,203
JD SEVEC,204
JD GEVEC,205
JD GPJFN,206
JD SPJFN,207
JD SETNM,210
JD FFUFP,211
JD DIBE,212
JD FDFRE,213
JD GDSKC,214
JD LITES,215
JD TLINK,216
JD STPAR,217

JD ODTIM,220
JD IDTIM,221
JD ODCNV,222
JD IDCNV,223
JD NOUT,224
JD NIN,225
JD STAD,226
JD GTAD,227
JD ODTNC,230
JD IDTNC,231
JD FLIN,232
JD FLOUT,233
JD DFIN,234
JD DFOUT,235

JD CRDIR,240
JD GTDIR,241
JD DSKOP,242
JD SPRIW,243
JD DSKAS,244
JD SJPRI,245
JD STO,246

IFDEF DSPCHN,<
JD ASNDP,260		; E&S JSYS'S
JD RELDP,261
JD ASNDC,262
JD RELDC,263
JD STRDP,264
JD STPDP,265
JD STSDP,266
JD RDSDP,267
JD WATDP,270
>

IFDEF IMPCHN,<
JD ATPTY,274
JD CVSKT,275
JD CVHST,276
JD FLHST,277
>
IFDEF PUPCHN,<IFNDEF IMPCHN,<
JD ATPTY,274
JD CVSKT,275
>>

JD GCVEC,300
JD SCVEC,301
JD STTYP,302
JD GTTYP,303
JD BPT,304
JD GTDAL,305
JD WAIT,306
JD HSYS,307
;JD USRIO,310	; Not on Maxc
JD PEEK,311
JD MSFRK,312
JD ESOUT,313
JD SPLFK,314
JD ADVIZ,315
JD JOBTM,316
JD DELNF,317
JD SWTCH,320
JD TFORK,321
JD RTFRK,322
JD UTFRK,323
JD SCTTY,324
JD CFGRP,325
JD OPRFN,326
JD CGRP,327
JD VACCT,330
JD GDACC,331
JD ATGRP,332
JD GACTJ,333
JD GPSGN,334
JD GFACC,335
JD SETER,336

;DEFS FOR I4-TENEX
;NOTE THESE NUMBERS ARE NOT IN 400 GROUP WHICH IS RESERVED FOR NON-BBN
; FIELD USE. - THEY MAY GET BUMPED BY BBN DEF'S
;
IFDEF I4SW,<IFN I4SW,<
JD LKPG,340
JD XCM,341
JD BLKPM,343
JD WAKUP,344
JD LD11P,345
JU UJFNO,346
JD BLKMC,347
JD AQMMP,351
JD SMMPT,352
JD RMMPR,353
JD SMMPR,354
JD SMMPI,355
JD RLMMP,356
JD DRMOP,357
JD ASPTY,360
JD REPTY,361
JD PSTI,362
JD PSTO,363
JD SIBF,364
JD SRUBA,365
JD INTLK,366
JD PARRD,600
JD PARST,601
>>
;DEFS FOR STANFORD RESEARCH INSTITUTE - AUGMENTATION RESEARCH CENTER
IFDEF SRIARC,<
JD SJBST,401
JD RJBST,402
JD GTPSW,415
JD CHKAC,416
JD FLGIN,431
JD TSTFG,432
JD SETFG,433
JD RSTFG,434
> ;END OF SRI-ARC DEFS

;PARC JSYSES
IFDEF LPTSPL,<JD SPPAR,440>
IFDEF PUPCHN,<
JD PUPI,441
JD PUPO,442
JD PUPNM,443
>
IFN PIESLC,<JD CPUTL,444>
JD GFBLP,445
JD SFBLP,446
;
;NOTE::::: THE GROUP OF JSYS'S FROM 500 - 577 ARE RESERVED FOR DEC BY
;	   AGREEMENT BETWEEN DEC AND BBN
;
JD SFPOS,526

;TEMPORARY DEF'S

IFDEF SIGIPC,<
JD GTSIG,730
JD RLSIG,731
JD WTFOR,732
JD SIGNL,733
>

IFDEF IMPCHN,<
JD SNDIM,750
JD RCVIM,751
JD ASNSQ,752
JD RELSQ,753
>

JD TNDBG,757		; FOR TELENET CODE
IFDEF RTISW,<
JD SOLO,760
JD TUTTI,761
JD USEC,763
>

IFDEF IMPCHN,<
JD DBGIM,766>

IFDEF DIALLN,<
JD TDIAL,767>

JD MRPAC,772
JD DSKCV,774
JD TTMSG,775
JD EXEC,777
>
	JDMAC (JJD)		;OPDEF ALL

	ORG 0		; Else Macro v47 gives phase errors

	.END
