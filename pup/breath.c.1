# include "<yeager>version.h"
/*
 * 	l0_breathLife ()	WJY Dec. 22, 1981 - let's breathe some life
 *				into the world!
 *
 * Thanks to Jeffrey Mogul for creating the Breath of Life C data structure
 *
 *
 * A BreathOfLife is sent every 7 seconds to host #377 on the
 * directly connected networks
 *
 */

#define	DESTHOST	0377
#define	BREATHLEN	256	/* shorts */
#define	BREATHTYPE	0602	/* ethernet packet type */

static short int Breath[BREATHLEN+5]  {
	0,0,0,0,0,		/* 5 prewords for low level packeting */
	0177400,BREATHTYPE,	/* two encapsulation words. 0377 is dest */
	/* the rest is the contents of a breath of life packet.
	 * See <Altosource>EtherBoot.dm (EtherBoot.asm) for Alto
	 * assembly code.
	 */
		  0022574, 0100000, 0040437, 0102000, 0034431, 0164000,
0061005, 0102460, 0024567, 0034572, 0061006, 0024565, 0034570, 0061006,
0024564, 0034566, 0061006, 0020565, 0034565, 0061005, 0125220, 0046573,
0020576, 0061004, 0123400, 0030551, 0041211, 0004416, 0000000, 0001000,
0000026, 0000244, 0000000, 0000000, 0000000, 0000000, 0000004, 0000000,
0000000, 0000020, 0177777, 0055210, 0025400, 0107000, 0045400, 0041411,
0020547, 0041207, 0020544, 0061004, 0006531, 0034517, 0030544, 0051606,
0020510, 0041605, 0042526, 0102460, 0041601, 0020530, 0061004, 0021601,
0101014, 0000414, 0061020, 0014737, 0000773, 0014517, 0000754, 0020517,
0061004, 0030402, 0002402, 0000000, 0000732, 0034514, 0162414, 0000746,
0021001, 0024511, 0106414, 0000742, 0021003, 0163400, 0035005, 0024501,
0106415, 0175014, 0000733, 0021000, 0042465, 0034457, 0056445, 0055775,
0055776, 0101300, 0041400, 0020467, 0041401, 0020432, 0041402, 0121400,
0041403, 0021006, 0041411, 0021007, 0041412, 0021010, 0041413, 0021011,
0041406, 0021012, 0041407, 0021013, 0041410, 0015414, 0006427, 0012434,
0006426, 0020421, 0024437, 0134000, 0030417, 0002422, 0177035, 0000026,
0000415, 0000427, 0000567, 0000607, 0000777, 0177751, 0177641, 0177600,
0000225, 0177624, 0001013, 0000764, 0000431, 0000712, 0000634, 0000735,
0000611, 0000567, 0000564, 0000566, 0000036, 0000002, 0000003, 0000015,
0000030, 0000377, 0001000, 0177764, 0000436, 0054731, 0050750, 0020753,
0040745, 0102460, 0040737, 0020762, 0061004, 0020734, 0105304, 0000406,
0020743, 0101014, 0014741, 0000772, 0002712, 0034754, 0167700, 0116415,
0024752, 0021001, 0106414, 0000754, 0021000, 0024703, 0106414, 0000750,
0021003, 0163400, 0024736, 0106405, 0000404, 0121400, 0101404, 0000740,
0044714, 0021005, 0042732, 0024664, 0122405, 0000404, 0101405, 0004404,
0000727, 0010656, 0034654, 0024403, 0120500, 0101404, 0000777, 0040662,
0040664, 0040664, 0102520, 0061004, 0020655, 0101015, 0000776, 0106415,
0001400, 0014634, 0000761, 0020673, 0061004, 0000400, 0061005, 0102000,
0143000, 0034672, 0024667, 0166400, 0061005, 0004670, 0020663, 0034664,
0164000, 0147000, 0061005, 0024762, 0132414, 0133000, 0020636, 0034416,
0101015, 0156415, 0131001, 0000754, 0024643, 0044625, 0101015, 0000750,
0014623, 0004644, 0020634, 0061004, 0002000, 0176764, 0001401, 0041002
};

extern l0_Q *l0_NDBq;		/* NDBq pointer */
l0_BreathLife () {
    /* broadcast breath of life packet on NET 55 every 7 seconds */
    l0_smlpak *Pak; l0_NDB *NDB; 
    /* set up Packet header */
    Pak = (l0_smlpak *)Breath;			/* our basic datum */
    Pak->Link = (l0_smlPak *)0;			/* clear link */
    NDB = (l0_NDB *)l0_NDBq->qHead;		/* NDB pointer */
    Pak->ndbPTR = NDB;				/* PACKET NDB pointer */
    Pak->SocPTR = (l1_Sock *)0;			/* NO assoc. socket   */
    Pak->PAKlen = BREATHLEN;			/* size for outputing */
    Pak->Encap1 = (Pak->Encap1 & 0177400) | NDB->localHost; 
    while (1) {/* do "forever" */
        Pak->intent = output | KeepPUP;		/* output-never dispose */
        (*(NDB->l0trans))(Pak);			/* send the sucker */
	/* disms .25 seconds or until output is finished with this one */
	while (!(Pak->intent & outputCOMPLETE)) s_Tdisms (-1, 15);
	s_Tdisms (-1, 7*h_tics);		/* every 7 seconds */
	}
    }
