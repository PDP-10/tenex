;<EXEC>X1CMD.MAC;72     2-OCT-73 13:09:31	EDIT BY PLUMMER

; 1.51
;<N-EXEC>X1CMD.MAC;36    28-SEP-73 15:30:11	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;35    19-SEP-73 10:45:52	EDIT BY PLUMMER
; "WHERE" TYPES UNKNOWN HOST NUMBER IN DECIMAL
;<N-EXEC>X1CMD.MAC;34    31-AUG-73 15:07:53	EDIT BY PLUMMER
; SWITCH TO NEW "INTERROGATE" CODE
;<N-EXEC>X1CMD.MAC;33    16-AUG-73 11:43:23	EDIT BY PHANTOM
;<N-EXEC>X1CMD.MAC;32    14-AUG-73 17:02:13	EDIT BY PLUMMER
; "ACCOUNT" DEFAULTS TO DEFAULT ACCT OF LOGIN DIR
;<N-EXEC>X1CMD.MAC;31    13-AUG-73 15:08:35	EDIT BY PLUMMER
; MAKE INVALID ACCOUNTS AN ERROR
;<N-EXEC>X1CMD.MAC;30    16-JUL-73 12:26:49	EDIT BY PLUMMER
; CHKDAT DOES GTJFN RATHER THAN CALL TRYGTJ SO ERROR ARE HANDLED RIGHT
;<N-EXEC>X1CMD.MAC;29    10-JUL-73 21:49:03	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;28    10-JUL-73 18:13:20	EDIT BY PLUMMER
; USE %M TO TYPE DEFAULT ACCOUNT
; ADD CHECK OF DATE INPUT VS FACT FILE WRITE IN ^E SET AND MAIN LOOP
;<N-EXEC>X1CMD.MAC;27    10-JUL-73 14:48:06	EDIT BY PLUMMER
; REPAIR STRING ACCT LOGIC
;<N-EXEC>X1CMD.MAC;26     5-JUL-73 17:56:04	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;25     5-JUL-73 16:26:39	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;24     5-JUL-73 14:16:41	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;23     3-JUL-73 12:45:57	EDIT BY PLUMMER
; FIX BUGS IN NEW USER-ACCT VALIDATION STUFF
;<N-EXEC>X1CMD.MAC;22     2-JUL-73 23:36:43	EDIT BY PLUMMER
; SWITCH TO .JBXXX FOR 10/50 JOB DATA AREA
; ^E EDDT PASSES UNDEFINED TABLE TO DDT
;<N-EXEC>X1CMD.MAC;21     2-JUL-73 21:42:15	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;20     2-JUL-73 21:07:15	EDIT BY PLUMMER
; INSERT "NO" ROUTINE
; MAKE "IDDT" ROUTINE LOOK AT F1 FOR "NO"
;<N-EXEC>X1CMD.MAC;19     2-JUL-73 19:40:48	EDIT BY PLUMMER
; ACCOUNT VALIDATION
;<N-EXEC>X1CMD.MAC;17    26-JUN-73 16:14:30	EDIT BY PLUMMER
; "BREAK" CLEARS ADVISE LINKS ALSO
;<N-EXEC>X1CMD.MAC;16    12-JUN-73 17:07:18	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;15    11-JUN-73 21:33:35	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;14    11-JUN-73 21:16:40	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;13    11-JUN-73 13:19:48	EDIT BY PLUMMER
; "QUIT" FROM TOP-LEVEL EXEC USES JSYS 777 TO CALL MINI-EXEC
; TEST OF INFERIORNESS USES GFRKH  IF IMPLEMENTED
;<N-EXEC>X1CMD.MAC;12     5-JUN-73 23:09:17	EDIT BY PLUMMER
; MAX "FORK" NUMBER IS 17 (BUGFIX)
;<N-EXEC>X1CMD.MAC;10     1-JUN-73 16:06:27	EDIT BY PLUMMER
; INSTALL ADVISE STUFF
;<N-EXEC>X1CMD.MAC;9    31-MAY-73 13:32:15	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;8    30-MAY-73 16:57:08	EDIT BY PLUMMER
; MOVE TTY NUMBER STUFF OUT OF LINK AND INTO XSURBS
;<N-EXEC>X1CMD.MAC;7    21-MAY-73 12:05:46	EDIT BY PLUMMER
; ADDED GRACEFUL ERROR COMMENTS TO RENAME FAILURES
;<N-EXEC>X1CMD.MAC;6    19-MAY-73 18:55:56	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;5    14-MAY-73 16:34:36	EDIT BY PLUMMER
; ADD SUBCOMMANDS TO "EXPUNGE"
;<N-EXEC>X1CMD.MAC;4     9-MAY-73 21:36:59	EDIT BY PLUMMER
; ERROR MESSAGE FORK FAILING CFORK
;<N-EXEC>X1CMD.MAC;3     7-MAY-73 16:52:12	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;2     7-MAY-73 11:51:31	EDIT BY PLUMMER
; CHANGE NOISE ON "GET", "MERGE", AND "RUN"
; REDO "EXEC" TO USE EPHEMERAL MECHANISM
; CODE TO DO THE SAME FOR "INTERROGATE" -- REQUIRES PROGRAM CHANGE.
;<PLUMMER>X1CMD.MAC;5     5-MAY-73 20:44:19	EDIT BY PLUMMER
; INTON AND INTOFF IN "WAIT"
;<PLUMMER>X1CMD.MAC;4     5-MAY-73 20:02:44	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;3     5-MAY-73 17:18:02	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;2     5-MAY-73 15:29:42	EDIT BY PLUMMER
;ADD "EPHEMERAL", "NOT EPHEMERAL"
;ALL STUFF NEEDED FOR EPHEMERONS, SUCH AS IN RESET
;<N-EXEC>X1CMD.MAC;10     5-APR-73 11:08:12	EDIT BY PLUMMER
; INCLUDE ARCHIVE-PENDING CHECK IN "DELETE" (SHOULD BE DELF)
; UPDATE "INTERROGATE"
;<N-EXEC>X1CMD.MAC;9     4-APR-73 13:26:37	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;8    30-MAR-73 15:20:19	EDIT BY PLUMMER
; "LOGOUT" DOES "EXPUNGE" BEFORE DISC ALLOCATION CHECK
;<EXEC>X1CMD.MAC;70    26-FEB-73 16:30:24	EDIT BY PLUMMER

; 1.50
;<N-EXEC>X1CMD.MAC;6    22-FEB-73 14:59:33	EDIT BY PLUMMER
; CLEAN UP COMMENTS IN "GET" SO SOME INSTRUCTIONS SHOW THRU
; FIX LIMIT ON NUMBER OF RELATIVE FORK HANDLES IN "FORK"
;<PLUMMER>X1CMD.MAC;1    16-FEB-73 13:33:19	EDIT BY PLUMMER
; FIX FOR ^A AND ^R DURING OR AFTER PASSWORD INPUT
;<N-EXEC>X1CMD.MAC;4     9-FEB-73 20:49:14	EDIT BY PLUMMER
; MAKE "^E EDDT" RESET ENTRY VECTOR WITH LEN 3
;<N-EXEC>X1CMD.MAC;3     9-FEB-73 17:38:44	EDIT BY PLUMMER
;<N-EXEC>X1CMD.MAC;2     9-FEB-73 11:45:20	EDIT BY PLUMMER
; TTY MODE CONTROL CHANGE
;<PLUMMER>X1CMD.MAC;2     6-FEB-73 22:15:22	EDIT BY PLUMMER
; FIX TYPEOUT IN "LINK"
;<PLUMMER>X1CMD.MAC;1     6-FEB-73 18:23:27	EDIT BY PLUMMER
; "IDDT" DOES A SETNM EVEN THOUGH PROBABLY NOT NEEDED
; GETAB LOSSAGE IN WHERE HANDLED GRACEFULLY
; BEFORE FOLDS LINE AT 65 INSTEAD OF 55
;<EXEC>X1CMD.MAC;68     1-FEB-73 21:49:14	EDIT BY PLUMMER
; RESTORE TTY MODES AND SUBSYS NAME OF SUPERIOR AT "QUIT"
; CLEANUP XWD'S
;<EXEC>X1CMD.MAC;67    15-JAN-73 15:21:39	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;13    14-JAN-73 22:09:17	EDIT BY PLUMMER
; 1.49
;<PLUMMER>X1CMD.MAC;12    14-JAN-73 15:06:09	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;11    13-JAN-73 17:42:10	EDIT BY PLUMMER
; ADDED UFORK TO REMEMBER WHICH INFERIOR HAS THE USER
;<PLUMMER>X1CMD.MAC;10    12-JAN-73 15:40:49	EDIT BY PLUMMER
; NEW "NO IDDT"
;<PLUMMER>X1CMD.MAC;9    12-JAN-73 14:40:53	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;8    12-JAN-73 12:05:49	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;7    12-JAN-73 10:54:01	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;6    12-JAN-73 01:03:54	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;5    11-JAN-73 23:19:55	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;4    11-JAN-73 15:35:17	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;3    11-JAN-73 12:29:06	EDIT BY PLUMMER
;<PLUMMER>X1CMD.MAC;2    11-JAN-73 11:45:24	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;66     9-JAN-73 18:04:01	EDIT BY PLUMMER
; "IDDT" AND "NO IDDT", MODS TO "RESET" AND WAIT ROUTINES
; SETNM FOR PROGRAMS RUN FROM <SYSTEM>.  FOR AUTO STARTUP
; FIXED EXTRANEOUS [CONFIRM] FROM SAVE AND SSAVE -- NEW
;  GTJFN HANDLING OF EOL AGAIN.
;<EXEC>X1CMD.MAC;64     4-JAN-73 21:25:38	EDIT BY PLUMMER
; FIX "PROTECTION"
;<EXEC>X1CMD.MAC;63    28-DEC-72 16:43:57	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;62    28-DEC-72 16:36:25	EDIT BY PLUMMER
; DOWN TIME MESSAGE FORMAT CHANGES
;<EXEC>X1CMD.MAC;59    10-DEC-72 21:06:48	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;58     8-DEC-72 00:19:06	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;57     7-DEC-72 22:17:43	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;56     7-DEC-72 01:12:58	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;55     7-DEC-72 00:02:19	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;54     6-DEC-72 22:29:05	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;53     5-DEC-72 23:22:54	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;52     5-DEC-72 23:07:01	EDIT BY PLUMMER
; 1.48
; DATE INPUT ROUTINE MOVED TO XSUBRS
; USE READMAIL.SAV TO PRINT SYSTEM LOGIN MESSAGE
; "YOU HAVE A MESSAGE" PRINTED ONLY IF WRITTEN SINCE LAST LOGIN
; "WHERE" NO LONGER SYSTEM DEPENDENT -- REQUIRES 'LHOSTN' GETAB
; "REWIND" AND "UNLOAD" COMMANDS
; A FEW NOISE WORDS ADDED
; HALT COMMAND -- AGAIN
; SHUTDOWN WARNING ROUTINE

;<EXEC>X1CMD.MAC;51    19-NOV-72 12:16:54	EDIT BY WALLACE
;<EXEC>X1CMD.MAC;50    17-NOV-72 16:28:53	EDIT BY PLUMMER
; 1.47
; "INTERROGATE" COMMAND

;<EXEC>X1CMD.MAC;48    11-OCT-72 12:57:35	EDIT BY PLUMMER
; 1.46
; "WHERE" PRINTS FOREIGN HOST IF NET TTY.  
; WIPE PASSWORD ON HALF DUPLEX SCOPE TERMINALS (LOGIN, ETC)
; EDIT COMMAND
; NEW LINK ROUTINE
; HALT COMMAND
; CONTROL-C TURNED OFF DURING RESET
;<EXEC>X1CMD.MAC;47    25-SEP-72 16:35:45	EDIT BY PLUMMER
; LINK TO USER/TERMINAL
; WHERE UPDATED
;<EXEC>X1CMD.MAC;46    22-AUG-72 15:36:21	EDIT BY PLUMMER
;<EXEC>X1CMD.MAC;45    19-JUL-72 17:24:17	EDIT BY MURPHY
;<EXEC>X1CMD.MAC;44    17-JUL-72 16:56:31	EDIT BY MURPHY

; PDP-10 TENEX EXECUTIVE COMMANDS ROUTINES

;ROUTINES TO DECODE AND EXECUTE SPECIFIC COMMANDS.
;DISPATCHED TO BY EXEC COMMAND INTERPRETER MAIN FILE (XMAIN.MAC).
;IN ALPHABETICAL ORDER BY COMMAND NAME.

;ACCOUNT (OF FILE) <NAME> (IS) <ACCOUNT # OR STRING>

.ACCOU:	NOISE <OF FILE>
	HRROI A,
	CALL CINFN		;INPUT JFN INTO CJFN1
	 JRST CERR
	MOVE A,CJFN1		;MAKE SURE ITS A DISK FILE
	DVCHR			;DEVICE CHARACTERISTICS
	LDB A,[POINT 9,B,17]	;DEVICE TYPE
	JUMPN A,[UERR [ASCIZ /DISK FILES ONLY/]]

REPEAT 0,<	;SEE IF TARGET DIRECTORY SPECIFIES STRING OR NUMBER
ACCOU0:	MOVE A,CSBUFP
	MOVE B,CJFN1
	HRLZI C,B5		;DIRECTORY NAME ONLY, UNPUNCTUATED.
	JFNS			;GET STRING FOR DIRECTORY NAME>

REPEAT 1,<	;SEE IF USER SPECIFIES STRING OR NUMERIC ACCT
ACCOU1:	GJINF
	MOVE B,A		;USER'S LOGIN DIRECTORY
	MOVE A,CSBUFP
	DIRST
	 CALL SCREWUP>


ACCOU2:	MOVEI A,1
	MOVE B,CSBUFP
	STDIR			;CONVERT BACK TO GET LEFT HALF BITS
	 JRST CERR
	 JRST CERR
	ALLOW TSPC!TALT!TLPR!TEOL
	NOISE <IS>
	CALL ACCT		;GET ACCOUNT NUMBER OR STRING, USING A.
	CONFIRM
	MOVE B,A		;ACCT # OR STRING PTR
	MOVE A,CJFN1		;JFN
	SACTF			;SET ACCOUNT OF FILE
	 CALL [	CAIN 1,SACTX4
		 UERR [ASCIZ /NO ACCESS TO CHANGE ACCOUNT OF THAT FILE/]
		JRST SCREWUP]
	JRST RLJFNS		;GO RELEASE JFN & POPJ TO CMDIN4

;"APPEND" IS WITH "COPY" IN X2CMD.MAC.

;ADVISE (USER) <USERNAME OR TERMINAL NUMBER>

.ADVIS:	NOISE (USER)
	CALL TTYNUM
	MOVEI 1,400000(1)	;FORM TTY DESIGNATOR
	TLO 1,(1B1)		;SET "ADVISE TO" FLAG
	ADVIZ
	 CALL [	CAIN 1,ADVX4
		 ERROR <ONLY ONE ADVISE LINK IS PERMITTED>
		CAIN 1,ADVX2
		 ERROR <IGNORED>
		CAIN 1,ADVX1
		 ERROR <REFUSED>
		JRST JERR]
	RET

;ASSIGN <DEVICE> (AS) <LOGICALNAME>

.ASSIG:	NOISE (DEVICE)
	CALL DEVN		;READ DEVICE NAME, CHECK IT.
				;ACCEPTS USUAL TERMINATORS, PLUS COLON
	PUSH P,A		;...RETURNS DEV DESGNATOR IN A,
	PUSH P,B		;...CHARACTERISTICS IN B,
				;...JOB # ASS TO IN C.
	TLNN B,B3
	ERROR <%1H: CANNOT BE ASSIGNED>
	TLNN B,B5		;"AVAILABLE" BIT
	JRST [	TLNN B,B6	;NOT AVAIL, ASSIGNED?
		UERR [ASCIZ /%1H: NOT AVAILABLE/]	;%H: DEV NAME
		UERR [ASCIZ /%1H: ALREADY ASSIGNED TO JOB %3Q/]]
	TLNE B,B6
	$TYPE < [ALREADY ASSIGNED TO YOU] >;  ADVISORY MSG, NOT ERROR
	LDB C,[POINT 9,A,17]
	CAIN C,12		;DEVICE TYPE TTY?
	JRST [	MOVEI E,(A)	;MASK TTY #
		GJINF		;JOB'S CONT TTY # TO D
		CAMN D,E
		UERR [ASCIZ /YOU CAN'T ASSIGN YOUR CONTROLLING TERMINAL/]
		;DVCHR B5 & B6 CLEAR FOR TTY THAT IS ANOTHER JOB'S
		; CONTROLLING TTY. 11/25/70.
		MOVE A,['TTYJOB']
		SYSGT		;GET # OF TABLE OF TTYS
		HRR A,B		;TABLE #
		HRL A,E		;TTY # IS TABLE INDEX
		GETAB		;GET TABLE WORD
		 CALL JERR
		HLRZ C,A
		MOVE A,-1(P)	;DEV DESIG FOR ERROR MESSAGES
		CAIN C,-1
		JRST .+1	;TTY IS FREE IF -1 IN LH TBL WD
  JUMPG C,[UERR [ASCIZ /%1H: IS THE CONTROLLING TERMINAL FOR JOB %3Q/]]
						;POSITIVE: JOB #
		UERR [ASCIZ /%1H: BUSY/]]	;-2: BEING ASSIGNED
				;B0+JOB # ASSIGNED TO ALSO GETS THIS
				;IF FOR SOME REASON ABOVE CHECKS FAIL.
	SETZ B,			;INDICATES NO SYNONYM
	TRNE CBT,TEOL
	JRST ASSIG3		;CR, NO SYNONYM FIELD
	NOISE <AS>

;ASSIGN...
;NEXT FIELD, IF NOT NULL, IS LOGICAL NAME (SYNONYM).
	TLO Z,PUNCF
	CALL CSTR
	CAIG CNT,1
	JRST [	TLO Z,BAKFF		;NULL, NO LOG NAME. B 0.
		JRST ASSIG3]
		;MAKE SURE THE STRING IS NOT ALREADY A SYNONYM
		;(ACCEPT PHYSICAL DEVICE NAMES).
	CALL BUFFF		;OR IS .BFP OK?
	MOVE B,A
	CAIN TRM,ALTM
	CALL UBP
	ALTYPE <:>
	ERROR <SYNONYMS NOT IMPLEMENTED YET>; _______ 8/28/70
ASSIG3:	CONFIRM
	POP P,A		;DEVICE CHARACTERISTICS
	TLNN A,B7		;"MOUNTABLE" BIT
	JRST ASSIG5		;NOT MOUNTABLE
	MOVE A,(P)		;DEVICE DESIGNATOR
		;TLO A,B3	;SAY DON'T READ DIRECTORY
	MOUNT		;MIGHT BE NEEDED TO INVALIDATE DIR IN CORE ____
	 CALL JERR
ASSIG5:	MOVE A,(P)		;DEVICE DESIGNATOR
	ASND
	 CALL JERR
	POP P,A		;DEVICE DESIG AGAIN
	JUMPE B,.+3		;B CONTAINS 0 OR LOGICAL NAME PTR
	CSYNO
	 CALL JERR
	JRST CMDIN4


;ATTACH (USER) <NAME> (PASSWORD) -- (TSS JOB #) <#>

;LIKE LOGIN, THIS COMMAND ALSO ACCEPTS THE FORM:
;ATTACH
;(USER) <NAME>
;(PASSWORD) ----
;(TSS JOB #) <#>

;PASSWORD IS NOT ECHOED IN FULL DUPLEX, TYPED OVER MASK ON
;FOLLOWING LINE IN HALF DUPLEX.
;TSS JOB # CAN BE OMITTED IF THERE IS ONLY ONE JOB FOR GIVEN USER.
;IF NOT LOGGED IN, CURRENT JOB GOES AWAY (HANDLED BY MONITOR),
;IF LOGGED IN IT IS DETACHED.

.ATTAC:	CALL SPECEOL		;SPECIAL HANDLING OF EOL TERMINATOR FOR 
				;OPTIONAL FANCY FORMAT.
	NOISE <USER>
	CALL USERN		;INPUT USER (DIRECTORY) NAME
	TLNE A,B0
	ERROR <THAT'S A FILES-ONLY DIRECTORY NAME>
	MOVEI A,(A)		;MASK DIR #
	PUSH P,A		;SAVE DIR #
	CALL SPECEOL		;CHECK TERMINATOR & HANDLE EOL SPECIALLY
	CALL PASWD		;INPUT AND CHECK PASSWORD (USES A)
	PUSH P,A		;SAVE PASSWORD STRING POINTER
	NOISE <TENEX JOB #>
	INHELP <
 NUMBER IF YOU HAVE MORE THAN ONE JOB>
	ALLOW TALT+TSPC+TEOL
	CAIN CNT,2
	JRST [	MOVE B,.BFP
		ILDB B,B
		CAIN B,"-"
		JRST ATTAC5	;NULL INDICATED WITH "-"
		JRST .+1]
	TLO Z,BAKFF
	CALL DECIN
	JRST [	UALTYP [ASCIZ /-/]	;NULL. TYPE "-" ON ALT MODE.
		JRST ATTAC5]
	PUSH P,A		;SAVE JOB # INPUT BY USER

;ATTACH...
;CHECK THAT USER-GIVEN JOB # IS IN LEGAL RANGE
	SETO D,
	GTB 3		;GET MAX JOB # AS LENGTH OF SYSTEM TABLE 3
	MOVN A,A		;LENGTH COMES BACK NEGATIVE
	SUBI A,1		;SO VALUE COMES OUT RIGHT IN ERR MSG
	CAML A,(P)		;LENGTH MUST BE > GIVEN #
	SKIPGE D,(P)		;GIVEN JOB # TO D
	ERROR <TENEX JOB # MUST BE BETWEEN 0 AND %1Q>

;MAKE SURE GIVEN JOB # IS LOGGED IN W MATCHING DIR # AND IS ATTACHED

	GTB 1			;ENTRY NEG IF NO SUCH JOB
	JUMPL A,[UERR[ASCIZ/NO JOB %4Q/]]
	GTB 0			;LINE # OR NEGATIVE FOR DETACHED IN LH
	JUMPL A,ATAC4B
	HLRZ A,A		;TTY #
	ETYPE < [ATTACHED TO TTY%1O]>
	TLO KWV1,CONMAN		;REQUIRE CONFIRMATION IN THIS CASE
ATAC4B:	GTB 3			;LOGIN DIR NO IN RH
	MOVEI A,(A)		;MASK DIR NO UNDER WH THIS JOB IS LOGGED IN
	JUMPE A,[UERR [ASCIZ /JOB %4Q NOT LOGGED IN/]]
	MOVE E,-2(P)		;DESIRED DIRECTORY #, FOR USE IN ERR MSG
	CAME A,E
	ERROR <JOB %4Q NOT LOGGED IN UNDER %5R>
	JRST ATTAC7		;GO CONFIRM AND EXECUTE

;ATTACH...
;NO JOB # GIVEN, SEE IF THERE IS A UNIQUE ONE FOR GIVEN NAME.

ATTAC5:		;SEARCH SYSTEM TABLE 3 FOR A MATCH
	MOVE E,-1(P)		;DIR # TO SEARCH FOR (USED IN ERR MSGS!)
	SETO D,
	GTB 3		;SYSTEM TABLE 3: BY JOB #, LOGIN DIR # IN RH.
	HRLZ D,A		;SET UP LENGTH,,INDEX FOR AOBJN & GTB.
ATA5A:	GTB 3
	MOVEI A,(A)		;MASK THIS JOB'S LOGIN DIR #
	CAME A,E
ATA5B:	JRST [	AOBJN D,ATA5A		;LOOP ENDTEST
		UERR [ASCIZ /NO DETACHED JOB LOGGED IN UNDER %5R/]]
	GTB 0
	JUMPGE A,ATA5B		;IGNORE NON-DETACHED JOBS
		;FOUND ONE, SEE IF ITS THE ONLY ONE.
	MOVEI B,(D)
	PUSH P,B		;SAVE JOB # OF JOB FOUND
ATA5C:	AOBJP D,ATTAC7		;IF END OF TABLE, GO CONFIRM AND EXECUTE
	GTB 3
	MOVEI A,(A)
	CAME A,E
	JRST ATA5C
	GTB 0
	JUMPGE A,ATA5C		;IGNORE NON-DETACHED JOBS
	ERROR <TENEX JOB # REQUIRED - %5R HAS MORE THAN ONE DETACHED JOB>

;ATTACH...

ATTAC7:	CONFIRM
;EXECUTE THE COMMAND
;IF LOGGED IN, TYPE JOB # OF THIS JOB
	GJINF
	JUMPLE A,.+2
	ETYPE < DETACHING JOB # %3Q
>
;ATTACH
	POP P,A		;TSS JOB # TO ATTACH TO
	POP P,C		;PASSWORD STRING POINTER
	POP P,B		;RH: DIR # TO ATTACH TO
		;B0 OFF SAYS DON'T STOP IT
	ATACH
	 CALL [	CAIN A,ATACX4
		UERR [ASCIZ /INCORRECT PASSWORD/]
		;NOTE THAT BAD PASSWORD IS DETECTED ABOVE
		;IF NOT LOGGED IN
		JRST JERR]
		;THIS JOB CONTINUES RUNNING IF LOGGED IN.
	GJINF		;GET TSS JOB # IN A
	JUMPG A,CMDIN4		;LOGGED IN, GO GET NEXT COMMAND
		;NOT LOGGED IN, ATACH FAILED TO KILL JOB, DO SO IN EXEC.
	SETO A,		;SAY SELF
	LGOUT		;KILL JOB
	 CALL JERR		;LGOUT FAILED

;AVAILABLE [LINES/DEVICES]

.AVAIL:	KEYWD $AVAIL
	 T LINES,EOLOK,..TERM
	 JRST CERR
		;CAN'T CONFIRM HERE BECAUSE OF FUDGE-ENTRIES IN TABLE
	JRST (KWV)

$AVAIL:	TABLE
	T DEVICES,EOLOK
	T LINES,EOLOK,..TERM
	T T,NSPALT+EOLOK+INVIS,<[UALTYP [ASCIZ /ERMINALS /]
				JRST ..TERM]>	;"T" = "TERMINALS"
	T TE,NSPALT+EOLOK+INVIS,<[UALTYP [ASCIZ /RMINALS /]
				JRST ..TERM]>
	T TELETYPES,EOLOK+INVIS,..TERM
	T TERMINALS,EOLOK+INVIS,..TERM
	T TTYS,EOLOK+INVIS,..TERM
	TEND

;AVAILABLE TERMINALS

..TERM:	CONFIRM
	SETO D,		;WORD -1 OF A TABLE IS ALWAYS LENGTH
	GTB 4		;SYSTEM TABLE 4 IS LINE STATUSES
	HRLZ D,A		;D IS AOBJN COUNT,,LINE #
		;TLZ Z,F1	;CLEAR TO SAY NOTHING PRINTED YET
TERMI1:	GTB 4		;LINE # = TABLE INDEX. GET A LINE'S STATUS.
	HLRZ A,A		;LEFT HALF OF TABLE WORD
	CAIE A,-1		;IS -1 FOR FREE LINES
	JRST TERMI9
	CALL BEFORE		;TYPE COMMA OR MAYBE EOL
		;TYPE <LINE >;	;DESIREABLE?
	HRRZ B,D
	CALL TOCT		;TYPE LINE NUMBER
TERMI9:	AOBJN D,TERMI1
	TLNN Z,F1
	TYPE < ALL LINES IN USE>
EOLRET:	PRINT EOL		;COME HERE TO TYPE CRLF AND POPJ.
	RET

;AVAILABLE DEVICES
;DOES NOT LIST TTYS OR ANY NON-ASSIGNABLE DEVICES
;THIS LEAVES DTAS, MTAS, PTP, PTR, AND ANY OTHER DEVICES ADDED LATER.
;ALSO LISTS SEPARATELY DEVICES ALREADY ASSIGNED TO THIS JOB.

.DEVIC:	CONFIRM
		;TLZ Z,F1	;SAY NOTHING TYPED YET
		;"DEVLUP" EXECUTES THE NEXT LOC FOR EACH DEVICE, WITH
	CALL DEVLUP		;...NAME IN A, DVCHR WORD IN B.
	 CALL [	JUMPGE C,[RET]		;DONE IF ASSIGNED WITH ASND.
		TLNN B,B3		;DONE IF NOT ASSIGNABLE
		RET
		LDB B,[POINT 9,B,17]		;EXTRACT DEVICE TYPE
		CAIN B,12		;EXCLUDE TTYS ALSO
		RET
		CALL BEFORE		;SEPARATING CHARACTER(S)
		JRST SIXPRT]		;PRINT SIXBIT NAME
	TLNE Z,F1
	PRINT EOL
	JRST ASTTJ		;LIST DEVS ASSIGNED TO THIS JOB. WITH FILSTAT.

;SUBROUTINE FOR FORMATTING A LIST OF ITEMS SEVERAL TO A LINE.
;USED FOR AVAILABLE TERMINALS, AVAILABLE DEVICES, AND FILSTAT.
;BEFORE EACH ITEM: COMMA EXCEPT CRLF IF TOO FAR TO RIGHT.

BEFORE:	PUSH P,A
	PUSH P,B
	MOVE A,COJFN
	RFPOS
	MOVEI B,(B)		;MASK COLUMN POSITION
	CAIL B,^D65
	JRST [	PRINT EOL
		JRST .+3]
	TLOE Z,F1		;SUPPRESS COMMA BEFORE FIRST ONE
	PRINT ","
	PRINT " "		;SPACE AFTER COMMA OR EOL
	JRST [	POP P,B
		POP P,A
		RET]

;SUBROUTINE TO LOOP OVER ALL DEVICES FOR "AVAIL DEVICES" AND "FILSTAT".
;FOR EACH DEVICE, EXECUTES LOCATION AFTER CALL WITH SIXBIT NAME IN A
;    DEVICE CHARACTERISTICS WORD (A LA "DVCHR" EXCEPT B5) IN B,
;    -1 OR JOB # ASSIGNED TO IN C.
;RETURNS +2.
;DESTROYS A, B, C, D.

DEVLUP:	SETO D,
	GTB 6		;GET # DEVICES FROM TABLE 6
	HRLZ D,A		;AOBJN COUNT,,ABLE INDEX
DEVL1:	GTB 7		;GET DEVICE CHARACTERISTICS WORD FROM TABLE 7
	MOVE B,A
	GTB 10		;GET JOB # ASS TO, OR -1, FROM LH TABLE 8
	HLRE C,A
	GTB 6		;GET DEVICE NAME IN SIXBIT FROM TABLE 6
	PUSH P,D
	XCT @-1(P)
	POP P,D
	AOBJN D,DEVL1
	JRST [	AOS (P)
		RET]

;TYPE SIXBIT SYMBOL FROM A.
;USED IN "AVAILABLE DEVICES", "SYSTAT", "STATISTICS", AND "FILSTAT".

SIXPRT:	PUSH P,B
	PUSH P,C
	MOVE C,A
SIXPR1:	SETZ B,
	LSHC B,6
	ADDI B,40
	CALL CCHRO
	JUMPN C,SIXPR1
	JRST [	POP P,C
		POP P,B
		RET]

;BREAK (LINKS)

.BREAK:	NOISE <LINKS>
	CONFIRM
	INTOFF			;BE SURE TO DO BOTH TLINK AND ADVIZ
	HRLOI 1,(1B0+1B1)	;BREAK TO AND FROM CONTROLLING
	MOVEI 2,-1		;ALL REMOTES
	TLINK
	 CALL JERR
	MOVSI A,(1B0)		;BREAK ADVISE LINKS
	ADVIZ
	 CALL JERR
	INTON
	JRST CMDIN4

;CHANGE (ACCOUNT TO) N   COMMAND

.CHANG:
;DETERMINE WHETHER LOGGED IN USER TAKES STRING OR NUMERIC ACCT
	GJINF			;LOGIN DIR # TO A
	MOVE B,A
	MOVE A,CSBUFP		;STRING BUFFER PTR
	DIRST			;CONVERT DIR # TO STRING
	 CALL SCREWUP
	MOVEI A,1
	MOVE B,CSBUFP
	STDIR		;CONVERT BACK TO # PLUS BITS
	 CALL SCREWUP
	 CALL SCREWUP
;NOW B1 OF A ON FOR STRING ACCT. FINISH INPUTTING COMMAND.
	TLNN A,B1		;NOISE DEPENDS ON WHETHER USER TAKES...
	NOISE <ACCOUNT # TO>;	NUMERIC ACCOUNT,
	TLNE A,B1
	NOISE <ACCOUNT TO>;	OR STRING.
	CALL ACCT		;INPUT, CHK, CNVT ACCT INTO A (USES A )
	CONFIRM
	ETYPE < TIME USED ON PREVIOUS ACCT:
 %B IN %C
>;		;CHANGE MSG TO INCLUDE OLD ACCT __________
	CACCT		;JSYS TO CHANGE ACCOUNT #
	 CALL JERR
	JRST CMDIN4

;CLEAR (DIRECTORY OF DEVICE) <DEVICE NAME>
;FORCED CONFIRMATION

.CLEAR:	NOISE <DIRECTORY OF DEVICE>
	CALL DEVN
	LDB D,[POINT 9,A,17]		;DEVICE TYPE
	CAIE D,3
	ERROR <DECTAPES ONLY>
	TLNN B,B5		;AVAILABLE?
	JRST [	TLNN B,B6		;ASSIGNED?
		UERR [ASCIZ /%1H: NOT AVAILABLE/]
		UERR [ASCIZ /%1H: ASSIGNED TO JOB %3O/]]
	TLNN B,B8
	ERROR <%1H: NOT MOUNTED>
	CONFIRM
	INIDR		;INITILIZE DIRECTORY (DESIGNATOR IN A)
	 CALL JERR
	RET

;CLOSE (FILE) <OPEN FILE NAME>

.CLOSE:	NOISE <FILE>
	JRST NIYE		;_________________________ 

;COMMANDS (FROM FILE) <FILE NAME>

.COMMA:	NOISE <FROM FILE>
	JRST NIYE		;_________________________ 

;CONNECT (TO DIRECTORY) <NAME> (PASSWORD) --
;(IF STROLLO PROVIDES A WAY TO FIND OUT WHETHER A GIVEN DIRECTORY
; REQUIES A PASSWORD, MAKE IT REQUEST PASWD ON NEXT LINE (LIKE LOGIN)
; INSTEAD OF ASSUMING NULL IF NAME IS TERMINATED WITH CR BUT THIS
; DIRECTORY REQUIRES A PASSWORD).

.CONNE:	NOISE <TO DIRECTORY>
	CALL DIRNAM		;INPUT & CHECK DIRECTORY NAME
	PUSH P,A		;DIR # ETC AS RETURNED BY "STDIR"
	ALTYPE ( )
	ALLOW TSPC+TALT+TEOL
;PASSWORD IS SECOND, OPTIONAL ARGUMENT
	HRROI A,[ASCIZ //]		;USE NULL IF OMITTED
	TRNN CBT,TEOL
	CALL PASWD		;INPUT & CHECK PASSWORD
	ALLOW TALT+TSPC+TEOL
	CONFIRM
	PUSH P,A		;SAVE TEXT PTR TO PASSWD
	CALL CHKDAL		;CHECK CURRENT DIRECTORY BEFORE LEAVING
	POP P,B
	HRRZ A,(P)		;DIRECTORY #
	CNDIR
	 CALL [	CAIN A,CNDIX1
		UERR [ASCIZ /INCORRECT PASSWORD/]
		JRST JERR]
	CALL CHKDAL		;CHECK NEW DIRECTORY
	JRST CMDIN4

;CONTINUE
;RESUMES FROZEN INFERIOR FORKS
;DECODE AND CHECK SUBROUTINE ALSO USED BY REDIRECT/DETACH

$CONTI:	SKIPGE FORK		;HANDLE OF AN INFERIOR FORK
	ERROR <NO PROGRAM>;		;NO INFERIORS AT ALL
;"FORK" SAYS WHETHER A FORK EXISTS, AND SAYS WHICH FORK "START" AND
;"REENTER" USE, BUT SINCE IT CAN BE CHANGED WITH "FORK" COMMAND
;IT MAY NOT BE THE RIGHT ONE TO CONTINUE.
	SKIPGE A,RFORK		;HANDLE OF LAST RUN INFERIOR, IF ANY.
	ERROR <PROGRAM HASN'T BEEN RUN>;	NO FORK RUN SINCE RESET.
	RFSTS		;GET ITS STATUS (HANDLE IN A)
	TLNE A,077700		;DISTINGUISH -1 FROM 0-5,400000-400005
	ERROR <PROGRAM DISAPPEARED>;		;-1 = UNASSIGNED HANDLE.
;	JUMPGE A,[UERR [ASCIZ /NOT INTERRUPTED/]]	;B0 MEANS FROZEN
	RET

;"CONTINUE" COMMAND DISPATCHES HERE

.CONTI:	CALL $CONTI
	CONFIRM
;"REDIRECT/DETACH ... (AND) CONTINUE" JOINS HERE

..CONT:	SETOM A
	CALL MAPPF		;UNMAP ANY PAGE OF USER
	MOVEI E,PTTYMD
	CALL LTTYMD		;LOAD USER'S TTY MODE
	TLO Z,RUNF		;SAY SO.
	MOVE A,RFORK		;FORK WHICH RAN LAST
	RFSTS			;FIND OUT WHY IT STOPPED
	HLRZ 3,1
	TRZ 3,1B18		;FLUSH FROZEN BIT
	MOVE 1,RFORK
	CAIE 3,2		;FORK WAS HALTED OR FORCE TERM?
	CAIN 3,3
	SFORK			;YES. START IT
	JRST WAIT		;GO RESUME FORK AND WAIT FOR IT

;"COPY" IS IN X2CMD.MAC.

;DAYTIME
;THIS AND ALL ONE-WORD COMMANDS ARE CONFIRMED BEFORE DISPATCH.

.DAYTI:	PRINT " "
	MOVE A,COJFN		;DESTINATION
	SETOB B,C		;SAY CURRENT DATE AND TIME, SUPER-VERBOSE FORMAT
	ODTIM
	PRINT EOL
	RET

;DEFINE (NEW FILE) <NAME> (AS) <OLD OR NEW NAME>
;DECODER ONLY -- NOT TO BE IMPLEMENTED IN MINISYSTEM.

.DEFIN:	NOISE <NEW FILE>
	HRROI A,		;NO DEFAULT EXTENSION FOR FIRST FILE
	MOVEI B,B0+B1		;"FOR OUTPUT USE" AND "MUST BE NEW" BITS
	CALL SPECFN		;GET FILE NAME USING GTJFN FLAGS IN B
	 JRST CERR		;NO DEFAULT FOR "-" INPUT
	NOISE <AS>
	MOVE A,[2,,2]	;SAY DEFAULT NAME AND EXT TO THOSE OF 1ST FILE
	MOVEI B,B3		;SAY "TYPE OLD/NEW"
		;THESE GTJFN BITS ACCEPT AN OLD OR NEW NAME BUT DEFAULT
		;VERSION TO HIEST OLD RATHER THAN NEXT HIGHER AS "COUTFN" DOES.
	CALL SPECFN
	 JRST CERR
	CONFIRM
	JRST NIM		;TYPE "NOT IN MINISYSTEM"

;DELETE <FILE GROUP>

.DELET:	MOVE A,[2,,2]		;SAY DEFAULT NAME & EXT TO PREVIOUS
	HRLI B,-2		;DEFAULT VERSION TO LOWEST
	HRRI B,B2+B11+B15+B16	;OLD FILE, *'S AND COMMA OK
	CALL SPECFN		;INPUT FILE GROUP DESCRIPTOR
	 JRST CERR
	ALLOW TSPC+TALT+TEOL
	CONFIRM
	CALL FRSTF		;TYPE NAME IF A GROUP

DELET0:	HRRZ A,@INIFH1		;JFN
	DVCHR
	TLNN B,(1B4)		;DISK?
	 JRST DELET1		;NO
	HRRZ A,@INIFH1
	MOVE B,[1,,FDBBCK]	;GET BACKUP WORD
	MOVEI C,C		;TO C
	CALL $GTFDB
	 ERROR <$GTFDB ERROR>
	TLNE C,FDBARC		;ARCHIVE BIT
	 JRST [	UTYPE [ASCIZ /CANNOT DELETE ARCHIVE-PENDING FILE
/]
		JRST NEXTF]	;RETURNS TO FRSTF CALL +1

DELET1:	MOVE A,@INIFH1		;JFN(FLAGS TELL DELF WHETHER TO RELEASE)
	DELF
	 CALL [	CAIN A,DELFX1
		UERR [ASCIZ /PROTECTION VIOLATION/]
		JRST JERR]
	JRST NEXTF		;GET NEXT FILE IF GROUP, TYPE NAME,
				;RETURN TO WHERE FRSTF WAS CALLED.
				;GO TO RLJFNS IF NO MORE FILES.

;"DDT" COMMAND. LOAD DDT IN INFERIOR FORK IF NECESSARY,
;TRANSMIT SYMBOL TABLE POINTER, START DDT.

.DDT:	SKIPGE DDTFLG		;DDT ALREADY LOADED?
	JRST DDT4		;YES

;DETERMINE WHETHER THERE IS INFERIOR FORK WITH SYMBOL TABLE POINTER
;IF NOT, USE DDT THAT ALREADY CONTAINS STENEX SYMBOLS.

	SETZ C,		;SAYS NO SYM TAB PTR
	SKIPGE FORK
	JRST DDT2		;NO FORK

;THERE IS A FORK, SEE IF IT ALREADY CONTAINS SOMETHING THAT LOOKS
;LIKE A DDT.  IF SO, LEAVE IT, AS IT MAY CONTAIN BREAKPOINTS,
;MODIFIED SYM TAB PTR, ETC.

	MOVEI A,DDTORG		;DDT BEGINNING ADDRESS
	CALL MAPPF
	TLNN A,B5		;PAGE EXISTS?
	JRST DDT1		;NO, FORK DOESN'T HAVE DDT
	CALL LOADF		;YES, LOAD FIRST WORD
	CAME A,[JRST DDTORG+2]
	JRST DDT1
	MOVEI A,DDTORG+1
	CALL LOADF		;SECOND WORD IS 0,,PTR PTR
	CAIG A,-1
	CAIG A,DDTORG
	JRST DDT1
	JRST DDT3		;ALREADY HAVE ACCEPTABLE DDT
;FORK DOESN'T HAVE DDT, SEE IF IT HAS SYM TAB PTR

DDT1:	MOVEI A,.JBSYM		;WHERE LOADER LEAVES SYM TAB PTR
	CALL MAPPF		;MAP PAGE OF FORK
		;SETZ C,	;SAYS NO SYM TAB PTR
	TLNE A,B5		;NO PAGE?
	TLNN A,B2		;READ PROTECT?
	JRST DDT2		;NO USEABLE PTR
		;ANDI A,777
	MOVE C,PAGEN(A)		;FETCH SYM TAB PTR WORD
		;IF NEGATIVE, IT WILL BE ASSUMED TO BE PTR
	MOVE D,PAGEN+1(A)	;.JBUSY IS .JBSYM+1
		;NO CHECKING NEEDED,  DDT WILL FIX IT UP.
DDT2:	PUSH P,C		;SAVE SYM TAB PTR OR 0
	PUSH P,D		;SAVE UNDEF SYM PTR
	MOVE B,[POINT 7,[ASCIZ /<SUBSYS>SDDT.SAV/]] ;DDT WITH SYMBOLS
	JUMPGE C,.+2		;SYM TAB PTR CANT BE .GE. 0
	MOVE B,[POINT 7,[ASCIZ /<SUBSYS>UDDT.SAV/]]
;LOAD SELECTED DDT
	CALL $GTJFN		;ASSIGN JFN FOR STRING PTR IN B
		;ENTRY TO "$LPT" SUBR NEAR "DIRECTORY"
	CALL $MERGE		;MERGE IT INTO FORK, CREATING FORK IF NONE,
		;AND RELEASE JFN

;DDT...
;STORE SYMBOL TABLE POINTER

	POP P,D
	POP P,C
	JUMPGE C,DDT3		;NOT A SYMBOL TABLE POINTER
	MOVEI A,DDTSYM
	CALL MAPPF
	ANDI A,777
	HRRZ E,PAGEN+1(A)	;WHERE TO STORE UNDEF PTR
	HRRZ A,PAGEN(A)		;POINTER TO WHERE TO PUT POINTER
	CALL MAPPF
	ANDI A,777
	MOVEM C,PAGEN(A)		;STORE POINTER
	HRRZ A,E		;WHERE TO PUT UNDEF PTR IN DDT
	CALL MAPPF
	ANDI A,777
	MOVEM D,PAGEN(A)	;STORE IT
DDT3:	SETOM DDTFLG		;SAY DDT LOADED & SYM TAB PTR MOVED
;TRANSFER CONTROL TO DDT

DDT4:	MOVNI B,3		;CODE FOR PA1050 IF ANY
	CALL CHKPAT		;PA1050 RUNNING IN FORK?
	JUMPG B,GOTO2		;RETURNS RESTART ADDRESS IF YES
	MOVEI B,DDTORG		;DDT STARTS AT ITS FIRST LOCATION
	JRST GOTO2		;JOIN "GOTO" COMMAND: UNMAP PAGE, START FORK.

;DEASSIGN <DEVICE NAME>
;ACCEPTS LOGICAL OR REAL DEVICE NAME

.DEASS:	NOISE (DEVICE)
	CALL DEVN		;INPUT DEVICE NAME
		;NOW HAVE DEVICE DESGNATOR IN A, CHARACTERISTICS WORD IN B.
	TLNN B,B6
	ERROR <%1H: NOT ASSIGNED>
	TLNN B,B5
	ERROR <%1H: NOT ASSIGNED TO YOU>
	CONFIRM
	TLNE B,B8		;MOUNTED?
	TLNN B,B7		;MOUNTABLE?
	JRST .+3		;NOT MOUNTED OR NOT MOUNTABLE
	DSMNT		;REDUCES CHANCES OF CLOBBEREING NEXT
	 CALL JERR		;...USER'S DECTAPE.
		;MAY ALSO WRITE DIRECTORY IN SOME CASES (?)
	RELD
	 CALL JERR
		;DO WE HAVE TO DO ANYTHING TO FLUSH SYNONYMS HERE?
	JRST CMDIN4

;"DETACH" CODE IS WITH "REDIRECT" BELOW.


;DUMP (ON) <FILE NAME>.
;SAVES ENVIRONMENT.
;CAN'T BE FULLY IMPLEMENTED TIL ENVIRONMENT SAVE FILES ARE SPECIFIED.

.DUMP:	NOISE <ON>
	JRST NIYE		;____________________ 

;EDIT (FILE)

;FIRES UP TECO AT CCL ENTRY WITH JFN OF FILE SPECIFED IN AC1
; DEFAULT FILE IS MOST RECENT VERSION OF THE LAST ONE MENTIONED
; IN AN "EDIT" COMMAND.  THE ACTUAL NAME OF THIS IS SAVED AWAY IN
; "EDFILE" SO THAT IT IS PRESERVED THROUGH RESETS.

.EDIT:	CALL CEDFN		;GET EDIT FILE NAME,DEFAULT=PREVIOUS
	 JRST EDIT7		;NO FILE SPECIFIED
	PUSH P,A		;SAVE THE JFN FOR STARTING TECO
	CONFIRM

	MOVE A,[EDFILE,,EDFILE+1]
	SETZM -1(A)		;CLEAR DEFAULT POINTERS WORD
	BLT A,EDFILE+EDFILL	;AND SAVED STRINGS

EDIT1:	HRROI A,EDFILE+1	;BEG OF STRING STORAGE
	MOVE B,0(P)		;EDIT JFN
	HRLZM A,EDFILE		;SET NAME HALF OF POINTER WORD
	MOVSI C,(1B8)		;OUTPUT NAME OF JFN
	JFNS
	IBP A			;INSERT A NULL
	HRROI A,1(A)		;BUMP TO NEXT WORD
	HRRM A,EDFILE		;SET EXT HALF OF POINTER WORD
	MOVSI C,(1B11)		;OUTPUT EXT OF JFN
	JFNS

EDIT2:	MOVE A,0(P)		;GET EDIT JFN AGAIN
	MOVE B,[7B5+1B22]	;7-BIT, APPEND
	OPENF			;MAKE SURE IT EXISTS
	 JRST CERR
	TLO A,(1B0)		;DONT RELEASE THE JFN
	CLOSF			;TECO WILL OPEN IT
	 CALL SCREWUP

EDIT3:	HRROI B,[ASCIZ /<SUBSYS>TECO.SAV/]
	CALL TRYGTJ		;GTJFN, STACK FOR RELEASE AT ERROR, ^C
	 CALL CERR
	PUSH P,A		;SAVE FOR LATER

EDIT4:	CALL RESET		;FLUSH OLD FORK, IF ANY
	CALL ECFORK		;GET A CLEAN ONE
	MOVE A,['TECO  ']
	MOVEM A,SUBSYS
	SETZM PROPSF		;SET "GET2B"
	MOVEI B,GETILI		;SETUP TO CATCH
	MOVEM B,ILIDSP		;ILLEGAL GET JSYS
	POP P,A			;JFN ON TECO
	HRL A,FORK
	GET			;AND RELEASE JFN
	SETZM ILIDSP		;TURN OFF SPECIAL ILL INSTR HANDLING

EDIT5:	MOVEI A,1		;REFERENCE AC1
	CALL MAPPF
	POP P,PAGEN(A)		;JFN FOR TECO TO GOBBLE DOWN
	MOVE A,FORK
	MOVEI B,PAGEN
	SFACS			;MAPFF WON'T DO THIS

EDIT6:	MOVEI B,2		;CCL ENTRY
	JRST START1		;START UP THE TECO


EDIT7:	SKIPN A,EDFILE		;IS THERE A SAVED FILE NAME.EXT?
	CALL CERR		;NO
	MOVE B,[CJFNBK,,CJFNBK+1]
	SETZM -1(B)
	BLT B,CJFNBK+10		;CLEAR DEFAULT BLOCK

	HLROM A,CJFNBK+4	;DEFAULT NAME
	HRROM A,CJFNBK+5	;DEFAULT EXTENTION
	MOVE B,[377777,,377777]
	MOVEM B,CJFNBK+1	;NO IO
	MOVSI C,100000
	MOVEM C,CJFNBK+0	;OLD FILE ONLY, NO CONFIRM

EDIT8:	MOVEI A,CJFNBK		;DEFAULT BLOCK PTR
	MOVEI B,0		;FORCE DEFAULTING
	GTJFN
	 JRST [	SETZM EDFILE	;FORGET PAST FILE
		UERR [ASCIZ /EDIT FILE HAS BEEN DELETED/]]
	MOVE B,JBUFP
	PUSH B,A		;SAVE FOR RELEASING ON ERROR,ETC
	MOVEM B,JBUFP
	PUSH P,A		;WHERE REST OF EDIT WANTS THE JFN
	CONFIRM
	JRST EDIT3		;FILE KNOWN TO EXIST, JUST GET TECO

;ENTRY (VECTOR LOCATION) <OCTAL> (LENGTH) <OCTAL>

.ENTRY:	SKIPGE FORK
	ERROR <NO PROGRAM>
	NOISE <VECTOR LOCATION>
	CALL OCTAL
	 JRST CERR
	ALLOW TALT+TEOL+TSPC
	PUSH P,A
	MOVEI A,1		;DEFAULT LENGTH
	TRNE CBT,TEOL
	JRST ENTRY5
	NOISE <LENGTH>
	CALL OCTAL		;OCTAL TO ALLOW 254000 FOR COMPATIBILITY
	 JRST [	UALTYP [ASCIZ /1 /]		;NULL INPUT
		MOVEI A,1		;DEFAULT LENGTH AGAIN
		JRST .+1]
	ALLOW TALT+TEOL+TSPC
	CAILE A,777		;TOO LONG?
	JRST [	CAIN A,254000		;ALLOW JRST FOR COMPATIBLE
		JRST .+1
		JRST CERR]		;"?"
ENTRY5:	CONFIRM
	POP P,B		;LOCATION
	HRL B,A		;LENGTH
	MOVE A,FORK
	SEVEC
	RET

;"NOT EPHEMERAL"  TURNS OFF FDBEPH BIT IN FDB

.NOTEP:	TDZA 1,1		;0 FOR USE IN CHFDB


;"EPHEMERAL" TURNS ON THE FDBEPH BIT

.EPHEM:	SETOM 1			;1 FOR USE IN CHFDB
	PUSH P,1
	CALL $GET1		;GET A PROGRAM JFN, LIKE "GET" OR "RUN"
	ALLOW TSPC+TALT+TEOL
	CONFIRM
	MOVE 1,CJFN1		;JFN OF THE NAMED FILE
	DVCHR
	TLNN 2,(1B4)
	 ERROR <%1H DOESN'T HAVE EPHEMERONS>
	HRR 1,CJFN1
	HRLI A,FDBCTL		;FDB CONTROL BITS WORD
	MOVSI 2,(FDBEPH)
	POP P,3
	CHFDB
	JRST RLJFNS		;RELEASE JFN AND RETURN

;'EXEC' - STARTS AN EXEC IN INFERIOR FORK SEPARATE FROM 'FORK'

.EXEC:	HRROI 2,[ASCIZ /<SYSTEM>EXEC.SAV/]
	CALL TRYGTJ		;GTJFN AND SAVE IT
	 CALL JERR
	ALLOW TSPC+TEOL+TALT
	CONFIRM
	JRST CIN4		;HANDLE AS AN EPHEMERON

;EXPUNGE (DELETED FILES)

.EXPUN:	KEYWD $EXPUN
	 T DELETED,EOLOK+LPROK,..EXDL
	 JRST CERR
	 JRST (KWV)

$EXPUN:	TABLE
	T ALL,EOLOK+LPROK,..EXAL
	T DELETED,EOLOK+LPROK,..EXDL
	T PERMANENT,INVIS+CONMAN+WHLUO+OPRUO+EOLOK+LPROK,..EXPE
	T SCRATCH,EOLOK+LPROK,..EXSC
	T TEMPORARY,EOLOK+LPROK,..EXTM
	TEND


..EXAL:	NOISE <DELETED, SCRATCH, AND TEMPORARY FILES>
	HRLZI 1,(1B13!1B15!1B16)
	JRST ..EXPU

..EXDL:	NOISE <FILES>
	HRLZI 1,(1B13)
	JRST ..EXPU

..EXPE:	NOISE <FILES>
	HRLZI B,WHLUO+OPRUO
	CALL PRVCK		;SEE THAT REQUIRED CAPS ARE ENABLED
	HRLZI 1,(1B14)
	JRST ..EXPU

..EXSC:	NOISE <FILES>
	HRLZI 1,(1B15)
	JRST ..EXPU

..EXTM:	NOISE <FILES>
	HRLZI 1,(1B16)

..EXPU:	PUSH P,1
	ALLOW TSPC+TALT+TEOL
	CONFIRM
	GJINF
	HRR 1,2
	HLL 1,0(P)
	DELDF
	SUB P,[1,,1]
	RET

;FORK <OCTAL FORK HANDLE>
;SETS FORK ACCESSED BY START, REENTER, GOTO, /, \, TEN50 DDT, SAVE.
;DOESN'T UPDATE SUBSYSTEM NAME (SUBSYS); MAYBE LATER IT SHOULD.

.FORK:	CALL OCTAL
	 JRST CERR
	ALLOW TALT+TSPC+TEOL
	TRO A,400000		;OK IF USER OMITS SIGN
	CAIN A,400000		;"SELF" IS LEGAL ONLY FOR WHEELS.
	JRST [	HRLZI B,WHLUO	;INDICATE WHEEL PRIV MUST BE ENABLED
		CALL PRVCK	;TEST SPECIAL CAPABILITIES
		 JRST FORK1	;NO ENABLE OR NO WHEEL CAPABILITY
		JRST FORK2]
	CAIL A,400001
	CAILE A,400017
FORK1:	ERROR <FORK HANDLE MUST BE BETWEEN 1 AND 17>
FORK2:	PUSH P,A
	RFSTS			;SEE IF THIS FORK HANDLE IS ASSIGNED.
	TLNE A,077700		;DISTINGUISH -1 FROM 0-5, 400000-400005.
	ERROR <NO SUCH FORK>	;-1 = UNASSIGNED HANDLE.
	CONFIRM
	POP P,FORK		;SAVE HANDLE FOR OTHER COMMANDS TO USE
	JRST CMDIN4

;MERGE <FILE> COMMAND.
;GETS A FILE INTO CURRENT FORK WITHOUT RESETTING.
;PUTS BACK ENTRY VECTOR WORD THAT WAS THERE BEFORE COMMAND

.MERGE:	CALL $GET1		;INPUT PROGRAM NAME
	ALLOW TSPC+TEOL+TALT
	CONFIRM

;SUBROUTINE ENTRY FOR "DDT" COMMAND. JFN IN CJFN1.
$MERGE:	SKIPGE A,FORK		;SKIP IF EXEC HAS INFERIOR FORK
	JRST $GET2		;CREATE FORK, GET PROG, USE ITS ENTRY.
	GEVEC			;ALREADY HAVE A FORK
	PUSH P,B		;SAVE SAME
	CALL $GET2		;GET PROGRAM
	POP P,B			;PREVIOUS ENTRY VECTOR
	MOVE A,FORK		;FORK HANDLE AGAIN
	JUMPE B,.+2		;JUMP IF THERE WAS NO ENTRY VECTOR WD
	SEVEC			;SET ENTRY VECTOR TO OLD VALUE
	RET


;SUBROUTINE TO INPUT A PROGRAM NAME.
;FIRST PART OF GET, RUN, MERGE.
$GET1:	NOISE (FILE)
$GET11:	SETZ A,			;SAY DEFAULT TO CONNECTED DIRECTORY
	CALL CPFN		;INPUT PROGRAM NAME AND ASSIGN JFN
	 JRST [	TRNE CBT,TEOL	;FAIL.
		JRST CERR	;AFTER CR TYPE "?" AND ABORT COMMAND.
		UTYPE [ASCIZ /? /] ;OTHER TERMINATORS, " ? " AND RETRY.
		MOVE BFP,.BFP	;BACK UP COMMAND BUFFER POINTER
		BTCHER		;STOP IF NON-INTERACTIVE
		JRST $GET11]	;GO RETRY.
	RET

;RUN <FILE> COMMAND = GET + START

.RUN:	PUSH P,[..STRT]		;SET RETURN TO JOIN "START" COMMAND,
				;FALL INTO "GET".



;GET <FILE> COMMAND.
;RESETS THEN CREATES ONE FORK AND GETS PROGRAM INTO IT.
;CODED IN SUBROUTINES SO CODE CAN BE SHARED WITH "MERGE".

.GET:	CALL $GET1		;INPUT PROGRAM NAME

;<SUBSYSTEM NAME> JOINS HERE AFTER CALLING CPFN AND SETTING
; RETURN TO JOIN START COMMAND (..STRT).
GET1:	ALLOW TSPC+TEOL+TALT
	CONFIRM
	CALL RESET		;CLOSE FILES, KILL ALL INFERIOR FORKS.
				;NOW FALL INTO $GET2, WHICH WILL RETURN
				;TO COMMAND INPUT FOR "GET" BECAUSE
				;DISPATCH WAS WITH "PUSHJ".

;GET...
;SUBROUTINE TO GET A PROGRAM INTO CURRENT FORK, FOR GET, RUN, AND MERGE.
;AT ENTRY CJFN1 MUST CONTAIN JFN OF FILE TO GET.

$GET2:	SKIPL FORK		;IS THERE A FORK?
	JRST GET2B		;YES (HAPPENS FOR "MERGE")
	CALL ECFORK		;CREATE A FORK
	MOVE B,CJFN1		;JFN
	CALL SUBNAM		;SUBSYS NAME TO CELL "SUBSYS",
				;FOR USE WHEN FORK IS RUN (LTTYMD)
GET2B:	SETZM PROPSF		;"PROPRIETARY" FLAG, MAY BE SET IF
				;APPROPRIATE
			;NOW WHAT? TEST FILE'S PROTECTION? _____ 
	MOVEI A,GETILI		;SET SPECIAL IL INST TRAP DISPATCH
	MOVEM A,ILIDSP		;SO "GET" ERRORS CAN BE DETECTED
	HRR A,CJFN1
	HRL A,FORK
	GET
	SETZM ILIDSP		;CLEAR IL INST SPECIAL DISPATCH ADDRESS
	CALL RLJFNS		;RELEASE JFNS
			;ANYTHING ELSE?
	RET



;ILLEG INST TRAP DURING GET JSYS
;TYPE EXEC ERROR MESSAGES FOR CERTAIN ERRORS

GETILI:	PUSH P,A
	MOVE A,ERCOD		;SYSTEM ERROR CODE
	CAIN A,GETX1
	ERROR <BAD CORE SAVE FILE FORMAT>
	CAIN A,GETX2
	ERROR <SYSTEM SPECIAL PAGES TABLE FULL>
	POP P,A
	JRST ILIPSI		;OTHER ERRORS TREATED IN GENERAL MANNER

;CREATE FORK FOR PROGRAM. USED HERE AND FOR "\"

ECFORK:	MOVEI A,-1		;NO OPTIONS, REDICULOUS PC
	CFORK
	 ERROR < NO FORKS AVAILABLE>
	MOVEM A,FORK		;HANDLE OF CURRENT INFERIOR
	FFORK			;LEAVE IT FROZEN
;TRANSMIT SPECIAL CAPABILITIES POSSIBLE TO NEW INFERIOR FORK,
; ENABLED IF ENABLED IN THIS EXEC.
;LATER SHOULD ONLY TRANSMIT RH, LH B0-B8 SHD COME FROM FILE __________
	MOVE A,FORK
	MOVE B,[777000,,777777]	;XMIT WHEEL, ETC.  BITS 0-8
				;WILL COME FROM FILE EVENTUALLY
	SKIPE C,PRVENF		;IF USER HAS "ENABLE"D IN THIS EXEC,
	MOVE C,B		;ENABLE TRANSMITTED CAPABILITIES
	EPCAP
	MOVE A,[INPTTY,,PTTYMD]
	BLT A,PTTYMD+NTTYMD-1	;SETUP INITIAL TTY MODES
	RET

;SUBNAM
;SUBR THAT CONVERTS JFN IN B TO APPROPRIATE SUBSYSTEM NAME WORD
;  FOR "SETNM" JSYS.
;STORES IN CELL "SUBSYS", DOESN'T "SETNM".
;TRANSPARENT, ONE USE IN "GET" CODE.

SUBNAM:	PUSH P,A
	PUSH P,B
	PUSH P,C
	PUSH P,D
;GET STRING FOR GIVEN JFN
	MOVE A,CSBUFP
		;JFN IS IN B
	MOVE C,[1B2+1B5+1B8+1B35]
	JFNS		;DEVICE:<DIRECTORY>NAME
	SETZ A,			;CONV DIR NAME TO SIXBIT IN A
	MOVEI B,6
	MOVE D,[POINT 6,A,-1]
	ILDB C,CSBUFP
	CAIE C,"<"		;LOOK FOR START OF DIR NAME
	JRST .-2
	ILDB C,CSBUFP
	CAIE C,">"		;END OF DIR NAME?
	JRST [	SUBI C,40	;NO, CONV TO SIXBIT
		JUMPLE B,.-2	;DON'T STORE IF ALREADY 6 CHARS
		IDPB C,D
		SOJA B,.-2]
	CAME A,['SUBSYS'] ;BELIEVE SUBSYS OR HACKS DIRECTORY
	CAMN A,['HACKS ']
	JRST SUBN4
	CAMN A,['SYSTEM']
	JRST SUBN4			;BELIEVE SYSTEM, TOO
	MOVE A,['(PRIV)']	;PRIVATE DIRECTORY, USE (PRIV)
	JRST SUBN5
;COMPARE SUCCEEDED, PACK SUBSYSTEM FILE NAME INTO SIXBIT AND USE IT.

SUBN4:	SETZ A,
	MOVE B,[POINT 6,A,-1]
	MOVEI D,6
SUBN4A:	ILDB C,CSBUFP
	JUMPE C,SUBN5		;END OF NAME, DONE
	TRC C,40		;CONVERT TO SIXBIT
	IDPB C,B
	SOJG D,SUBN4A		;ALSO STOP AT 6 CHARS
SUBN5:	MOVEM A,SUBSYS		;SUBSYS=PTTYMD+10
	JRST [	POP P,D
		POP P,C
		POP P,B
		POP P,A
		RET]

;GOTO <OCTAL #>

.GOTO:	CALL OCTAL
	 JRST CERR
	ALLOW TSPC+TALT+TEOL
	MOVE B,A		;ADDRESS INTO B FOR USE BELOW
	SKIPGE FORK		;CHECK HANDLE OF FORK KNOWN TO EXEC
	ERROR <NO PROGRAM>;		;NONE AT ALL
	CALL MAPPF		;MAP PAGE CONTAINING ADDRESS. GETS ACCESS.
	TLNN A,B5
	ERROR <NO SUCH PAGE>
	TLNN A,B4
	ERROR <CAN'T EXECUTE THAT PAGE>
	CONFIRM
	CALL CHKPAT		;SETUP STUFF FOR PA1050 IF LOADED

;START FORK AT ADDRESS IN B
;"DDT" JOINS HERE

GOTO2:	SETO A,
	CALL MAPPF		;UNSHARE MAPPED PAGE, IF ANY
	MOVEI E,PTTYMD		;SET UP PROGRAM'S TELETYPE MODES
	CALL LTTYMD		;..
	TLO Z,RUNF		;SAY PROGRAM'S TELETYPE MODES ARE IN EFFECT
	CALL IFORK		;PREPARE FORK(S) AND SETUP RFORK
	TLNN B,1		;DON'T START IF LH NON-0
	SFORK		;START FORK (USES A AND B)
	JRST WAIT		;WAIT FOR IT TO TERMINATE

;IDDT COMMAND AND NO IDDT COMMAND

;F1 IS CLEARED BY MAIN DISPATCH (TO .IDDT) AND SET BY "NO"

.IDDT:	TLNE Z,F1		;"NO IDDT" COMMAND?
	 JRST .NOID
	SETOM A
	CALL MAPPF		;UNMAP ANY INFERIOR PAGE
	INTOFF			;WHILE THINGS ARE UP IN THE AIR
	SKIPL A,IDFORK		;IS THERE AN IDDT ALREADY??
	JRST [	MOVEI B,1	;REENTER ADDR
		JRST IDDT4]
	SKIPGE FORK		;IS THERE AN INFERIOR?
	CALL ECFORK		;NO, MAKE ONE
	PUSH P,FORK		;SAVE INFERIOR
	CALL ECFORK		;GET A NEW FORK
	MOVE A,FORK		;NEW FORK
	MOVEM A,IDFORK
	POP P,FORK

IDDT1:	MOVSI A,100001		;OLD, SHORT
	HRROI B,[ASCIZ /<SUBSYS>IDDT.SAV/]
	GTJFN
	 JRST [	MOVE A,IDFORK
		KFORK
		SETOM IDFORK	;SAY IT DOESN'T EXIST
		INTON
		JRST CERR]
	HRL A,IDFORK		;FORM FORK.JFN
	GET
	MOVE A,IDFORK
	GEVEC
	HLRZS B			;GET LENGTH
	CAIGE B,3		;TEST FOR NEW STYLE IDDT
	 JRST [	MOVE A,IDFORK
		KFORK
		SETOM IDFORK
		INTON
		UERR [ASCIZ /NEW IDDT REQUIRED/]]

IDDT2:	MOVE A,IDFORK
	MOVE B,FORK
	MOVEM B,UFORK		;REMEMBER WHERE THE USER IS
	SPLFK			;MAKE B INFERIOR TO A
	 CALL [	PUSH P,A	;SAVE ERROR CODE
		MOVE A,IDFORK
		KFORK
		SETOM IDFORK
		INTON
		POP P,A
		JRST JERR]	;GO SAY ERROR FROM JSYS
IDDT3:	MOVEM A,PAGEN+1		;HANDLE BY WHICH IDDT WILL KNOW INF.
	MOVE A,['IDDT  ']
	MOVEM A,SUBSYS		;PROBABLY NOT NECESSARY
	MOVEI B,PAGEN
	MOVE A,IDFORK
	SFACS
	MOVEI B,2
IDDT4:	SFRKV			;AT SPLICED ENTRY
	MOVEM A,RFORK		;FORK TO RUN IS IDDT
	MOVEI E,PTTYMD		;RESTORE TTY MODES
	CALL LTTYMD
	TLO Z,RUNF		;TELL ^C ROUTINE WHAT TO DO
	INTON
	JRST WAIT




; NO IDDT   COMMAND
.NOID:	SKIPGE A,IDFORK		;IS THERE AN IDDT?
	RET			;NO
NOID2:	SKIPG B,UFORK
	CALL SCREWUP		;ID WITH NO IFERIOR KNOWN TO EXEC???

NOID3:	INTOFF
	SPLFK			;MAKE B INFERIOR TO A
	 CALL [	PUSH P,A	;SAVE ERROR CODE
		INTON
		POP P,A
		JRST SCREWUP]
	MOVEM A,FORK		;DIRECT EXEC'S ATTENTION TO THAT ONE
	SETOM UFORK		;FORK NOW MEANS UFORK
	MOVEM A,RFORK		;SAY THAT WAS THE LAST RUN (FOR "CONT")
	MOVE A,IDFORK
	KFORK
	SETOM IDFORK		;SAY IT IS GONE
	INTON
	RET

;INTERROGATE (THE ARCHIVE)
REPEAT 0,<
;GET AND CALL SYSTEM STANDARD ROUTINE
.INTER:	NOISE (THE ARCHIVE)
	HRROI 2,[ASCIZ /<ARCHIVE>ARCHIVE-LOOKUP.SAV/]
	CALL TRYGTJ
	 ERROR < NO LOOKUP PROGRAM>
	HRLI 1,400000		;THIS FORK
	GET
	MOVEI 1,400000		;THE EXEC
	MOVE 2,[3,,REE]
	SEVEC			;BECAUSE "GET" CLOBBERED IT
	HRROI 2,[ASCIZ /<ARCHIVE>ARCHIVE-DIRECTORY.;1/]
	CALL TRYGTJ
	 ERROR < NO ARCHIVE DIRECTORY ??>
	MOVE B,[440000,,201000]
	OPENF
 	 ERROR <CAN'T OPEN ARCHIVE DIRECTORY>
	CALL 400010		;ENTRY POINT
	JRST RLJFNS		;FLUSH JFN'S AND RETURN TO CMN INTERP
>;END REPEAT 0

REPEAT 1,<
;NOTE: THE INTERROGATE PROGRAM EATS THE REST OF THE COMMAND LINE.

.INTER:	ALLOW TSPC+TALT
	HRROI 2,[ASCIZ /<ARCHIVE>ARCHIVE-LOOKUP.SAV/]
	CALL TRYGTJ
	 ERROR <NO LOOKUP PROGRAM>
	TLO KWV1,PROGX		;SAY CONFIRMATION TO BE DONE BY LOOKUP
	JRST CIN4		;GO HANDLE AS AN EPHEMERON
>;END REPEAT 1

;JFNCLOSE <JFN>

.JFNCL:	CALL OCTAL
	 JRST CERR
	ALLOW TSPC+TALT+TEOL
	CAIG A,77
	CAIGE A,0
	 JRST CERR
	GTSTS
	TLNN B,B10
	 JRST CERR		;INVALID OR UNASSIGNED JFN
	CONFIRM
	MOVE B,JBUFP
	PUSH B,A		;PUT JFN IN STACK WHERE RLJFNS LOOKS
	MOVEM B,JBUFP
	JRST RLJFNS		;CLOSE IF OPEN, AND RELEASE JFN.

;LIMIT (ADDITIONAL) CORE/CPU/DISK/KILOCORESECS (TO) N

.LIMIT:	NOISE <ADDITIONAL>
	KEYWD $LIMIT
	 T CPU,LPROK		;IS CPU THE RIGHT THING TO DEFAULT TO?
	 JRST CERR
	NOISE <TO>
	CALL DECIN		;READ A NUMBER INTO A
	ALLOW TEOL+TALT+TSPC+TLPR
	JRST (KWV)		;DISPATCH

$LIMIT:	TABLE
	T CORE,LPROK
	T CPU,LPROK
	T DISK,LPROK
	T KILOCORESECS,LPROK
	TEND

.CORE:	NOISE <PAGES>
	CAILE A,1000
	ERROR <MORE THAN 512 PAGES !?>
	CONFIRM
		;NOW WHAT?
	JRST NIYE

.CPU:	NOISE <SECONDS>
	CAILE A,^D720
	ERROR <MORE THAN 12 HOURS ???>
	CONFIRM
	JRST NIYE

.DISK:	NOISE <DISK BLOCKS>
	CAILE A,^D2000		;?
	ERROR <TOO MUCH>;		;ETC
	CONFIRM
	JRST NIYE

.KILOC:	ALLOW TEOL+TALT+TSPC		;NO NOISE WORD
	CAILE A,^D1000		;?
	ERROR <TOO MUCH>
	CONFIRM
	JRST NIM		;SAY "NOT IN MINISYSTEM"

;LINK (TERMINAL/USER)

.LINK:	NOISE (TO)
	CALL TTYNUM		;GET LINE NUMBER, MAYBE FROM USER NAME
	MOVEI B,400000(A)	;FORM TTY DESIGNATOR
	HRLOI A,(1B2!1B3)	;TO AND FROM CONTROLLING TTY
	TLINK
	 ERROR <REFUSED>
	RET


;"LIST" IS WITH "TYPE" BELOW.

;LOGIN COMMAND
;LOGIN (USER) <NAME> (PASSWORD) <NOT ECHOED> (ACCOUNT [#]) <#>

.LOGIN:	SKIPLE CUSRNO
	ERROR <YOU ARE ALREADY LOGGED IN>

;DECODE ARGUMENTS

;TWO GENERAL FORMS ACCEPTED: ARGS ON SAME LINE, TERMINATED WITH
;SPACE OR ALT MODE, AND ARGS ON SEPARATE LINES, TERMINATED WITH EOL.
;SECOND FORM IS INCONSISTENT WITH REST OF EXEC LANGUAGE BUT WAS ADDED
;BECAUSE IT MAKES HDX LOGIN CLEANER: ON HALF DUPLEX TTY, PASSWORD
;IS INPUT ON A SEPARATE LINE WHERE A MASK HAS BEEN TYPED.
;SPECIAL HANDLING OF EOL AS A TERMINATOR IS DONE BY THE "SPECEOL" SUBR
;WHICH IMMEDIATELY FOLLOWS "LOGIN" IN THIS LISTING.
	CALL SPECEOL		;HANDLE TERMINATOR FOR THE WORD "LOGIN"
;FIRST ARGUMENT: USER NAME
	NOISE <USER>;		;SEE COMMENTS ON "SPECEOL" ABOUT "NOISE"
	CALL USERN		;INPUT USER NAME, XLATE TO USER # IN A
	PUSH P,A		;SAVE INFO RETURNED BY "STDIR"
	TLNE A,B0
	ERROR <YOU CANNOT LOG IN UNDER THAT DIRECTORY NAME>
	CALL SPECEOL		;HANDLE TERMINATOR OF "USER" FIELD
;2ND ARGUMENT: PASSWORD
	HRRZ A,(P)		;USER #
	CALL PASWD		;INPUT PASSWORD, RETURN POINTER IN A.
	PUSH P,A		;SAVE PTR FOR USE IN "LOGIN" JSYS CALL

;3RD ARGUMENT: ACCOUNT NUMBER
	MOVE A,-1(P)		;WHAT STDIR RETURNED:B1 SAYS STRING ACCT
	TLNN A,B1
	NOISE <ACCOUNT #>;	IF USER REQUIRES NUMERIC ACCOUNT
	TLNE A,B1
	NOISE <ACCOUNT>;	IF USER REQUIRES STRING
	CALL ACCT		;INPUT AND DECODE ACCT # (USES A)
	PUSH P,A		;SAVE FOR LOGIN JSYS
	CONFIRM		;CONFIRM THE WHOLE COMMAND

;LOGIN...
;ALL ARGS DECODED, NOW LOG THE GUY IN

	SETOM MESMSF		;SAY TYPE "YOU HAVE A MESSAGE" IF APPROPRIATE,
		;EVEN AFTER ^C'S
	POP P,C		;ACCT # OR PTR THERETO
	POP P,B		;PASSWORD PTR
	HRRZ A,(P)		;USER #
	LOGIN
	 CALL [	CAIN A,LGINX1	;CHECK FOR A FEW ERRORS NOT CHECKED B4.
		UERR [ASCIZ /ILLEGAL ACCOUNT/]
		JRST JERR]	;GNRL JSYS ERR RET ROUTINE (XSUBRS.MAC).
	MOVE B,(P)		;WHAT "STDIR" RETURNED
	HRRZM B,CUSRNO		;STORE USER NUMBER
	PUSH P,A		;SAVE DATE & TIME OF LAST LOGIN
;UPDATE SPECIAL CAPABILITIES
	MOVEI A,B0
	RPCAP
	HLLZ C,B
	SKIPE PRVENF
	HRR C,B
	EPCAP

;LOGIN...
;KILL AUTOLOGOUT FORK WHICH WATCHES FOR ABANDONED JOB

	SKIPG ALOFH		;AUTOLOGOUT FORK HANDLE, OR 0 OR -1
	JRST LOGIN6		;NO AUTOLOGOUT FORK - EG STARTUP FAILED
	INTOFF
	MOVE A,ALOFH
	KFORK			;KILL THE FORK
	SETOM ALOFH		;SAY THE ALO FORK HAS BEEN KILLED
	INTON

;TYPE "JOB <N> ON LINE N <DATE> <TIME>"

LOGIN6:	ETYPE < JOB %J ON %L %D %E>
	PRINT EOL

;TYPE SYSTEM LOGIN MESSAGE IF THERE IS ONE

	POP P,A			;DATE & TIME OF LAST LOGIN
	POP P,B			;WHAT STDIR RETURNED
	TLNE B,B2		;B2 SAYS ALWAYS PRINT LOGIN MESSAGE
	SETZ A,			;SET DATE TO 0 TO FORCE PRINTING
	MOVE B,[POINT 7,[ASCIZ /<SYSTEM>MESSAGE.TXT/],-1]
	CALL MESS		;TYPE FILE IF IT IS NEW ENOUGH

;TYPE "YOU HAVE A MESSAGE" IF THE MESSAGE FILE IN THIS DIRECTORY
; HAS NOT BEEN READ SINCE THE LAST TIME IT WAS WRITTEN.

	CALL MESMES

;GET DEFAULT SUBSYSTEM IF THIS USER HAS ONE
		;NOT IMPLEMENTED YET
	JRST CMDIN4		;GO INPUT NEXT COMMAND

;SPECEOL
;SUBROUTINE TO HANDLE EOL AS FIELD TERMINATOR IN THE MIDDLE OF A COMMAND
; IN THE SPECIAL MANNER REQUIRED FOR "LOGIN".
;CR NORMALLY TERMINATES COMMAND, DEFAULTING ANY FOLLOWING FIELDS.
;BUT IF TRM=EOL AND THIS SUBROUTINE IS CALLED AND A "NOISE"
;  MACRO FOLLOWS THE CALL, THE FOLLOWING NOISE WORD IS TYPED
;  (AS AFTER ALT MODE), PARENTHESIZED TEXT IS IGNORED (AS AFTER SPACE),
;  AND FIELD IS INPUT NORMALLY, NOT DEFAULTED.

SPECEOL: ALLOW TSPC+TALT+TEOL+TLPR
	TRNN CBT,TEOL
	RET
	CALL PASCOM		;AFTER SEMICOLON PASS CHARACTERS TO EOL
;RETURN "!" IN AC "TRM". THIS CAUSES "NOISE" TO DO THE REQUIRED
;SPECIAL PROCESSING.
	MOVEI TRM,"!"
	RET

;USERN
;INPUT USER/DIRECTORY NAME SUBR
;USED BY "LOGIN" AND "ATTACH".
;RETURNS STDIR'S RETURNED INFO IN A.

USERN:	TLO Z,PUNCF		;ALLOW PUNCTUATION CHARS
	CALL CSTR		;INPUT A FIELD
	CALL BUFFF		;BUFFER IT RIGHT FOR JSYS, PUT PTR IN A
	MOVE B,A
	SETZ A,			;SAYS NO RECOGNITION
	STDIR			;STRING TO DIRECTORY # TRANSLATION
	 JRST CERR
	 CALL SCREWUP		;R+2 CAN'T OCCUR
	ALTYPE ( )
	RET

;ACCT 
;SUBROUTINE TO INPUT ACCOUNT STRING, CONVERT TO NUMBER IF
; REQUIRED AND RETURN IN A A SUITABLE ARGUMENT FOR LOGIN OR CACCT JSYS
;TAKES IN A: B1 ON FOR STRING ACCT, OFF FOR # (AS RETURNED BY "STDIR")
;USED IN ACCOUNT, CHANGE, LOGIN COMMANDS.

ACCT:	CALL CSTR
	ALLOW TSPC+TALT+TEOL
	TLO Z,NEOLF		;DON'T ECHO EOL'S
	PUSH P,A
ACCT0:	CAIN CNT,1		;JUST THE TERMINATOR INPUT?
	 JRST [	CALL DEFACT	;GET THE DEFAULT ACCOUNT FOR THIS USER
		CAMN 1,[-1]	;IS THERE A DEFAULT?
		 JRST [	CALL DING	;NO
			POP P,A		;GET BACK USER NUMBER
			JRST ACCT]
		TRNE CBT,TALT	;ASKED FOR DEFAULT EXPLICTLY?
		ETYPE <%1M>	;YES, TYPE IT OUT
		SUB P,[1,,1]
		RET]
	TLNE A,B1
	JRST [	CALL BUFFF	;STRING CASE. SAVE IN BUFFER.
		JRST ACCT2]	;CHECK IT
ACCT1:	TLO Z,BAKFF		;NUMERIC CASE. USE FIELD ALREADY INPUT.
	CALL DECIN		;CONVERT
	 JRST CERR		;IT WAS NULL.
	JUMPLE A,.+2
	CAMLE A,[^D999999]
	 JRST CERR		;OUT OF RANGE
	TLO A,500000		;SAY ITS NUMBER NOT STRING

ACCT2:	POP P,B
	SKIPN PRVENF		;SKIP IF ENABLED
	CALL VFYACT		;VERIFY THE ACCOUT(USER)
	RET

;ACCT ...

;GET DEFAULT ACCOUNT OF USER
;	1: USER DESIGNATOR

;RETURNS -1 OR ACCT DESIGNATOR IN AC1

DEFACT:	MOVE 2,1		;SAVE FOR DIRST
	ADD P,[20,,20]		;ROOM FOR AN AC BLOCK
	JUMPGE P,[SUB P,[20,,20]	;UNDO PDL OVF
		PUSH P,[DEFACT+1]	;ERROR PC
		JRST SCREWUP]
	MOVSI 1,-17+0(P)
	HRRI 1,-17+1(P)
	SETZM -1(1)
	BLT 1,0(P)		;CLEAR THE BLOCK

DEFAC0:	HRROI 1,-17+0(P)	;STRING PTR TO AC0
	DIRST
	 CALL SCREWUP		;GOT THE STRING FROM STDIR

DEFAC1:	MOVEI 1,-17+0(P)	;LOCATION OF AC BLOCK
	MOVEI 2,0		;SAY "GET DEFAULT"
	CALL RUNUAC		;RUN THE ACCOUNT PROGRAM
DEFA15:	 JRST [	SUB P,[20,,20]	;DID NOT RUN SUCCESSFULLY
		SETOM 1		;SAY DING NEEDED TO CALLER
		RET]

DEFAC2:	SKIPE -17+1(P)		;SKIP IF RESULT RETURNED
	 JRST DEFA15
	MOVE 1,-17+2(P)		;RESULT IF NUMERIC ACCT
	MOVE 2,1		;STRING PTR FOR BUFFS
	ADDI 2,-17(P)		;ORIGIN OF AC BLOCK
	MOVEI CNT,^D39		;FOR BUFFS
	LDB 3,[POINT 3,2,2]
DEFAC3:	CAIE 3,5		;RETURN DIRECTLY IF NUMERIC ACCT
	CALL BUFFS		;MOVE ASCIZIFIED STRING TO BUFFER
	SUB P,[20,,20]
	RET

;ACCT ...

;VERIFY ACCOUNT OF USER
;	1: ACCOUNT DESIGNATOR
;	2: USER NUMBER (BIT-1 ON FOR STRING ACCT)

VFYACT:	PUSH P,1
	PUSH P,2
	ADD P,[20,,20]		;SPACE FOR AC BLOCK OF INFERIOR FORK
	JUMPGE P,[SUB P,[20,,20]	;UNDO PDL OVF
		PUSH P,[VFYACT+1]	;ERROR PC
		JRST SCREWUP]
	MOVSI 1,-17+0(P)
	HRRI 1,-17+1(P)
	SETZM -1(1)
	BLT 1,0(P)		;CLEAR THE AC BLOCK

VFYAC1:	HRROI 1,-17+0(P)	;STRING PTR TO AC0
	DIRST
	 CALL SCREWUP		;GOT THE STRING FROM A STDIR

VFYAC2:	MOVE 3,-17-2(P)		;ACCOUNT DESIGNATOR
	MOVEM 3,-17+10(P)	;TO AC10
	MOVE 4,-17-1(P)		;USER DESIGNATOR
	TLNN 4,(1B1)
	 JRST VFYAC4		;NUMERIC CASE

VFYAC3:	MOVE 1,[POINT 7,-17+10(P)]
	ILDB 2,3		;COPY THE STRING TO AC BLOCK
	IDPB 2,1
	JUMPN 2,.-2

VFYAC4:	MOVEI 1,-17(P)		;LOCATION OF AC BLOCK
	MOVEI 2,2		;SAY "VERIFY NUMERIC"
	TLNN 4,(1B1)		;IS THAT RIGHT?
	MOVEI 2,1		;NO, SAY "VERIFY STRING"
	CALL RUNUAC		;RUN THE ACCOUNT VERIFY PROGRAM
	 JRST [	SUB P,[20,,20]	;DID NOT RUN SUCCESSFULLY
		POP P,2
		POP P,1		;RETURN THE ACCOUNT DESIGNATOR
		RET]

VFYNA6:	SKIPE -17+1(P)		;GET THE AC1 RETURNED
	 ERROR <ACCOUNT INVALID> ;OR "TYPE <....>"
	SUB P,[20,,20]
	POP P,2
	POP P,1
	RET

;ACCT ...

;RUN USER-ACCOUNT PROGRAM (IF IT EXISTS)

;	1: POINTER TO AC BLOCK (ARGUMENTS)
;	2: ENTRY VECTOR FOR STARTUP:
;		0 TO GET DEFAULT, 1 VERIFY NUMERIC ACCT, 2 VERIFY STRING
;
;SKIPS IF IT RAN OK, RETURN DEFAULT (NUMERIC DESG. OR STR PTR) IN 1

RUNUAC:	SKIPL EFORK		;BE SURE EPHEMERAL FORK IS FREE
	 CALL SCREWUP
	PUSH P,1
	PUSH P,2
	HRROI 2,[ASCIZ /<SYSTEM>UACHK.SAV/]
	CALL TRYGTJ
	 JRST [	POP P,2
		POP P,1
		RET]
	PUSH P,A

RUNUA1:	INTOFF
	MOVSI 1,(1B1)
	CFORK
	 JRST [	INTON
		MOVEI 1,^D1000
		DISMS
		JRST RUNUA1]	;WAIT FOR IT
	MOVEM 1,EFORK
	INTON			;^C WILL KILL IT NOW

RUNUA2:	POP P,A			;FILE JFN
	HRL 1,EFORK
	GET
	MOVE 1,EFORK
	MOVE 2,-1(P)		;AC BLOCK
	SFACS			;PASS ARGS
	MOVE 2,0(P)
	SFRKV			;START AT APPROPRIATE PLACE
	WFORK

RUNUA3:	INTOFF
	MOVE 1,EFORK
	FFORK
	MOVE 2,-1(P)
	RFACS
	RFSTS
	TLZ 1,(1B0)		;IGNORE FROZEN BIT
	CAME 1,[2,,0]
	 JRST [	PUSH P,1
		INTON
		PRINT EOL
		TYPE < DURING USER-ACCOUNT CHECK:>
		POP P,1
		JRST INVOLT]	;AFTER "WAIT" IN X1CMD
	MOVE 1,EFORK
	KFORK
	SETOM EFORK

RUNUA4:	INTON
	POP P,2
	POP P,1
	SKIPLE 3,1(A)		;CHECK RETURNED AC1
	 JRST [	ETYPE < USER-ACCOUNT CHECK ERROR %3Q>
		PRINT EOL
		RET]		;NON SKIP RETURN
	AOS 0(P)
	RET

;PASWD
;SUBROUTINE TO INPUT PASSWORD FOR "LOGIN", "ATTACH", AND "CONNECT".
;HANDLES HALF AND FULL DUPLEX CASES. 
;BUFFERS IT FOR USE AS A JSYS ARGUMENT AND RETURNS BYTE PTR IN A.
;CALLS "SPECEOL" AFTER IT.
;IF A><0, CHECKS VALIDITY FOR DIRECTORY # IN A IF NOT LOGGED IN.

PASWD:	PUSH P,B
	PUSH P,A
	MOVE A,CIJFN
	RFMOD			;READ TTY MODE
	TRNE B,1B32		;SKIP IF FULL DUPLEX
	JRST PASWD1


;FULL DUPLEX CASE
;DON'T ECHO PASSWORD FIELD, DO ECHO TERMINATOR
;PASSWORD IS ACTUALLY INPUT IN CALL TO "NOISE" IF THERE IS NO
;NOISE WORD, OTHERWISE IN "CSTR".
	CALL NOECHO		;TURN OFF ECHOING OF INPUT CHARACTERS
	NOISE <PASSWORD>	;THIS CAN TURN ECHOING ON AGAIN
	CALL NOECHO		;MAKE SURE ITS OFF
	TLO Z,PUNCF		;ALLOW "PUNCTUATION" CHARACTERS IN PASSWORD
	TLZ Z,EOLNEF		;TELL CSTR THAT NOISE DIDN'T ECHO EOL
	CALL CSTR		;(RE)READ PASSWORD STRING
	PRINT (TRM)		;ECHO TERMINATOR
	POP P,A			;0 OR GIVEN DIRECTORY #
	CALL PSWDCK		;BUFFER PASSWORD AND CHECK IT

;A MUST BE PRESERVED FROM HERE TO RETURN

	CALL DOECHO		;NOW WE WANT ECHOING ON
	CALL SPECEOL		;CHECK TERMINATOR, ETC
	ALTYPE ( )
	JRST PASWD3		;JOIN OTHER CASE

;PASWD...
;HALF DUPLEX CASE
;USE SEPARATE LINE, TYPE MASK FIRST
;AS WITH FDX, PASSWORD IS READ BY "NOISE" IF NO (NOISE)

PASWD1:	TRNE CBT,TLPR
	JRST CERR		;DISALLOW ( AS USER NAME TERMINATOR
	TRNN CBT,TEOL		;TYPE EOL UNLESS USER ENDED USER NAME WITH EOL
	$TYPE <
>;
	MOVEI TRM,"!"		;MAKES "NOISE" TYPE " (PASSWORD) "
	U$TYPE [ASCII / (PASSWORD)  
/			;EXACTLY 3 WORDS (15 CHARS)
		BYTE (7)130,130,130,130,130,130,130,130,130,15
		BYTE (7)127,127,127,127,127,127,127,127,127,15
		BYTE (7)115,115,115,115,115,115,115,115,115,15
		BYTE (7)041,042,043,044,045,046,043,045,044,15,15,0]
		;PASWORD MASK, OVERLAYED X, W, M, AND GARBAGE
	TLO Z,PUNCF
	CALL CSTR		;INPUT PASSWORD
	TRNE CBT,TLPR
	JRST CERR		;DISALLOW ( HERE
	PRINT CR		;SET TO OVERPRINT SAME LINE
	TYPE <THANK YOU ... >
	PRINT EOL
	PRINT EOL
	POP P,A
	CALL PSWDCK		;BUFFER AND MAYBE CHECK PASSWORD
	CALL SPECEOL
	MOVEI TRM,"!"		;FORCES "NOISE" TO TYPE NEXT NOISE WD
PASWD3:	POP P,B
	RET

;PSWDCK
;PASSWORD BUFFERER AND CHECKER USED AT TWO PLACES IN "PASWD".
;TAKES: A: 0 OR DIRECTORY #.
;RETS:  B: BYTE PTR TO PASSWORD TEXT.
;PASSWORD MUST BE LAST FIELD CSTR'D.

PSWDCK:	PUSH P,A
	PUSH P,B
	CALL BUFFF
	MOVE BFP,.BFP		;FLUSH THE PASSWORD FIELD (^R FIX)
	MOVEI CNT,0		;SAY CURRENT FIELD HAS NO CHR'S
	MOVE B,A
	EXCH A,-1(P)		;SAVE POINTER TO RETURN, GET DIRECTORY #
	JUMPE A,.+2		;NO DIR # GIVEN, NO CHECK.
	SKIPLE CUSRNO		;IF LOGGED IN, NO CHECK.
	JRST [	POP P,B
		POP P,A
		RET]
	TLO A,B0		;SAY PASSWORD CHECK ONLY, NOT CONNECT.
	CNDIR		;CHECK. ILLEGAL IF LOGGED IN.
	 JRST [	CAIN A,CNDIX1
		JRST CERR	;BAD PASSWORD. "?" AND ABORT COMMAND.
		CALL JERR]		;OTHER ERROR.
	JRST [	POP P,B		;RETURN. LITERAL SAVES LOCATIONS.
		POP P,A
		RET]

;MESMES
;SUBROUTINE TO TYPE "YOU HAVE A MESSAGE" IF FLAG "MESMSF" IS ON AND
;THERE IS A MESSAGE FILE IN CONNECTED DIRECTORY.
;ALSO PRINTS SCHEDULED SHUTDOWN TIME, AND RESTART TIME, IF ANY.
;AND DISC ALLOCATION EXCEEDED MESSAGE.
;USED IN LOGIN, MAIN LOOP. CLOBBERS A,B,C.

MESMES:	SKIPG CUSRNO
	JRST MESMS9		;IGNORE IF NOT LOGGED IN
	CALL DWNTIM		;PRINT SHUTDOWN/RESTART TIMES
	CALL CHKDAL		;NOTE OVER ALLOCATION IN PRESENT FIRST
	MOVE B,[POINT 7,[ASCIZ /MESSAGE.TXT;1/],-1]
	CALL TRYGTJ		;TRY TO ASSIGN JFN TO FILE
	JRST MESMS9		;NO SUCH FILE
	MOVE B,[2,,FDBWRT]	;WRITE AND READ DATES
	MOVEI C,B		;TO B AND C
	GTFDB
	CAMG B,C		;WRITTEN MORE RECENTLY THAN READ?
	 JRST [	MOVEI C,0	;NO, FORCE NO TYPEOUT
		JRST MESMS4]
	MOVE B,[1,,FDBSIZ]
	MOVEI C,C
	GTFDB		;GET # BYTES IN FILE
MESMS4:	RLJFN		;GET RID OF JFN
	 CALL JERR
	JUMPLE C,MESMS9		;THERE'S NO MESSAGE IF FILE IS NULL
	TYPE < YOU HAVE A MESSAGE
>;		;USER TYPES FILE TO RECEIVE MESSAGE
	MOVE A,COJFN
	DOBE		;WAIT FOR IT TO REALLY PRINT
MESMS9:	SETZM MESMSF		;CLEAR FLAG SO IT WONT BE REPEATED
	RET


;PRINT THE SCHEDULED SHUTDOWN TIME
;AND EXPECTED RESTART TIME.
;FOR LOGIN AND SYSTAT

DWNTIM:	MOVE 1,['SYSTAT']
	SYSGT
	JUMPE 2,[RET]	;TABLE DOES NOT EXIST?
	PUSH P,2		;TABLE NUMBER
	MOVSI 1,27		;SHUTDOWN TIME CELL
	HRR 1,2			;TABLE NUMBER
	GETAB
	 CALL JERR
	JUMPE 1,[SUB P,[1,,1]
		RET]
	PUSH P,1
	TYPE < TENEX WILL GO DOWN >
	MOVE 1,COJFN
	POP P,2
	MOVSI 3,(1B1+1B3+1B6+1B10+1B12+1B17)
	ODTIM
	POP P,1			;SYSTAT TABLE NUMBER
	HRLI 1,30		;RESTART TIME
	GETAB
	 CALL JERR
	JUMPE 1,DWNTI9		;NO UPTIME DECLARED
	PUSH P,1
	TYPE < TIL >
	MOVE 1,COJFN
	POP P,2
	MOVSI 3,(1B1+1B3+1B6+1B10+1B12+1B17)
	ODTIM
DWNTI9:	PRINT EOL
	RET


;TRYGTJ
;TAKES: B: POINTER TO STRING FOR GTJFN
;RETS:	+1: NO SUCH FILE
;	+2: JFN IN A
;USED IN "MESS", AND IN "LOGIN" WITH REGARD TO PRIVATE MESSAGES.

TRYGTJ:	PUSH P,B
	PUSH P,A
	MOVSI 1,(1B2!1B17)	;SAY OLD FILE ONLY, SHORT GTJFN CALL
	GTJFN			;ASSIGN JFN USING STRING POINTER IN B
	 CALL [	CAIE A,GJFX24	;FAILURE. LOOK AT CODE. "NO NEW FILES"
		CAIN A,GJFX18		;"NO SUCH NAME"
		JRST [	SUB P,[1,,1]
			POP P,A
			JRST TRYG9]
		CAIE A,GJFX19		;"NO SUCH EXTENSION"
		CAIN A,GJFX20		;"NO SUCH VERSION"
		JRST [	SUB P,[1,,1]
			POP P,A
			JRST TRYG9]
		JRST JERR]
	MOVE B,JBUFP		;SAVE JFN IN JFN STACK, SO IT WILL BE
	PUSH B,A		;RELEASED ON ^C OR ERROR
	MOVEM B,JBUFP		;..
	SUB P,[1,,1]		;FORGET SAVED A
	AOS -1(P)		;SKIP
TRYG9:	POP P,B
	RET

;MESS
;SUBROUTINE TO PRINT MESSAGE FROM A GIVEN FILE, IF FILE EXISTS.
;SLOW NOP IF FILE DOES NOT EXIST.
;TAKES: A: A DATE & TIME. FILE PRINTED IF NEWER THAN THIS.
;		TYPICALLY, THIS IS THE LAST LOGIN TIME.
;	B: STRING POINTER TO FILE NAME. CLOBBERS B.
;7/3/70: ONLY ONE CALL, IN "LOGIN"

MESS:	PUSH P,C
	PUSH P,A		;SAVE CONVERTED GIVEN DATE & TIME
	CALL TRYGTJ		;ASSIGN A JFN TO FILE NAMED BY STRING
	JRST MESS9		;NO SUCH FILE
	PUSH P,A		;MESSAGE FILE JFN
	MOVE B,[1,,FDBWRT]
	MOVEI C,C
	GTFDB			;GET WRITE DATE & TIME FROM FILE
	CAMGE C,-1(P)		;COMPARE TO GIVEN
	 JRST MESS8		;NO NEED TO PRINT IT

MESS2:	MOVE A,-1(P)
	PUSH P,A		;A COPY OF DATE
	PUSH P,COJFN		;JFN FOR OUTPUT
	MOVEI 1,400000		;THIS FORK
	RPCAP
	MOVEI 1,CTRLC		;^C TERMINAL CODE
	TLNE 3,(1B0)		;IF ^C CAP ENABLED
	DTI			;TURN OFF ^C
	MOVEI A,0		;NO SPECIAL CAPS.
	CFORK
	 CALL [	INTON
		JRST JERR]
	PUSH P,1		;FORK HANDLE
	MOVSI 1,(1B2+1B17)	;OLD, SHORT
	HRROI 2,[ASCIZ /<SUBSYS>READMAIL.SAV/]
	GTJFN
	 JRST MESS4		;READMAIL NOT AVAILABLE
MESS3:	HRL 1,0(P)		;MAKE FORK.JFN
	GET			;AND RELEASE READMAIL JFN
	MOVE 1,0(P)		;FORK HANDLE
	MOVEI 2,-4(P)		;WHERE GOODIES ARE
	SFACS			;FROM ON THE STACK
	GEVEC
	MOVEI 2,1(2)		;REENTER ADDR, EVEN IF OLD EV
	SFORK
	WFORK

MESS4:	POP P,1			;FORK HANDLE
	KFORK
MESS7:	MOVEI 1,400000
	RPCAP
	MOVE 1,[CTRLC,,1]	;^C ON CHANNEL 1
	TLNE 3,(1B0)		;IF THIS FORK HAS ^C CAP ENABLED
	ATI			;ALLOW ^C AGAIN
	POP P,1			;JUNK (COJFN)
	POP P,1			;JUNK (COPY OF DATE)
MESS8:	POP P,1			;MESSAGE FILE JFN
	RLJFN
	 CALL JERR
MESS9:	POP P,A			;FROM CALLER
	POP P,C			; "
	RET

;LOGOUT

.LOGOU:	TRNN CBT,TEOL		;STANDARD CASE IF EOL TERMINATED
	SKIPG CUSRNO		;LOGGED IN?
	JRST LOGOU1		;NO, ONLY ONE CASE
	INHELP <
EOL OR JOB NUMBER>
	ALLOW TEOL+TSPC+TALT
	TLO Z,BAKFF
	CALL DECIN		;TRY TO READ JOB NUMBER
	 JRST LOGOU1		;NO NUMBER, LOGOUT THIS JOB
	JRST ..LOGO		;LOGOUT ANOTHER JOB

LOGOU1:	CALL INFER		;SKIP IF INFERIOR
	JRST .+2
	ERROR <NOT LEGAL IN INFERIOR EXEC>
	CONFIRM
	MOVEI 1,HUCODE		;"HANG UP" INTERRUPT CODE
	DTI			;^C AND ERRORS ATI AT CMDN2D
	SKIPG CUSRNO		;NOW LOGGED IN?
	JRST LOGOU3		;NO, NO EXPUNGE OR CHKDAL
LOGOU2:	GJINF
	MOVE 1,2		;CONNECTED DIRECTORY
	DELDF			;"EXPUNGE"
	CALL CHKDAL		;YES, NOTE OVER ALLOC IF PRESENT
LOGOU3:	TLO Z,LOGOFF		;SAY LOGGING OUT (TELLS ERROR AND ^C
				;ROUTINES TO SAY "NOT LOGGED OUT").
	MOVE A,COJFN
	DOBE			;WAIT TO GIVE HIM MAXIMUM CHANCE TO ^C.

	CALL RESET
	HRLOI 1,(1B0+1B1)
	MOVEI 2,-1
	TLINK			;BREAK ALL TTY LINKS
	JFCL
	SETO A,			;SAY ITS SUICIDE
	LGOUT
	 CALL JERR
	;BETTER NOT RETURN IF SUCCESSFUL

;"MERGE" IS WITH "GET" ABOVE.

;MOUNT <DEVICE>

.MOUNT:	CALL DEVN
	TLNN B,B7
	ERROR <%1H: NOT A MOUNTABLE DEVICE>
	TLNN B,B5
	JRST [	TLNN B,B6
		UERR [ASCIZ /%1H: NOT AVAILABLE/]
		UERR [ASCIZ /%1H: ASSIGNED TO JOB %3Q/]]
	CONFIRM
	MOUNT		;NO ERROR IF ALREADY MOUNTED.
	 CALL JERR
	RET

;"NO" PREFIX

;THE "NO" PREFIXED VERSIONS GO THRU THE SAME ROUTINES AS THE UNPREFIXED
;VERSIONS, BUT WITH F1 SET WHICH REVERSES THE EFFECT OF THE SUBROUTINES
;THEY CALL.  F1 IS CLEAR ON DISPATCH FROM THE MAIN LOOP.

.NO:	KEYWD $NO		;"NO". LOOK UP NEXT WORD.
	 0			;NO DEFAULT
	JRST CERR		;NULL ILLEGAL
	CONFIRM
	TLO Z,F1		;SAY NO
	JRST (KWV)		;GO TO .FORMF, .TABS, OR .LOWER.

$NO:	TABLE
	TE FORMFEED
	TE IDDT
	TE INDICATE
	TE LOWERCASE
	TE RAISE
	TE TABS
	TEND

;"NOT" COMMAND PREFIX

.NOT:	KEYWD $NOT
	 0			;NO DEFAULT
	 JRST CERR		;NULL NOT ACCEPTABLE
	 JRST (KWV)		;OFF TO ROUTINE

$NOT:	TABLE
	T EPHEMERAL,LANOK+LPROK,.NOTEP
	TEND

;QUIT: EXIT TO SUPERIOR EXEC OR OTHER PROGRAM.
;IF TOP-LEVEL FORK, LEGAL ONLY FOR ENABLED WHEELS OR OPERS.

.QUIT:	CALL INFER		;SKIP IF INFERIOR
	 JRST [	HRLZI B,WHLUO+OPRUO
		SKIPE PRVENF
		CALL PRVCK
		UERR [ASCIZ /NOT LEGAL IN TOP-LEVEL EXEC/]
		JRST QUIT1]		;DON'T DISABLE ^C AT TOP LEVEL
;DEASSIGN SUPER-PANIC PSI CHARACTER ^C
		;IF POSSIBLE, TEST WHETHER ASSIGNED TO THIS FORK _______
		;MEANWHILE, JUST TEST SPEC CAP
	MOVEI A,B0
	RPCAP			;GETS ENABLED CAPS IN C
	MOVEI A,CTRLC
	TLNE C,B0
	DTI			;DEASSIGN TERMINAL INTERRUPT
QUIT1:	MOVEI A,CTCODE		;CHAR THAT PRINTS RUNTIME (^T)
	DTI
	MOVEI A,HUCODE		;DATAPHONE HANGUP CODE
	DTI
	MOVEI E,PTTYMD		;PASS BACK TTY LEFT BY PROGRAM
	CALL LTTYMD

QUIT2:	CALL INFER		;SKIP IF INFERIOR EXEC
	 JRST [	JSYS 777	;CALL MINI-EXEC
		JRST REE]	;AFTER  ^  TO MINI-EXEC
	MOVE 1,SUPSUB
	SETNM			;BUT RESTORE SUPERIOR'S SUBSYS
	HALTF
	JRST REE		;AFTER CONTINUE FROM SUPERIOR EXEC

;INFERIORNESS TEST SUBROUTINE: SKIP IF THIS FORK HAS A SUPERIOR
;USED IN LOGOUT, QUIT, ^E EDDT.

INFER:	PUSH P,A
	PUSH P,B
INFER0:	MOVEI A,INFER3		;SET TO CATCH TRAPS FROM GFRKH
	MOVEM A,ILIDSP		;ON MONITORS WITHOUT IT (BEFORE 1.31)
INFER1:	MOVEI 2,400000		;SELF
	MOVNI 1,1		;RELATIVE TO SUPERIOR
	GFRKH			;GET FORK HANDLE
	 JRST INFER3		;NO MORE HANDLES, OLD MONITOR, ETC
	SETZM ILIDSP		;NOT INTERESTED IN ILLEGAL INSTRS NOW
	CAIN 1,400000		;SELF MEANS WE ARE TOP FORK
	 JRST INFER6		;SO GIVE SKIP RETURN
	RFRKH
	JRST INFER9		;GIVE SKIP

INFER3:	SETZM ILIDSP		;NO LONGER INTERESTED IN ILLEGAL INSTRS.
	MOVEI A,-1		;SUPERIOR FORK HANDLE
INFRS:	RFSTS
	CAMN A,[-1]
INFER6:	 JRST [	POP P,B		;SUPERIOR HANDLE INVALID
		POP P,A		;MEANS NO SUPERIOR.
		RET]
;BUT RFSTS MAY RETURN THIS FORK'S STATUS IF NO SUPERIOR.
;ASSUME IT IS SELF (AND NO SUPERIOR) IF PC RETURNED
; IS THAT WHERE RFSTS IS.
	MOVEI B,(B)		;MASK PC
	CAIE B,INFRS+1
INFER9:	AOS -2(P)		;DIFFERENT, WE HAVE A SUPERIOR
	 JRST [	POP P,B
		POP P,A
		RET]

;PROTECTION (OF FILE) <EXISTING NAME> (IS) <18 BIT OCTAL>

.PROTE:	NOISE <OF FILE>
	HRROI A,
	CALL CINFN
	 JRST CERR
	ALLOW TSPC+TALT+TLPR
	NOISE <IS>
	CALL OCTCOM		;OCTAL INPUT TO A. ALLOWS LH,,RH ETC.
	 JRST CERR		;NULL - NO DEFAULT.
	TLNE A,-1
	ERROR <LEFT HALF MUST BE 0>	;ONLY NUMERIC PROTECTIONS NOW
					;OCTCOM CHECKS TERMINATOR.
	TRNN A,1B22
	ERROR < YOU CAN'T MAKE PROTECTION INVISIBLE (20000-BIT)>
	CONFIRM
	TLO A,500000		;SAY THERE'S 18-BIT PROTECTION IN RH
	PUSH P,A
	MOVE A,CJFN1
	DVCHR
	TLNN B,B4		;MULTIPLE DIRECTORY DEVICE?
	ERROR <%1H: DOESN'T HAVE PROTECTED FILES>
	MOVE A,CJFN1
	POP P,C
	HRLI A,FDBPRT		;PROTECTION WORD IN FDB
	MOVEI B,-1		;CHANGE RH
	CHFDB			;THIS COULD ITRAP, SHOULD BE PROTECTED
	JRST RLJFNS

;THE FOLLOWING SHOULD REPLACE THE ABOVE IF CPRTF IS EVER IMPLEMENTED

REPEAT 0,<
	CPRTF		;CHANGE PROTECTION OF FILE
	 CALL [	CAIN A,CPRTX1
		ERROR <PROTECTION OF %1S IS PROTECTED FROM YOU>
		JRST JERR]
	JRST RLJFNS		;RELEASE JFNS AND POPJ TO CMDIN4.
>

;RECEIVE

.RECEI:	KEYWD $RECTB
	 T LINKS,EOLOK,..LINK
	 JRST CERR
	 JRST (KWV)

$RECTB:	TABLE
	T ADVICE,EOLOK+LPROK,..ADVZ
	T LINKS,EOLOK,..LINK
	TEND

..ADVZ:	NOISE <FROM>
	CALL TTYNUM
	MOVEI 1,400000(1)	;FORM TTY DESIGNATOR
	TLO 1,(1B2)		;SET "ACCEPT" ADVICE FLAG
	ADVIZ
	 CALL [	CAIN 1,ADVX2
		 ERROR <IGNORED>
		CAIN 1,ADVX4
		 ERROR <ADVICE ALREADY IN PROGRESS>
		JRST JERR]
	RET


..LINK:	CONFIRM
	INTOFF			;BE SURE BOTH ADVISE AND TLINK HAPPEN
	HRLOI 1,(1B4+1B5)
	TLINK
	 CALL [	INTON
		JRST JERR]
	MOVSI 1,(1B0)		;BREAK "ADVISE" LINK
	ADVIZ
	 CALL [	INTON
		JRST JERR]
	INTON
	RET

;REENTER
;DECODE AND CHECK SUBROUTINE ALSO USED BY REDIRECT/DETACH

$REENT:	SKIPGE A,FORK
	ERROR <NO PROGRAM>
	GEVEC
	HLRZ B,B
	CAIE B,<JRST>B53
	 JRST [	CAIGE B,2		;LONG ENOUGH TO HAVE REENTER?
		UERR [ASCIZ /NO REENTER ADDRESS/]
		RET]
	MOVEI A,.JBREN		;COMPATIBLE CASE CHECK
	CALL MAPPF
	TLNN A,B5
	ERROR <NO PAGE 0>
	TLNN A,B2
	ERROR <PAGE 0 READ-PROTECTED>
	MOVEI A,.JBREN
	HRRZ A,PAGEN(A)
	JUMPE A,[UERR [ASCIZ /NO REENTER ADDRESS/]]
	RET

;REENTER COMMAND DISPATCHES HERE

.REENT:	CALL $REENT
	CONFIRM
;REDIRET/DETACH...(AND) REENTER  JOINS HERE

..REEN:	MOVNI B,2		;REENTER CODE FOR PA1050
	CALL CHKPAT		;SETUP PA1050 IF THERE
	MOVEI E,PTTYMD		;SET TTY MODES TO PROGRAM'S
	CALL LTTYMD		;.. (EXEC'S MODES NEEDN'T BE STORED)
	JUMPG B,.+2		;PA1050 START IF POSITIVE
	MOVEI B,1		;ENTRY VECTOR INDEX 1 FOR REENTER
	JRST START2		;JOIN START COMMAND

;REFUSE (LINKS)
; REFUSES BOTH ORDINARY LINKS AND ADVISE LINKS


.REFUS:	NOISE <LINKS>
	CONFIRM
	INTOFF			;BE SURE BOTH HAPPEN
	HRLOI A,(1B4)		;CHANGE ACCEPT BIT TO 0
	TLINK
	 CALL [	INTON
		JRST JERR]
	MOVSI 1,(1B0)		;"BREAK"
	ADVIZ
	 CALL [	INTON
		JRST JERR]
	INTON
	RET

;RENAME (EXISTING FILE) <NAME> (TO BE) <NAME>

.RENAM:	NOISE <EXISTING FILE>
	HRROI A,		;SAY NO DEFAULT EXTENSION
	CALL CINFN		;GET INPUT FILE NAME
	 JRST CERR		;NO DEFAULT IF USER TYPES "-"
	ALLOW TSPC+TALT+TLPR
	NOISE <TO BE>
	MOVE A,[2,,2]	;SAY DEFAULT NAME AND EXT TO THOSE OF FIRST FILE
	CALL COUTFN		;OUTPUT FILE NAME, OLD OR NEW.
	 JRST CERR
	CONFIRM
	MOVE A,CJFN1		;EXISTING FILE JFN
	MOVE B,CJFN2		;NEW FILE JFN
	RNAMF		;RENAME FILE
	 CALL [	CAIN A,RNAMX1
		 ERROR <FILES NOT ON SAME DEVICE>
		CAIN A,RNAMX4
		 ERROR <NO ROOM>
		CAIN A,RNAMX5
		 ERROR <DESTINATION BUSY>
		CAIN A,RNAMX8
		 ERROR <NO ACCESS TO SOURCE>
		CAIN A,RNMX10
		 ERROR <SOURCE IS IN USE>
		CAIN A,RNMX12
		 ERROR <RENAME TO SELF IS ILLEGAL>
		JRST JERR]
	JRST RLJFNS		;RELEASE THE JFNS

;RESET

.RESET:

;GET AND EDIT USE THE FOLLOWING AS A SUBROUTINE

RESET:	INTOFF
;KILL ALL INFERIOR FORKS
RESET2:	SETOM A
	CALL MAPPF		;UNMAP ANY PAGE
	SKIPL A,EFORK		;IF EPHERMERAL FORK STILL AROUND,
	KFORK			;KILL IT
	SETOM EFORK		;AND SAY SO
	SKIPGE A,IDFORK		;WILL KILL FORK INDIRECTLY
	SKIPL A,FORK
	KFORK
	SETOM FORK
	SETOM UFORK
	SETOM IDFORK
	SETOM RFORK		;SAY THERE'S NO INFERIOR THAT'S BEEN RUN
	SETZM PROPSF		;SAY THERE'S NO PROPRIETARY SUBSYSTEM
	SETZM DDTFLG		;SAY THERE'S NO DDT IN FORK

RESET3:	SKIPG CREDIF		;ABANDONED PRIMARY INPUT FILE?
	 JRST RESE31		;NO
	HRRZ 1,CRJFNI
	CLOSF
	 CALL SCREWUP
	SETZM CREDIF		;NO INPUT NO LONGER REDIRECTED

RESE31:	SKIPG CREDOF
	 JRST RESET4
	HRRZ 1,CRJFNO
	CLOSF
	 CALL SCREWUP
	SETZM CREDOF

;CLOSE ALL FILES OF INTERIOR FORKS
;AFTER KILLING FORKS, TO GET SHARED FILE JFN'S!
RESET4:	HRLI A,B1		;DON'T CLOSE THIS FORK'S FILES
	HRRI A,B0		;SELF
	CLZFF
	INTON
	RET

;"RUN" IS WITH "GET" ABOVE

;SAVE (CORE FROM) N (TO) N, (FROM) N (TO) N ... (ON) F

.SAVE:	SKIPGE FORK
	ERROR <NO PROGRAM>
	NOISE <CORE FROM>
	MOVEI B,1(P)		;WHERE "SAVE" ARGUMENT TABLE WILL BEGIN
SAVE1:  CALL OCTAL        ;INPUT OCTAL NUMBER AND SKIP
        JRST       [ALLOW TALT		;NO SKIP, NULL INPUT.
		MOVEI A,20		;ON ALT MODE GNLY, ASSUME 20.
                U$TYPE [ASCIZ /20 /]
                JRST .+1]
	ALLOW TSPC+TALT+TLPR
	PUSH P,A		;BUILD TABLE OF "SAVE" ARGUMENTS IN PUSHDOWN
        NOISE <TO>
        CALL OCTAL
        JRST       [ALLOW TALT
                MOVEI A,-1
                U$TYPE [ASCIZ /777777 /]
                JRST .+1]
	SUB A,(P)
	JUMPL A,CERR		;MAX < MIN
	ADDI A,1
	TLNE A,1
	JRST [	MOVEI A,1B18		;FOR 0 TO 777777 LENGTH IS 1000000,
		HRLM A,(P)		;...WHICH IS MORE THAN 18 BITS,
		PUSH P,[B0,,B0]	;...SO USE TWO BLOCKS OF HALF SIZE.
		JRST .+2]
	HRLM A,(P)		;FORM LENGTH,,LOCATION
        CAIN TRM,","    ;COMMA AFTER SECOND ONE?
        JRST       [CALL SAVNOI		;SPECIAL HANDLING OF NOISE "FROM"
                JRST SAVE1]        ;GET ANOTHER PAIR
	ALLOW TSPC+TALT+TLPR+TLAN
        NOISE <ON>
	TLZ Z,EOLNEF			;EOL JUST TRIGGERED [NEW FILE]
	HRROI A,[ASCIZ /SAV/]		;DEFAULT .SAV, NO NULL CASE.
        CALL COUTFN       ;COLLECT OUTPUT FILE NAME
	 JRST CERR
        CONFIRM
        ;TRANSFER DATA
	PUSH P,[0]		;TERMINATE TABLE
	HRL A,FORK
	HRR A,CJFN1
		;B ALREADY CONTAINS POINTER TO TABLE
	SAVE		;SAVE. IGNORES NON-EXISTENT OR 0 CORE.
	CALL RLJFNS		;RELEASE JFN.
	JRST CMDIN4		;CAN'T POPJ WITHOUT FLUSHING TABLE

;SAVNOI
;SUBROUTINE FOR SPECIAL HANDLING OF NOISE WORD "(FROM)" AFTER COMMA
; IN SAVE AND SSAVE COMMANDS:
;IF NEXT INPUT IS ALT MODE, TYPE OUT THE NOISE WORD.
;THIS IS BECAUSE PREVIOUS FIELD CAN'T END WITH ALT MODE - 
; ALT MODE MEANS SOMETHING DIFFERENT IN THIS CONTEXT.

SAVNOI:	PRINT " "		;SOME INDICATION THAT COMMA WAS ACCEPTED
	CALL CSTR		;PRE-READ NEXT FIELD
	TLO Z,BAKFF		;SAY RE-USE IT
	TRNN CBT,TALT		;DID IT END IN ALT MODE?
	JRST SAVNO1		;NO, MIGHT BE "(", IN WHICH CASE "NOISE" MACRO
		;WILL ALLOW USER TO TYPE IN NOISE WORD.
	CAILE CNT,1		;WAS IT NULL?
	RET		;NO, ITS NEXT ARG, NO "NOISE" MACRO NEEDED.
	TLZ Z,BAKFF		;ALT MODE ONLY, DON'T RE-USE, "NOISE" MACRO
		;WILL TYPE OUT NOISE.
SAVNO1:	NOISE (FROM)
	RET

;SHUT (ALL OPEN FILES)

.SHUT:	NOISE <ALL OPEN FILES>
	CONFIRM
;CLOSE ALL FILES BELONGING TO FORKS INFERIOR TO THIS EXEC.
	HRLI A,B1		;SAY DON'T CLOSE MY FILES
	HRRI A,B0		;SAY ME
	CLZFF
	RET

;SSAVE (PAGES FROM) N (TO) N, (FROM) N (TO) N ... (ON) FILE
;SHARABLE SAVE, WITH READ-EXECUTE PAGE ACCESS.
;CODING SIMILAR TO "SAVE", SEE ITS COMMENTS.
;SHOULD WE CHECK THAT PAGES EXIST?

.SSAVE:	SKIPGE FORK
	ERROR <NO PROGRAM>
	NOISE <PAGES FROM>
	MOVEI B,1(P)		;WHERE TABLE WILL BEGIN IN PUSHDOWN
SSAV1:	CALL OCTAL
	 JRST [	ALLOW TALT
		MOVEI A,0
		U$TYPE [ASCIZ /0 /]
		JRST .+1]
	ALLOW TSPC+TALT+TLPR
	CAILE A,777
	JRST CERR
	PUSH P,A
	NOISE (TO)
	CALL OCTAL
	JRST [	ALLOW TALT
		MOVEI A,777
		U$TYPE [ASCIZ /777 /]
		JRST .+1]
	SUB A,(P)		;FORM -# PAGES
	MOVN A,A		;..
	SUBI A,1		;..
	JUMPGE A,CERR
	HRLM A,(P)
	MOVEI A,520		;READ-EXECUTE PERMIT, DUPLICATE ON WRITE
	DPB A,[POINT 9,(P),26]		;PUT PROTECTION IN TABLE WORD
	CAIN TRM,","
	JRST [	CALL SAVNOI		;SPECIAL HANDLING OF NOISE "(FROM)"
		JRST SSAV1]
	ALLOW TSPC+TALT+TLPR+TLAN
	NOISE <ON>
	TLZ Z,EOLNEF			;EOL JUST TRIGGERED [NEW FILE]
	HRROI A,[ASCIZ /SAV/]
	CALL COUTFN
	 JRST CERR
	CONFIRM
	PUSH P,[0]
	HRL A,FORK
	HRR A,CJFN1
	SETZ C,
	SSAVE
	CALL RLJFNS
	JRST CMDIN4

;STOPS N,N,N...
;SETS TERMINAL TAB STOPS TO INDICATED COLUMNS

.STOPS:	SETZB B,C		;CLEAR 3 AC'S IN WHICH TO ACCUMULATE
	SETZ D,		;...TAB STOP BITS IN SYSTEM FORMAT.
STOPS1:	CALL DECIN		;INPUT DECIMAL NUMBER
	 JRST CERR
	CAILE A,^D107
	 JRST CERR
	ALLOW TCOM+TEOL+TSPC+TALT
	MOVE E,A
	IDIVI E,^D36		;DIVIDE INTO WORD AND BIT NUMBERS
	HRLZI A,B0
	MOVN F,F
	LSH A,(F)		;POSITION BIT
	IORM A,B(E)		;MERGE INTO PROPER WORD
	TRNE CBT,TCOM
	JRST STOPS1		;AFTER COMMA GET ANOTHER
	CONFIRM
	MOVE A,COJFN
	STABS		;SET TABS FROM B, C, D.
	MOVEM B,PTTYMD+1		;PROGRAM TELETYPE MODES
	MOVEM C,PTTYMD+2
	MOVEM D,PTTYMD+3
	MOVEM B,ETTYMD+1		;AND EXEC'S TELETYPE MODES BLOCK
	MOVEM C,ETTYMD+2
	MOVEM D,ETTYMD+3
	RET

;START
;DECODE AND CHECK SUBROUTINE ALSO USED BY REDIRECT/DETACH

$START:	SKIPGE A,FORK		;HANDLE OF INFERIOR FORK, OR -1
	ERROR <NO PROGRAM>
	GEVEC
	HLRZ B,B
	CAIE B,<JRST>B53
	 JRST [	CAIGE B,1
		UERR [ASCIZ /NO START ADDRESS/]
		RET]
	MOVEI A,.JBSA
	CALL MAPPF
	TLNN A,B5
	ERROR <NO PAGE 0>
	TLNN A,B2
	ERROR <PAGE 0 READ-PROTECTED>
	MOVEI A,.JBSA
	HRRZ A,PAGEN(A)
	JUMPE A,[UERR [ASCIZ /NO START ADDRESS/]]
	RET

;START COMMAND DISPATCHES HERE

.START:	CALL $START
	CONFIRM
;"RUN" JOINS HERE
;REDIRECT/DETACH...(AND) START  JOINS HERE

..STRT:	MOVNI B,1		;START CODE FOR PA1050
	CALL CHKPAT
	JUMPG B,.+2		;PA1050 START IF POSITIVE
	SETZ B,		;ENTRY VECTOR INDEX 0 FOR START

;"EDIT" ENTRY
START1:	MOVEI E,PTTYMD
	CALL LTTYMD		;SET PGM TTY MODES

;START FORK WHOSE HANDLE IS IN "FORK" USING ENTRY VECTOR INDEX IN B.
;"REENTER" JOINS HERE.

START2:	TLO Z,RUNF		;SAY PROGRAM'S TTY MODES ARE IN EFFECT
	SETO A,		;DON'T WANT ANY MAPPED PAGES WHILE RUNNING PROG,
	CALL MAPPF		;SO CLEAR BUFFER "PAGEN".
	CALL IFORK		;PREPARE FORK(S) AND SETUP RFORK
	CAIL B,1000		;PROPER ENTRY VECTOR DISPATCH?
	JRST [	TLNN B,1	;DON'T START IF LH NON-0
		SFORK		;NO, PA1050 OR OTHER SPECIAL START
		JRST WAIT]
	SFRKV		;START FORK USING ENTRY VECTOR (USES A,B)

;START AND REENTER...
;CONTINUE AND GOTO JOIN HERE.
;ANY OF THE ABOVE WITH REDIRECT OR DETACH ALSO GET HERE.
;WAIT FOR FORK TO TERMINATE, AFTER DETACHING TERMINAL IF "DTACHF" ON.

WAIT:	TLNE Z,DTACHF		;"DETACH" COMMAND?
	DTACH			;YES, DETACH CONTROLLING TERMINAL.

	MOVE A,RFORK		;INFERIOR BEING RUN
	RFORK			;RESUME
	WFORK			;WAIT
	INTOFF
	MOVE A,RFORK
	FFORK			;FREEZE IT IMMEDIATELY
	MOVE B,[CALL CUUO]	;SET UUO DISPATCH TO FRUSTRATE
	MOVEM B,41		;MALICIOUS USERS

	MOVEI E,PTTYMD		;SAVE TTY MODES, AS MODIFIED BY PROGRAM
	CALL RTTYMD		;..
	TLZ Z,RUNF		;SAY PROG'S TTY MODES NOT IN EFFECT
	MOVEI E,ETTYMD		;RESTORE EXEC'S TTY MODES
	CALL LTTYMD		;..

;ANALYZE REASON FOR TERMINATION

	RFSTS
	TLZ A,(1B0)		;FLUSH FROZEN BIT
	CAMN A,[2B17]		;VOLUNTARY TERMINATION IS NORMAL
	 JRST [	INTON
		JRST CMDIN2]	;GO INPUT COMMAND
	TLNE A,077700		;DISTINGUISH -1 FROM 0-5, 400000-400005.
	 JRST [	SETOM FORK	;-1 = UNASSIGNED HANDLE, SAY NO FORK.
		SETOM RFORK	;..DOES THIS HAPPEN IF IT KFORKS ITSELF,
		INTON
		UERR [ASCIZ /PROGRAM KILLED ITSELF/]];OR IS IT SCREWUP?
	PUSH P,A
	INTON
	POP P,A

;START AND REENTER ETC...
;NON-VOLUNTARY TERMINATION
;ALSO USED FOR UNUSUAL TERMINATION OF EPHEMERON
INVOLT:	JUMPL A,[CALL SCREWUP]
	HLRZ C,A
	CAIE C,3		;FORCED TERMINATION (UNENABLED ERROR PSI)
	CALL SCREWUP
	MOVEI A,(A)		;MASK PSI CHANNEL THAT CAUSED IT
	CAIG A,^D35		;CHECK AGAINST TABLE LIMITS
	CAIGE A,0		;..
	CALL SCREWUP
;MESSAGE TABLE ADDRESSED BY FOLLOWING LOC ALSO USED BY "RUNSTAT".

WHY:	XCT .+1(A)		;ERROR MESSAGE FROM TABLE FOLLOWING
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 0. THESE HAPPEN IF
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; PROGRAM ACTIVATES CHANNEL
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; BUT DOES NO EIR OR SIR OR
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; HAS 0 TABLE WD FOR CHANNEL.
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 4
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 5
	 ERROR <OVERFLOW AT %2P>; CHAN 6. %2P => TYPE PC FROM RH B OCTAL
	 ERROR <FLOATING OVERFLOW AT %2P>; CHAN 7
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 8
	 ERROR <PUSHDOWN OVERFLOW AT %2P>; CHAN 9
	 ERROR <END-OF-FILE AT %2P>; CHAN 10
	 ERROR <IO DATA ERROR AT %2P>;
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 12 "FILE CONDITION 3"
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 13 "FILE CONDITION 4"
	 ERROR <CHAN %1Q INTERRUPT AT %2P>; CHAN 14. TIME OF DAY.
	 ERROR <ILLEG INST %2X>; %X:INST "AT" PC, SYS MSG IF JSYS
	 ERROR <ILLEG MEM READ AT %2P>
	 ERROR <ILLEG MEM WRITE AT %2P>
	 ERROR <ILLEG MEM XCT AT %2P>
	 ERROR <FORK TERMINATION INTERRUPT AT %2P>; CHAN 19
	 ERROR <MACH SIZE EXCEEDED AT %2P>
	 REPEAT ^D15,<ERROR <CHAN %1Q INTERRUPT AT %2P>
>		;CHAN 21-35

;PREPARE INFERIOR FORK STRUCTURE, CALLED BY GOTO AND START

IFORK:	MOVE A,FORK
	MOVEM A,RFORK		;RETURN THIS  IN A
	RET

;ROUTINE TO SETUP FORK IF PA1050 HAS BEEN INVOKED. START, REENTER,
; GOTO, AND DDT ALL GO TO PA1050 INSTEAD OF THE PROGRAM.
; THE PREVIOUS FORK PC IS ALSO GIVEN TO PA1050, AND IT IN TURN
; FINDS THE PROGRAM'S OLD PC, SETS UP .JBOPC, AND STARTS THE PGM.
; WORD 6 OF THE PA1050 ENTRY VECTOR IS THE START LOCATION FOR THIS.
; LH OF WORD 7 IS WHERE TO STORE FUNCTION CODE: -1 START, -2 REENTER,
;  -3 DDT, +N GOTO N
; RH OF WORD 7 IS WHERE TO STORE FORK'S OLD PC

CHKPAT:	PUSH P,B		;SAVE CODE WORD
	PUSH P,C
	MOVE A,FORK
	GCVEC			;PA1050 ENTRY VECTOR
	HLRZ C,B		;CHECK FOR LENGTH GREATER THAN 8
	CAIGE C,1000		;WHICH ELIMINATES OLD PA1050 VERSIONS
	CAIGE C,10		;AS WELL AS NON-PA1050 PGMS.
	JRST [	POP P,C
		POP P,B
		RET]
	MOVEI A,6(B)
	CALL LOADF		;GET PA1050 RESTART LOC
	EXCH A,-1(P)		;SAVE IT, GET CODE WORD
	PUSH P,A
	MOVEI A,7(B)
	CALL LOADF		;GET PTRS FOR RESTART DATA
	PUSH P,A
	MOVE A,FORK
	RFSTS			;GET FORK'S OLD PC
	HLRZ A,A
	CAIE A,400002		;HALT OR FORCE TERM?
	CAIN A,400003
	JRST [	MOVE A,FORK	;YES, MUST RESTART FORK
		SFORK
		JRST .+1]
	HRRZ A,0(P)		;PTR TO CELL FOR IT
	CALL STOREF		;STORE OLD PC IN PA1050 VARIABLE AREA
	POP P,A
	HLRZ 1,1		;PTR TO CELL FOR CODE WORD
	POP P,B			;CODE WORD
	CALL STOREF		;STORE IT
	POP P,C
	POP P,B			;RETURN PA1050 RESTART LOC IN B
	MOVNI A,0(B)		;IF RH OF WD 6 IS .L. 36, IT IS
	CAMG A,[-^D36]		;PSI CHANNEL TO BE GOOSED RATHER THAN
	RET			;A RESTART LOCATION
	MOVSI B,(1B0)		;COMPUTE PROPER BIT
	LSH B,0(A)
	MOVE A,FORK
	AIC			;BE SURE CHANNEL ON AND PSI ON
	EIR
	IIC
	MOVSI B,1		;RETURH LH NON-0 TO PREVENT SFORK
	RET

;"TYPE" AND "LIST" ARE IN A SEPARATE FILE BELOW.

;UNDELETE <DELETED FILE NAMES>

.UNDEL:	NOISE (FILES)
	MOVE A,[2,,2]	;DEFAULT NAME AND EXT TO PRECEDING ONES IN GRP
	MOVEI B,B2+B8+B11+B15+B16 ;"MUST BE NEW" AND "IGNORE DELETED BIT"
	CALL SPECFN		;INPUT FILE NAME USING GTJFN FLAGS IN B
	 JRST CERR		;NO DEFAULT FOR NULL INPUT
	ALLOW TSPC+TALT+TEOL
	CONFIRM
UNDEL1:	HRRZ A,@INIFH1		;JFN
	DVCHR
	TLNN B,B4		;MULT DIR DEVICE?
	ERROR <YOU CAN'T UNDELETE NON-DISK FILES>
	HRRZ A,@INIFH1
	MOVE B,[1,,FDBCTL]	;CONTROL BITS WORD OF FILE DESC BLOCK
	MOVEI C,C		;READ INTO C
	CALL $GTFDB		;DO GTFDB JSYS, NO SKIP IF NO ACCESS
	SETO C,		;NO ACCESS, ASSUME DELETED
	TLNN C,<FDBDEL>B53		;"FILE IS DELETED" BIT
	JRST [	TLNN Z,GROUPF		;SKIP IF GROUP BEING PROCESSED
		UERR [ASCIZ /NOT DELETED/]; ERROR IF NOT GROUP
		JRST UNDEL8]		;IN GROUP JUST SKIP THOSE ALREADY DLTED
	CALL TYPIF		;TYPE NAME IF GROUP
	HRLI A,FDBCTL		;1: DISPLACEMENT,,JFN
	HRLZI B,<FDBDEL>B53		;MASK OF BITS TO CHANGE
	SETZ C,		;VALUE TO CHANGE TO: OFF.
	CHFDB		;CHANGE FILE DESCRIPTOR BLOCK
UNDEL8:	CALL GNFIL		;GET JFN OF NEXT FILE OF GROUP
	JRST RLJFNS		;NO MORE, RELEASE JFN, GO GET NEXT COMMAND.
	JRST UNDEL1		;HAVE ANOTHER

;UNMOUNT <DEVICE>

.UNMOU:	NOISE (DEVICE)
	CALL DEVN
	TLNN B,B7
	ERROR <%1H: NOT A MOUNTABLE DEVICE>
	TLNN B,B5
	JRST [	TLNN B,B6
		UERR [ASCIZ /%1H: NOT AVAILABLE/]
		UERR [ASCIZ /%1H: ASSIGNED TO JOB %3Q/]]
	TLNN B,B8
	ERROR <%1H: NOT MOUNTED>
	CONFIRM
	DSMNT
	 CALL JERR
	RET

;UNLOAD AND REWIND COMMANDS

.UNLOA:	MOVEI F,11		;MTOPR UNLOAD FUNCTION
	CAIA
.REWIN:	MOVEI F,1		;MTOPR REWIND FUNCTION
	NOISE (DEVICE)
	CALL DEVN		;GET A DEVICE NAME
	TLNN B,B5		;AVAILABLE?
	JRST [	TLNN B,B6
		UERR [ASCIZ /%1H: NOT AVAILABLE/]
		UERR [ASCIZ /%1H: ASSIGNED TO JOB %3Q/]]
	LDB C,[POINT 9,A,17]	;GET DEVICE TYPE
	CAIE C,3		;IS IT DECTAPE?
	CAIN C,2		;OR MAG TAPE?
	CAIA			;YES
	 ERROR < MUST BE DECTAPE OR MAG. TAPE>
	CONFIRM
	TLO A,40000		;NO DIRECTORY (FOR DECTAPE)
	MOUNT
	 CALL JERR
	HRRZ D,A		;GET UNIT NUMBER
	LSH D,^D8
	IOR D,[ASCII /DTA0:/]	;FOR DEVICE NAME STRING
	CAIE C,3		;DECTAPE?
	TLO D,(<"MTA0:"-"DTA0:">_1)	;NO, MAKE IT MAG TAPE
	MOVSI A,1		;SHORT FORM GTJFN
	HRROI B,D		;NAME STRING POINTER
	MOVEI E,0		;MAKE NAME STRING ASCIZ
	GTJFN
	 CALL JERR
	MOVE B,[17B9+1B19]	;DUMP MODE, READ
	OPENF
	 CALL JERR
	MOVE B,F		;MTOPR FUNCTION
	MTOPR
	CLOSF
	 CALL JERR
	RET

;WHERE (IS USER) <NAME>

.WHERE:	NOISE <IS USER>
	CALL DIRNAM		;INPUT DIR (USER) NAME WITH RECOGINITION
	TLNE A,B0
	 JRST CERR		;NOT LOG-IN-UNDER-ABLE
	ALTYPE ( )
	ALLOW TEOL+TSPC+TALT
	CONFIRM		;NEEDED EVEN THOUGH ITS A NON-CONFIRMATION CMD!
	SETZ C,		;SETUP FOR NOT HERE
	PUSH P,A
	MOVE A,['JOBDIR']
	SYSGT			;GET LENGTH OF TABLE AND NUMBER
	HLLZ D,B		;NEG LENGTH FOR AOBJN
	MOVEI E,0(B)		;TABLE NUMBER
WHERE1:	GTB 0(E)		;GET AN ENTRY FROM TABLE
	XOR A,(P)		;COMPARE
	MOVEI A,(A)		;...MASK RIGHT HALF
	JUMPN A,WHERE9
;MATCH FOUND, USE TABLE 0 TO CONVERT JOB # TO TTY #
	HRLZ A,D
	GETAB
	 CALL JERR
	MOVEI B,0(D)		;JOB NUMBER
	JUMPE B,WHERE9		;DONT SHOW JOB 0
	JUMPL A,[ETYPE < DETACHED, JOB %2Q  >
		JRST WHERE7]
	HLRZ A,A
	ETYPE < TTY%1O%, JOB %2Q, >

;PRINT FOREIGN HOST NAME IF A NETWORK TTY
WHERE4:	PUSH P,A		;SAVE TTY# TO COMPARE AGAINST
	MOVE A,['LHOSTN']
	SYSGT
	JUMPE B,WHERE6		;TABLE DOES NOT EXIST??
	HRLI A,1		;TABLE INDEX
	HRR A,B			;TABLE NUMBER
	GETAB
	 JRST WHERE6
	HLRE B,A		;MINUS THE NUMBER OF NET TTY'S
	MOVMS B
	HRRZS A			;LOWEST NUMBERED NET TTY
	ADD B,A			;1 + HIGHEST NUMBERED NET TTY
	CAMG A,0(P)		;REJECT IF TTY# .LE. LOWEST NET TTY
	CAMG B,0(P)		;REJECT IF HIGHEST+1 .LE. TTY#
	 JRST WHERE6
	MOVE A,['NETBUF']
	SYSGT
	JUMPE B,WHERE6		;NO SUCH TABLE??
	HLLZ F,B		;MAKE AOBJN PTR
	HRRZ G,B		;SAVE TABLE NUMBER

WHERE5:	HRR A,G			;TABLE NUMBER
	HRL A,F			;INDEX UNDER CONSIDERATION
	GETAB
	 CALL JERR
	XOR A,0(P)		;COMPARE
	HRRZS A			;JUST RIGHT HALF
	JUMPN A,WHER58		;TTY# DOES NOT MATCH, TRY NEXT ENTRY

WHER51:	MOVE A,['NETSTS']
	SYSGT
	JUMPE B,WHERE6		;TABLE DOESN'T EXIST??
	HRR A,B			;TABLE NUMBER
	HRL A,F			;INDEX
	GETAB
	 CALL JERR
	TLC A,340000		;LOOK FOR 7 IN LEFT 4 BITS
	TLNE A,740000
	JRST WHER58		;NOT IN THE RIGHT STATE

WHER52:	MOVE A,['NETAWD']	;FOUND MATCH
	SYSGT			;NOW GET THE FOREIGN HOST NUMBER
	JUMPE B,WHERE6		;TABLE DOES NOT EXIST??
	HRR A,B			;TABLE NUMBER
	HRL A,F			;INDEX
	GETAB
	 CALL JERR
	LDB B,[POINT 9,A,17]	;FOREIGN HOST NUMBER

	MOVE A,COJFN		;OUTPUT JFN
	MOVEI C,^D10		;IN CASE NOUT IS NEEDED
	CVHST			;HOST TO STRING CONVERSION
	 NOUT			;DON'T KNOW THAT HOST, PRINT AS NUMBER
	  JFCL			;STRING PRINTED OR SCREWY NOUT(??)
	MOVEI B,","
	BOUT
	MOVEI B," "
	BOUT
	JRST WHERE6		;DONE

WHER58:	AOBJN F,WHERE5		;TRY NEXT NETBUF TAB ENTRY

WHERE6:	SUB P,[1,,1]		;FLUSH SAVED TTY#

;PRINT SUBSYSTEM NAME
WHERE7:	MOVE A,['JOBNAM']
	SYSGT
	JUMPE B,WHERE8
	HRR A,B
	HRL A,D
	GETAB
	 CALL JERR
	MOVE C,A
	MOVE A,['SNAMES']
	SYSGT
	 JUMPE B,WHERE8
	HRR A,B
	HRL A,C
	GETAB
	 CALL JERR
	JUMPE A,[	PRINT "?"
		JRST WHERE8]
	CALL SIXPRT	;PRINT IT
WHERE8:	PRINT EOL
	SETO C,		;SAY AT LEAT ONE FOUND
;AFTER TYPING CONTINUE LOOP IN CASE HE HAS SEVERAL JOBS.

WHERE9:	AOBJN D,WHERE1
	SKIPN C
	UTYPE [	ASCIZ / NOT LOGGED IN
/]
	JRST CMDIN4

LITC3:	LIT		;LITERALS HERE TO REDUCE WORKING PAGE SET --
		;CODE FOLLOWING IS RELATIVELY RARELY USED.

;PRIVILEGED COMMANDS

;^E EDDT
;TRANSFER CONTROL TO TENEX DDT, GETTING IT IF IT ISN'T ALREADY THERE.

.EDDT:	SKIPE DDTORG
	 JRST EDDT3		;DDT ALREADY THERE
	MOVE B,[POINT 7,[ASCIZ /<SUBSYS>UDDT.SAV/],-1]
	CALL $GTJFN		;ENTRY TO "$LPT" SUBR NEAR "DIRECTORY"
	HRLI A,B0		;SAY THIS FORK (JFN IS IN RH A)
	GET
	CALL RLJFNS
	MOVEI A,400000
	MOVE B,[3,,EXEC]	;ENTRY VECTOR
	SEVEC			;MAKE EV POINT AT EXEC, NOT DDT


;IF WE CAN FIND A SYMBOL TABLE POINTER, PUT IT IN THE DDT.
EDDT3:	SKIPN A,..JBSYM		;HAVE WE SAVED SYMBOL TABLE POINTER?
	SKIPE A,.JBSYM		;NO, 10/50 SYMBOL TABLE POINTER?
	CAIA
	 JRST EDDT4		;NO. START DDT.
	MOVEM A,@DDTORG+1	;STORE SYMBOL TABLE POINTER INTO DDT
	MOVE B,..JBUSY
	SKIPN A			;SOURCE OF .JBUSY MUST BE SAME AS .JBSYM
	MOVE B,.JBUSY
	MOVEM B,@DDTORG+2
;DEASSIGN ^C, SO THAT ^C'S IN DDT WILL GO TO SUPERIOR EXEC.

EDDT4:	CALL INFER		;SKIP IF INFERIOR EXEC
	JRST EDDT5		;AT TOP LEVEL LEAVE ^C ENABLED
	MOVEI A,B0		;THIS FORK
	RPCAP			;ENABLED CAPS INTO C
	MOVEI A,CTRLC
	TLNE C,B0		;^C SPEC CAP ENABLED?
	DTI			;YES, DEASSIGN ^C
EDDT5:	JRST DDTORG		;ENTER DDT

;DISABLE
;DISABLES PRIVILEGED COMMANDS,
;DISABLES USER (RH) SPEC CAPS IN EXEC AND INFERIOR FORK
; (CAPS POSSIBLE ARE STILL TRANSMITTED, SO INFERIOR CAN USE THEM
; IF IT ENABLES THEM ITSELF)

.DISAB:	SETZM PRVENF		;SAY PRIVILEGED COMMANDS OFF
DISAB1:	MOVEI A,B0		;"ENABLE" JOINS HERE
	RPCAP
	TRZ C,-1
	SKIPE PRVENF
	HRR C,B
	EPCAP		;EXEC'S CAPABILITIES
	SKIPG A,FORK
	RET		;NO INFERIOR, DONE
	RPCAP
	TRZ C,-1
	SKIPE PRVENF
	HRR C,B
	EPCAP		;INFERIOR'S CAPS
	RET

;ENABLE
;ENABLES OTHER PRIVILEGED COMMANDS IN EXEC, AND ENABLES
;RH (USER) SPECIAL CAPS IN EXEC AND IN INFERIOR FORK, IF THERE IS ONE.

.ENABL:	SETOM PRVENF		;SAY PRIVILEGED COMMANDS ENABLED
	JRST DISAB1

;^ELOGOUT (JOB #)

..LOGO:	PUSH P,A
	GJINF
	CAMN 3,0(P)		;THIS JOB?
	ERROR <IF YOU WANT TO LOGOUT THIS JOB, USE LOGOUT>
	MOVE 1,['JOBRT ']
	SYSGT			;TABLE OF RUNTIMES
	MOVE 1,2
	HRL 1,0(P)
	GETAB
	 CALL JERR
	JUMPGE 1,.+2		;REQUESTED JOB EXISTS?
	ERROR <THAT JOB DOES NOT EXIST>
	CONFIRM
	POP P,1
	LGOUT
	 CALL JERR
	JRST CMDIN4

;HALT THE SYSTEM
; NO BITS LEFT IN COMMAND FLAGS FOR A "MAINTENANCE" CAP. BIT
; THUS, PRVCK CAN'T ALLOW "ENABLE", AND THUS, ^E CANNOT PREFIX THE HALT.

.HALT:	CALL SPRTR		;ANALYZE SEPARATOR
	 JRST CERR		;R1: MORE FOLLOWS
	 TLO Z,F1		;R2: SUBCOMMANDS FOLLOW
	 CONFIRM		;R3: END OF COMMAND
	MOVEI 1,400000		;EXEC FORK
	RPCAP
	TRNN 3,1B18!1B19	;WHEEL OR OPERATOR MUST BE ENABLED
	TRNE 2,1B21		;MAINT. CANT ENABLE, DO IT FOR HIM
	CAIA
	 JRST CERR
	PUSH P,3		;ENABLED CAPABILITIES
	PUSH P,2		;POSSIBLE CAPABILITIES
	CALL SUPER
	TLNN Z,F1		;SUBCOMMANDS?
	JRST HALT2		;NO.

HALT0:	MOVE 1,['SYSTAT']
	SYSGT
	JUMPE B,CERR		;NO SUCH TABLE??
	MOVSI 1,27
	HRR 1,2
	GETAB			;GET ANY CURRENTLY SET DOWN TIME
	 CALL JERR
	MOVEM 1,DOWNTM		;USE AS DEFAULT
	MOVSI 1,30
	HRR 1,2
	GETAB
	 CALL JERR
	MOVEM 1,UPTIME		;DEFAULT UP TIME
	SUBCOM $HALT		;DO SUBCOMMANDS TO MODIFY THESE
	JRST HALT3		;GO MAKE ABSOLUTE

HALT2:	MOVEI 1,5		;NO SUBCOM'S.  DOWN IN 5 MIN.
	MOVEM 1,DOWNTM
	SETZM UPTIME		;WHO KNOWS WHEN IT WILL BE UP AGAIN?


HALT3:	MOVE 1,UPTIME
	IOR 1,DOWNTM
	JUMPE 1,HALT4		;BOTH 0 ==> RETRACT
	SKIPN 2,DOWNTM		;SKIP IF ABSOLUTE OR REL.
	MOVEI 2,5		;NOT SET. DEFAULT TO 5 MIN.
	GTAD			;WHAT TO ADD REL. TO
	TLNE 2,-1		;DOWNTM IS ABS?
	JRST .+3		;YES
	CALL TIMPMN		;ABS IN 1 PLUS MINS IN 2
	MOVEM 1,DOWNTM		;THAT'S THE DOWN TIME

	SKIPE 2,UPTIME		;IF UPTIME IS NOT SET...
	TLNE 2,-1		;OR IS ABSOLUTE,
	 JRST HALT4		;THEN TAKE AS IS.
	MOVE 1,DOWNTM		;OTHERWISE IT IS RELATIVE TO DOWN TIME
	CALL TIMPMN		;TIME IN 1 PLUS MINUTES IN 2
	MOVEM 1,UPTIME

HALT4:	POP P,3			;CAPABILITIES POSSIBLE
	MOVEI 1,CTRLC		;^C TERMINAL CODE
	TLNE 3,(1B0)		;^C CAP. ENABLED?
	DTI			;YES, DEASSIGN IT
	MOVEI 1,400000		;THIS FORK
	EPCAP

HALT7:	MOVE 1,DOWNTM
	MOVE 2,UPTIME
	HSYS
	 TLOA Z,F1		;REMEMBER HSYS FAILED
	TLZ Z,F1		;HSYS WAS OK
	MOVEI 1,400000
	POP P,3			;RESTORE CAPS. AS THEY WERE AT ENTRY
	EPCAP
	MOVE 1,[CTRLC,,1]	;^C ON CHAN 1
	TLNE 3,(1B0)		;IF SPECIAL CAP IS ENABLED
	ATI
	TLNE Z,F1		;DID HSYS FAIL?
	 JRST CERR		;YES
	RET			;NO

$HALT:	TABLE
	T AT,LPROK,..HLTA
	T FOR,LPROK,..HLTF
	T IN,LPROK,..HLTI
	T RETRACT,ONEWD,..HLTR
	T TODAY,LPROK,..HLT0
	T TOMORROW,LPROK,..HLT1
	T UNTIL,LPROK,..HLTU
	TEND


..HLTA:	NOISE <DATE AND TIME>
	CALL DATEIN
	MOVEM A,DOWNTM
	RET


..HLTF:	NOISE <NUMBER OF MINUTES>
	CALL DECIN
	 JRST CERR
	JUMPL A,CERR
	ALLOW TALT+TSPC+TEOL
	CONFIRM
	HRRZM A,UPTIME		;A RELATIVE TIME
	RET


..HLTI:	NOISE <NUMBER OF MINUTES>
	CALL DECIN
	 JRST CERR
	JUMPLE A,CERR
	ALLOW TALT+TSPC+TEOL
	CONFIRM
	HRRZM A,DOWNTM		;A RELATIVE TIME
	RET

..HLTR:	NOISE <ANY PENDING SHUTDOWN REQUEST>
	SETZM DOWNTM		;NO KNOWN DOWN TIME
	SETZM UPTIME		;OR UPTIME
	RET

..HLT0:	NOISE <AT TIME>
	CONFIRM
	JRST NIYE

..HLT1:	NOISE <AT TIME>
	CONFIRM
	JRST NIYE


..HLTU:	NOISE <DATE AND TIME>
	CALL DATEIN
	MOVEM A,UPTIME
	RET


;ADD THE MINUTES IN 2  TO THE TAD IN 1

TIMPMN:	IMULI 2,^D60		;MAKE IT SECONDS
	ADDI 2,0(1)		;ADD IN SECONDS FROM TAD
	IDIVI 2,^D<60*60*24>	;NUMBER OF SECONDS IN A DAY
	MOVSS 2			;0 FOR TODAY, 1,,0 FOR TOMORROW, ETC
	ADD 1,2			;BUMP DAY
	HRR 1,3			;INSERT SECONDS
	RET

;^E SET (DATE AND TIME)

.SET:	NOISE <DATE AND TIME>
		;FALL INTO "INDT" WHICH DOES THE REST

;SUBROUTINE TO INPUT AND SET DATE AND TIME
;FOR MAIN LOOP AND ^E SET COMMAND.


INDT:	CALL DATEIN		;INPUT DATE AND TIME
	PUSH P,1
	CALL CHKDAT		;SKIP IF IT LOOKS OK
	 JRST [	TYPE < PLEASE RECONFIRM: >
		MOVE 1,COJFN	;PRIMARY OUTPUT JFN
		MOVE 2,0(P)	;DATE TYPED IN
		SETOM 3		;VERBOSE FORMAT
		ODTIM
		CONFIRM
		JRST .+1]
	POP P,A
	STAD			;SET TIME AND DATE
	 CALL [	CAIN A,STADX1	;SPEC CAP NOT ENABLED ERROR?
		RET		;YES. GO QUIETLY AWAY
		JRST JERR]
	RET


;CHECK TYPED IN TIME TO BESURE IT IS OK FOR STAD
; CURRENTLY THIS MEANS WITHIN 11 HRS. AFTER LAST FACT FILE WRITE

CHKDAT:	PUSH P,1
	INTOFF			;BE SURE JFN WILL GET STACKED
	MOVSI 1,(1B2!1B17)
	HRROI 2,[ASCIZ /<ACCOUNTS>FACT./]
	GTJFN
	 JRST [	INTON		;CAN'T GET JFN, FORCE RECONFIRMATION
		JRST CHKDA9]	;NO-SKIP RETURN
	MOVE 2,JBUFP		;JFN STACK PTR
	PUSH 2,1		;SAVE FOR RELEASE AT ^C OR ERROR
	MOVEM 2,JBUFP
	INTON
	MOVE 1,0(2)		;GET THE JFN BACK
	MOVE 2,[1,,FDBWRT]
	MOVEI 3,3
	CALL $GTFDB		;DON'T SKIP IF ACCESS LACKING
	 JRST CHKDA8
CHKDA4:	MOVE 2,0(P)		;DATE TYPED IN
	SUBI 2,^D<11*60*60>	;TIME LIMIT = 11 HRS.
	TRNE 2,1B18		;SECONDS WRAPPED AROUND?
	ADD 2,[-1,,^D<24*60*60>];YES, CONVERT A DAY INTO SOME SECONDS
	CAMG 3,0(P)		;LOSE IF FILE NEWER THAN TYPED IN DATE
	CAMG 3,2		;OR IF INPUT - 11 NOT NEWER THAN FILE
	CAIA
	 AOS -1(P)		;DATE LOOKS GOOD, SKIP

CHKDA8:	CALL RLJFNS
CHKDA9:	POP P,1
	RET

