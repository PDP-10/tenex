




          Version 4 of MACN11 is basically a release for Tenex  sites.
     It  has  changed  sufficiently  from  Version  3  to  warrant its
     release, but we have not tested it  in  the  configuration  which
     uses a DEC system interface.

          The following files are available in [ISID]<VOICE>:

        MACN11.MAC
        MACN11.SAV   -- .SAV file for standard Tenex configuration
        MACN11.TDOC  -- User document for Tenex configuration
        MACN11.DDOC  -- User document for DEC configuration
        MACN11.USER-DOCUMENT/RNO - XOFF/RUNOFF file for user documents
        MACN11.IDOC  -- Installation document
        MACN11.INSTALLATION-DOCUMENT/RNO - RUNOFF file for same

          The user document files (-.TDOC & -.DDOC) are both generated
     from  MACN11.USER-DOCUMENT/RNO.   This  file  is  standard RUNOFF
     input except for use of an XOFF switch to conditionally  generate
     certain  parts  differently  to  suit  the  two  basic  assembler
     configurations.  The default setting (switch 1 off)  matches  the
     Tenex configuration.

          These files can  be  retrieved  from  ISID  by  using  FTP's
     anonymous login -- user name "anonymous" with any password.

	Notes on MACN11 Version 4                          Page   2
	Installation Options


     Installation options
     --------------------


          The  source  for  MACN11  contains  a  number  of   assembly
     parameters  to allow customizing it for individual installations.
     Most are set to default values if they are undefined early in the
     assembly.  This allows specifying their values in a separate file
     when assembling MACN.  The most useful of these  parameters,  and
     their default values, are .  .  .


      Name           Default Value    Meaning
     --------        -----------     ---------------------------------

     TENEX               1           1 => Use Tenex system interface,
                                     0 => Use DEC system interface

     CCLSW               0           1 => Generate CCL support
                                          (Ignored if Tenex = 1 --
                                           There'sno Tenex code yet
                                           to support CCL)

     PAGSIZ           ^D54           Number of lines per page
                                     on listing output

     MD20SW              0           1 => Issue a Z flag for all
                                          non-model 20 instructions

     CMUSW               0           1 => Generate CMU configuration

     STANSW              0           1 => Configure for Stanford

     ENDEF   LCFLG+PNCFLG+REGFLG     Default .ENABL modes; bit names
                                     are "xxxFLG", where "xxx" is an
                                     operand of .ENABL/.DSABL.

     LDEF  777777-LLD-LME-LMEB-LTTM-LSON Default .LIST modes;
                                     Bit names are "Lxxx", where "xxx"
                                     is an operand of .LIST/.NLIST.

     Both LDEF and ENDEF are set at points in the  source  immediately
     following the bit definitions they use.  Of the parameters listed
     above these are the only two which require editing MACN11.MAC  to
     change.

	Notes on MACN11 Version 4                          Page   3
	Installation Options


          Additional symbols can be  predefined  by  assembling  their
     definitions  into  the  prototype  symbol  table  which begins at
     location PERMST, near the end of the  assembly.   This  table  is
     kept  in  ascending  order  by  the  .RAD50 (mod 40) value of the
     symbol, which is equivalent to alphabetic order  except  for  "."
     and "$".  Entry format is .  .  .

             XWD                     ; type-flags,value
             GENM40  N,A,M,E         ; 1-6 characters

     Type flags may be .  .  .

     DEFSYM  -- Symbol is defined
     REGSYM  -- Symbol identifies a register
     GLBSYM  -- Symbol is global (external if DEFSYM not set)





     ---------  Internal Symbol Definitions  ----------



          When .ENABL ISD is in  effect,  internal  symbol  definition
     entries  are  included  in  the  generated object module's global
     symbol dictionary.  These are  type  2  GSD  entries,  which  are
     identified  in appendix B (B.1.3) of the DOS/Batch Linker manual.
     Their format is:


             ---------------------------------
             !            Symbol             !
             !             Name              !
             ---------------------------------
             !      2        !     Flags     !
             ---------------------------------
             !            Value              !
             ---------------------------------


     The symbol name is two words in .RAD50 format.

     The flag byte currently has only one bit defined: Bit 0 is set if
     the symbol is a register name.  All undefined bits are set to 0.

     The value is identical to that field in global symbol name  (type
     4) entries: It is the symbol's offset from the start of the csect
     identified by the most recent type 1  (csect  name)  entry.   ISD
     values  are  absolute  if they follow the absolute csect's type 1
     entry.
